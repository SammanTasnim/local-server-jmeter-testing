/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 4291.0, "series": [{"data": [[0.0, 1.0], [0.1, 4.0], [0.2, 7.0], [0.3, 8.0], [0.4, 8.0], [0.5, 9.0], [0.6, 9.0], [0.7, 10.0], [0.8, 10.0], [0.9, 11.0], [1.0, 12.0], [1.1, 13.0], [1.2, 13.0], [1.3, 14.0], [1.4, 14.0], [1.5, 15.0], [1.6, 17.0], [1.7, 17.0], [1.8, 18.0], [1.9, 19.0], [2.0, 21.0], [2.1, 23.0], [2.2, 23.0], [2.3, 24.0], [2.4, 25.0], [2.5, 26.0], [2.6, 27.0], [2.7, 28.0], [2.8, 29.0], [2.9, 30.0], [3.0, 30.0], [3.1, 32.0], [3.2, 35.0], [3.3, 36.0], [3.4, 37.0], [3.5, 39.0], [3.6, 40.0], [3.7, 43.0], [3.8, 43.0], [3.9, 44.0], [4.0, 45.0], [4.1, 47.0], [4.2, 49.0], [4.3, 51.0], [4.4, 52.0], [4.5, 54.0], [4.6, 55.0], [4.7, 58.0], [4.8, 61.0], [4.9, 64.0], [5.0, 65.0], [5.1, 67.0], [5.2, 68.0], [5.3, 68.0], [5.4, 70.0], [5.5, 71.0], [5.6, 72.0], [5.7, 73.0], [5.8, 76.0], [5.9, 78.0], [6.0, 85.0], [6.1, 90.0], [6.2, 95.0], [6.3, 99.0], [6.4, 101.0], [6.5, 103.0], [6.6, 104.0], [6.7, 107.0], [6.8, 108.0], [6.9, 111.0], [7.0, 114.0], [7.1, 116.0], [7.2, 119.0], [7.3, 120.0], [7.4, 122.0], [7.5, 123.0], [7.6, 124.0], [7.7, 125.0], [7.8, 127.0], [7.9, 132.0], [8.0, 134.0], [8.1, 135.0], [8.2, 137.0], [8.3, 139.0], [8.4, 140.0], [8.5, 143.0], [8.6, 146.0], [8.7, 148.0], [8.8, 150.0], [8.9, 150.0], [9.0, 152.0], [9.1, 159.0], [9.2, 168.0], [9.3, 169.0], [9.4, 169.0], [9.5, 170.0], [9.6, 197.0], [9.7, 198.0], [9.8, 199.0], [9.9, 201.0], [10.0, 203.0], [10.1, 230.0], [10.2, 239.0], [10.3, 242.0], [10.4, 243.0], [10.5, 245.0], [10.6, 254.0], [10.7, 274.0], [10.8, 276.0], [10.9, 277.0], [11.0, 302.0], [11.1, 302.0], [11.2, 305.0], [11.3, 308.0], [11.4, 513.0], [11.5, 517.0], [11.6, 521.0], [11.7, 526.0], [11.8, 531.0], [11.9, 533.0], [12.0, 538.0], [12.1, 546.0], [12.2, 552.0], [12.3, 554.0], [12.4, 557.0], [12.5, 559.0], [12.6, 564.0], [12.7, 566.0], [12.8, 567.0], [12.9, 567.0], [13.0, 568.0], [13.1, 568.0], [13.2, 571.0], [13.3, 572.0], [13.4, 572.0], [13.5, 572.0], [13.6, 573.0], [13.7, 575.0], [13.8, 577.0], [13.9, 580.0], [14.0, 582.0], [14.1, 584.0], [14.2, 585.0], [14.3, 586.0], [14.4, 590.0], [14.5, 598.0], [14.6, 606.0], [14.7, 607.0], [14.8, 610.0], [14.9, 616.0], [15.0, 617.0], [15.1, 618.0], [15.2, 618.0], [15.3, 620.0], [15.4, 621.0], [15.5, 625.0], [15.6, 630.0], [15.7, 632.0], [15.8, 634.0], [15.9, 636.0], [16.0, 637.0], [16.1, 639.0], [16.2, 639.0], [16.3, 640.0], [16.4, 640.0], [16.5, 641.0], [16.6, 641.0], [16.7, 642.0], [16.8, 643.0], [16.9, 644.0], [17.0, 645.0], [17.1, 647.0], [17.2, 649.0], [17.3, 655.0], [17.4, 657.0], [17.5, 658.0], [17.6, 658.0], [17.7, 659.0], [17.8, 661.0], [17.9, 662.0], [18.0, 663.0], [18.1, 664.0], [18.2, 664.0], [18.3, 665.0], [18.4, 665.0], [18.5, 666.0], [18.6, 667.0], [18.7, 669.0], [18.8, 671.0], [18.9, 671.0], [19.0, 672.0], [19.1, 673.0], [19.2, 675.0], [19.3, 677.0], [19.4, 679.0], [19.5, 681.0], [19.6, 683.0], [19.7, 685.0], [19.8, 686.0], [19.9, 687.0], [20.0, 688.0], [20.1, 689.0], [20.2, 692.0], [20.3, 695.0], [20.4, 698.0], [20.5, 702.0], [20.6, 703.0], [20.7, 706.0], [20.8, 707.0], [20.9, 710.0], [21.0, 712.0], [21.1, 714.0], [21.2, 715.0], [21.3, 716.0], [21.4, 718.0], [21.5, 720.0], [21.6, 721.0], [21.7, 725.0], [21.8, 727.0], [21.9, 730.0], [22.0, 734.0], [22.1, 735.0], [22.2, 736.0], [22.3, 738.0], [22.4, 740.0], [22.5, 743.0], [22.6, 746.0], [22.7, 754.0], [22.8, 755.0], [22.9, 759.0], [23.0, 763.0], [23.1, 770.0], [23.2, 779.0], [23.3, 782.0], [23.4, 809.0], [23.5, 920.0], [23.6, 1028.0], [23.7, 1029.0], [23.8, 1036.0], [23.9, 1038.0], [24.0, 1047.0], [24.1, 1050.0], [24.2, 1054.0], [24.3, 1056.0], [24.4, 1057.0], [24.5, 1059.0], [24.6, 1061.0], [24.7, 1061.0], [24.8, 1062.0], [24.9, 1062.0], [25.0, 1063.0], [25.1, 1063.0], [25.2, 1064.0], [25.3, 1066.0], [25.4, 1067.0], [25.5, 1068.0], [25.6, 1069.0], [25.7, 1069.0], [25.8, 1070.0], [25.9, 1070.0], [26.0, 1070.0], [26.1, 1071.0], [26.2, 1071.0], [26.3, 1072.0], [26.4, 1073.0], [26.5, 1074.0], [26.6, 1075.0], [26.7, 1076.0], [26.8, 1078.0], [26.9, 1079.0], [27.0, 1079.0], [27.1, 1080.0], [27.2, 1080.0], [27.3, 1082.0], [27.4, 1082.0], [27.5, 1082.0], [27.6, 1083.0], [27.7, 1083.0], [27.8, 1090.0], [27.9, 1092.0], [28.0, 1093.0], [28.1, 1093.0], [28.2, 1094.0], [28.3, 1096.0], [28.4, 1098.0], [28.5, 1100.0], [28.6, 1100.0], [28.7, 1102.0], [28.8, 1104.0], [28.9, 1104.0], [29.0, 1107.0], [29.1, 1109.0], [29.2, 1110.0], [29.3, 1112.0], [29.4, 1112.0], [29.5, 1113.0], [29.6, 1114.0], [29.7, 1116.0], [29.8, 1120.0], [29.9, 1123.0], [30.0, 1126.0], [30.1, 1126.0], [30.2, 1127.0], [30.3, 1128.0], [30.4, 1130.0], [30.5, 1131.0], [30.6, 1132.0], [30.7, 1135.0], [30.8, 1137.0], [30.9, 1141.0], [31.0, 1143.0], [31.1, 1146.0], [31.2, 1146.0], [31.3, 1149.0], [31.4, 1150.0], [31.5, 1151.0], [31.6, 1152.0], [31.7, 1153.0], [31.8, 1154.0], [31.9, 1155.0], [32.0, 1159.0], [32.1, 1163.0], [32.2, 1164.0], [32.3, 1169.0], [32.4, 1172.0], [32.5, 1176.0], [32.6, 1177.0], [32.7, 1179.0], [32.8, 1181.0], [32.9, 1182.0], [33.0, 1184.0], [33.1, 1187.0], [33.2, 1188.0], [33.3, 1189.0], [33.4, 1190.0], [33.5, 1192.0], [33.6, 1193.0], [33.7, 1195.0], [33.8, 1198.0], [33.9, 1204.0], [34.0, 1206.0], [34.1, 1207.0], [34.2, 1209.0], [34.3, 1212.0], [34.4, 1219.0], [34.5, 1219.0], [34.6, 1220.0], [34.7, 1221.0], [34.8, 1222.0], [34.9, 1223.0], [35.0, 1224.0], [35.1, 1225.0], [35.2, 1232.0], [35.3, 1238.0], [35.4, 1239.0], [35.5, 1240.0], [35.6, 1242.0], [35.7, 1243.0], [35.8, 1245.0], [35.9, 1246.0], [36.0, 1247.0], [36.1, 1248.0], [36.2, 1250.0], [36.3, 1253.0], [36.4, 1273.0], [36.5, 1517.0], [36.6, 1518.0], [36.7, 1519.0], [36.8, 1519.0], [36.9, 1520.0], [37.0, 1520.0], [37.1, 1521.0], [37.2, 1521.0], [37.3, 1521.0], [37.4, 1522.0], [37.5, 1523.0], [37.6, 1524.0], [37.7, 1524.0], [37.8, 1524.0], [37.9, 1525.0], [38.0, 1525.0], [38.1, 1526.0], [38.2, 1526.0], [38.3, 1527.0], [38.4, 1527.0], [38.5, 1527.0], [38.6, 1527.0], [38.7, 1528.0], [38.8, 1528.0], [38.9, 1528.0], [39.0, 1528.0], [39.1, 1529.0], [39.2, 1530.0], [39.3, 1530.0], [39.4, 1532.0], [39.5, 1533.0], [39.6, 1533.0], [39.7, 1534.0], [39.8, 1534.0], [39.9, 1534.0], [40.0, 1535.0], [40.1, 1535.0], [40.2, 1535.0], [40.3, 1536.0], [40.4, 1536.0], [40.5, 1537.0], [40.6, 1537.0], [40.7, 1537.0], [40.8, 1537.0], [40.9, 1537.0], [41.0, 1537.0], [41.1, 1538.0], [41.2, 1538.0], [41.3, 1538.0], [41.4, 1538.0], [41.5, 1538.0], [41.6, 1539.0], [41.7, 1539.0], [41.8, 1539.0], [41.9, 1539.0], [42.0, 1539.0], [42.1, 1540.0], [42.2, 1540.0], [42.3, 1540.0], [42.4, 1540.0], [42.5, 1541.0], [42.6, 1541.0], [42.7, 1541.0], [42.8, 1541.0], [42.9, 1542.0], [43.0, 1542.0], [43.1, 1543.0], [43.2, 1544.0], [43.3, 1544.0], [43.4, 1546.0], [43.5, 1548.0], [43.6, 1548.0], [43.7, 1549.0], [43.8, 1550.0], [43.9, 1551.0], [44.0, 1552.0], [44.1, 1553.0], [44.2, 1555.0], [44.3, 1556.0], [44.4, 1557.0], [44.5, 1558.0], [44.6, 1560.0], [44.7, 1560.0], [44.8, 1561.0], [44.9, 1561.0], [45.0, 1561.0], [45.1, 1561.0], [45.2, 1562.0], [45.3, 1562.0], [45.4, 1562.0], [45.5, 1563.0], [45.6, 1563.0], [45.7, 1564.0], [45.8, 1565.0], [45.9, 1566.0], [46.0, 1569.0], [46.1, 1571.0], [46.2, 1574.0], [46.3, 1575.0], [46.4, 1575.0], [46.5, 1576.0], [46.6, 1577.0], [46.7, 1577.0], [46.8, 1578.0], [46.9, 1578.0], [47.0, 1579.0], [47.1, 1580.0], [47.2, 1580.0], [47.3, 1581.0], [47.4, 1582.0], [47.5, 1583.0], [47.6, 1585.0], [47.7, 1588.0], [47.8, 1588.0], [47.9, 1589.0], [48.0, 1590.0], [48.1, 1590.0], [48.2, 1590.0], [48.3, 1592.0], [48.4, 1593.0], [48.5, 1594.0], [48.6, 1595.0], [48.7, 1596.0], [48.8, 1596.0], [48.9, 1598.0], [49.0, 1601.0], [49.1, 1602.0], [49.2, 1602.0], [49.3, 1602.0], [49.4, 1603.0], [49.5, 1603.0], [49.6, 1606.0], [49.7, 1610.0], [49.8, 1612.0], [49.9, 1615.0], [50.0, 1616.0], [50.1, 1617.0], [50.2, 1617.0], [50.3, 1618.0], [50.4, 1618.0], [50.5, 1620.0], [50.6, 1620.0], [50.7, 1621.0], [50.8, 1622.0], [50.9, 1624.0], [51.0, 1628.0], [51.1, 1629.0], [51.2, 1632.0], [51.3, 1634.0], [51.4, 1635.0], [51.5, 1636.0], [51.6, 1636.0], [51.7, 1638.0], [51.8, 1641.0], [51.9, 1642.0], [52.0, 1646.0], [52.1, 1650.0], [52.2, 1652.0], [52.3, 1653.0], [52.4, 1656.0], [52.5, 1659.0], [52.6, 1665.0], [52.7, 1669.0], [52.8, 1672.0], [52.9, 1678.0], [53.0, 1680.0], [53.1, 1686.0], [53.2, 1688.0], [53.3, 1690.0], [53.4, 1695.0], [53.5, 1697.0], [53.6, 1699.0], [53.7, 1703.0], [53.8, 1706.0], [53.9, 1708.0], [54.0, 1818.0], [54.1, 2043.0], [54.2, 2046.0], [54.3, 2048.0], [54.4, 2049.0], [54.5, 2049.0], [54.6, 2050.0], [54.7, 2050.0], [54.8, 2051.0], [54.9, 2052.0], [55.0, 2052.0], [55.1, 2053.0], [55.2, 2053.0], [55.3, 2054.0], [55.4, 2054.0], [55.5, 2054.0], [55.6, 2055.0], [55.7, 2056.0], [55.8, 2056.0], [55.9, 2057.0], [56.0, 2058.0], [56.1, 2059.0], [56.2, 2059.0], [56.3, 2060.0], [56.4, 2060.0], [56.5, 2061.0], [56.6, 2062.0], [56.7, 2063.0], [56.8, 2064.0], [56.9, 2065.0], [57.0, 2065.0], [57.1, 2065.0], [57.2, 2065.0], [57.3, 2065.0], [57.4, 2066.0], [57.5, 2066.0], [57.6, 2068.0], [57.7, 2068.0], [57.8, 2069.0], [57.9, 2069.0], [58.0, 2070.0], [58.1, 2070.0], [58.2, 2070.0], [58.3, 2070.0], [58.4, 2071.0], [58.5, 2073.0], [58.6, 2073.0], [58.7, 2074.0], [58.8, 2075.0], [58.9, 2075.0], [59.0, 2076.0], [59.1, 2076.0], [59.2, 2077.0], [59.3, 2078.0], [59.4, 2079.0], [59.5, 2079.0], [59.6, 2080.0], [59.7, 2080.0], [59.8, 2082.0], [59.9, 2088.0], [60.0, 2089.0], [60.1, 2089.0], [60.2, 2089.0], [60.3, 2090.0], [60.4, 2092.0], [60.5, 2093.0], [60.6, 2094.0], [60.7, 2102.0], [60.8, 2113.0], [60.9, 2113.0], [61.0, 2114.0], [61.1, 2128.0], [61.2, 2133.0], [61.3, 2133.0], [61.4, 2134.0], [61.5, 2145.0], [61.6, 2147.0], [61.7, 2152.0], [61.8, 2154.0], [61.9, 2157.0], [62.0, 2160.0], [62.1, 2161.0], [62.2, 2166.0], [62.3, 2168.0], [62.4, 2169.0], [62.5, 2172.0], [62.6, 2174.0], [62.7, 2180.0], [62.8, 2183.0], [62.9, 2184.0], [63.0, 2186.0], [63.1, 2189.0], [63.2, 2190.0], [63.3, 2195.0], [63.4, 2200.0], [63.5, 2202.0], [63.6, 2205.0], [63.7, 2208.0], [63.8, 2210.0], [63.9, 2212.0], [64.0, 2214.0], [64.1, 2215.0], [64.2, 2216.0], [64.3, 2217.0], [64.4, 2219.0], [64.5, 2224.0], [64.6, 2228.0], [64.7, 2230.0], [64.8, 2230.0], [64.9, 2231.0], [65.0, 2231.0], [65.1, 2321.0], [65.2, 2535.0], [65.3, 2537.0], [65.4, 2539.0], [65.5, 2539.0], [65.6, 2541.0], [65.7, 2542.0], [65.8, 2543.0], [65.9, 2544.0], [66.0, 2545.0], [66.1, 2547.0], [66.2, 2548.0], [66.3, 2549.0], [66.4, 2550.0], [66.5, 2551.0], [66.6, 2552.0], [66.7, 2553.0], [66.8, 2553.0], [66.9, 2554.0], [67.0, 2554.0], [67.1, 2554.0], [67.2, 2555.0], [67.3, 2555.0], [67.4, 2555.0], [67.5, 2556.0], [67.6, 2556.0], [67.7, 2557.0], [67.8, 2558.0], [67.9, 2558.0], [68.0, 2558.0], [68.1, 2559.0], [68.2, 2559.0], [68.3, 2559.0], [68.4, 2560.0], [68.5, 2560.0], [68.6, 2561.0], [68.7, 2561.0], [68.8, 2561.0], [68.9, 2561.0], [69.0, 2562.0], [69.1, 2563.0], [69.2, 2563.0], [69.3, 2563.0], [69.4, 2563.0], [69.5, 2564.0], [69.6, 2564.0], [69.7, 2564.0], [69.8, 2565.0], [69.9, 2565.0], [70.0, 2565.0], [70.1, 2565.0], [70.2, 2566.0], [70.3, 2566.0], [70.4, 2567.0], [70.5, 2567.0], [70.6, 2568.0], [70.7, 2568.0], [70.8, 2569.0], [70.9, 2569.0], [71.0, 2569.0], [71.1, 2570.0], [71.2, 2570.0], [71.3, 2571.0], [71.4, 2572.0], [71.5, 2572.0], [71.6, 2574.0], [71.7, 2575.0], [71.8, 2575.0], [71.9, 2575.0], [72.0, 2576.0], [72.1, 2578.0], [72.2, 2578.0], [72.3, 2579.0], [72.4, 2580.0], [72.5, 2582.0], [72.6, 2584.0], [72.7, 2584.0], [72.8, 2585.0], [72.9, 2586.0], [73.0, 2588.0], [73.1, 2589.0], [73.2, 2591.0], [73.3, 2592.0], [73.4, 2594.0], [73.5, 2595.0], [73.6, 2595.0], [73.7, 2596.0], [73.8, 2596.0], [73.9, 2597.0], [74.0, 2597.0], [74.1, 2598.0], [74.2, 2599.0], [74.3, 2600.0], [74.4, 2600.0], [74.5, 2601.0], [74.6, 2601.0], [74.7, 2603.0], [74.8, 2605.0], [74.9, 2606.0], [75.0, 2608.0], [75.1, 2609.0], [75.2, 2609.0], [75.3, 2610.0], [75.4, 2612.0], [75.5, 2612.0], [75.6, 2614.0], [75.7, 2615.0], [75.8, 2615.0], [75.9, 2616.0], [76.0, 2617.0], [76.1, 2618.0], [76.2, 2620.0], [76.3, 2621.0], [76.4, 2622.0], [76.5, 2623.0], [76.6, 2623.0], [76.7, 2624.0], [76.8, 2624.0], [76.9, 2624.0], [77.0, 2624.0], [77.1, 2624.0], [77.2, 2625.0], [77.3, 2625.0], [77.4, 2625.0], [77.5, 2626.0], [77.6, 2626.0], [77.7, 2627.0], [77.8, 2627.0], [77.9, 2627.0], [78.0, 2628.0], [78.1, 2628.0], [78.2, 2629.0], [78.3, 2629.0], [78.4, 2630.0], [78.5, 2630.0], [78.6, 2630.0], [78.7, 2631.0], [78.8, 2632.0], [78.9, 2632.0], [79.0, 2633.0], [79.1, 2634.0], [79.2, 2635.0], [79.3, 2636.0], [79.4, 2637.0], [79.5, 2637.0], [79.6, 2641.0], [79.7, 2641.0], [79.8, 2642.0], [79.9, 2642.0], [80.0, 2644.0], [80.1, 2645.0], [80.2, 2646.0], [80.3, 2648.0], [80.4, 2651.0], [80.5, 2653.0], [80.6, 2658.0], [80.7, 2727.0], [80.8, 2789.0], [80.9, 3052.0], [81.0, 3055.0], [81.1, 3057.0], [81.2, 3057.0], [81.3, 3058.0], [81.4, 3058.0], [81.5, 3059.0], [81.6, 3060.0], [81.7, 3060.0], [81.8, 3061.0], [81.9, 3062.0], [82.0, 3062.0], [82.1, 3063.0], [82.2, 3064.0], [82.3, 3065.0], [82.4, 3067.0], [82.5, 3068.0], [82.6, 3069.0], [82.7, 3069.0], [82.8, 3069.0], [82.9, 3070.0], [83.0, 3071.0], [83.1, 3071.0], [83.2, 3072.0], [83.3, 3072.0], [83.4, 3073.0], [83.5, 3073.0], [83.6, 3073.0], [83.7, 3074.0], [83.8, 3074.0], [83.9, 3075.0], [84.0, 3075.0], [84.1, 3075.0], [84.2, 3076.0], [84.3, 3076.0], [84.4, 3076.0], [84.5, 3077.0], [84.6, 3077.0], [84.7, 3077.0], [84.8, 3077.0], [84.9, 3078.0], [85.0, 3078.0], [85.1, 3079.0], [85.2, 3079.0], [85.3, 3080.0], [85.4, 3080.0], [85.5, 3081.0], [85.6, 3081.0], [85.7, 3081.0], [85.8, 3082.0], [85.9, 3082.0], [86.0, 3082.0], [86.1, 3083.0], [86.2, 3083.0], [86.3, 3083.0], [86.4, 3083.0], [86.5, 3084.0], [86.6, 3084.0], [86.7, 3085.0], [86.8, 3085.0], [86.9, 3086.0], [87.0, 3086.0], [87.1, 3087.0], [87.2, 3087.0], [87.3, 3088.0], [87.4, 3088.0], [87.5, 3089.0], [87.6, 3089.0], [87.7, 3089.0], [87.8, 3090.0], [87.9, 3090.0], [88.0, 3091.0], [88.1, 3091.0], [88.2, 3092.0], [88.3, 3093.0], [88.4, 3093.0], [88.5, 3093.0], [88.6, 3094.0], [88.7, 3094.0], [88.8, 3095.0], [88.9, 3095.0], [89.0, 3096.0], [89.1, 3096.0], [89.2, 3097.0], [89.3, 3097.0], [89.4, 3098.0], [89.5, 3099.0], [89.6, 3099.0], [89.7, 3100.0], [89.8, 3100.0], [89.9, 3102.0], [90.0, 3105.0], [90.1, 3106.0], [90.2, 3107.0], [90.3, 3110.0], [90.4, 3113.0], [90.5, 3115.0], [90.6, 3118.0], [90.7, 3145.0], [90.8, 3201.0], [90.9, 3223.0], [91.0, 3299.0], [91.1, 3316.0], [91.2, 3560.0], [91.3, 3565.0], [91.4, 3567.0], [91.5, 3568.0], [91.6, 3569.0], [91.7, 3570.0], [91.8, 3571.0], [91.9, 3571.0], [92.0, 3572.0], [92.1, 3573.0], [92.2, 3574.0], [92.3, 3574.0], [92.4, 3575.0], [92.5, 3577.0], [92.6, 3577.0], [92.7, 3577.0], [92.8, 3578.0], [92.9, 3578.0], [93.0, 3578.0], [93.1, 3579.0], [93.2, 3579.0], [93.3, 3580.0], [93.4, 3581.0], [93.5, 3581.0], [93.6, 3582.0], [93.7, 3582.0], [93.8, 3583.0], [93.9, 3584.0], [94.0, 3585.0], [94.1, 3586.0], [94.2, 3586.0], [94.3, 3587.0], [94.4, 3587.0], [94.5, 3588.0], [94.6, 3589.0], [94.7, 3590.0], [94.8, 3590.0], [94.9, 3591.0], [95.0, 3591.0], [95.1, 3592.0], [95.2, 3593.0], [95.3, 3594.0], [95.4, 3594.0], [95.5, 3595.0], [95.6, 3596.0], [95.7, 3596.0], [95.8, 3597.0], [95.9, 3598.0], [96.0, 3599.0], [96.1, 3600.0], [96.2, 3601.0], [96.3, 3602.0], [96.4, 3604.0], [96.5, 3607.0], [96.6, 3611.0], [96.7, 4077.0], [96.8, 4077.0], [96.9, 4079.0], [97.0, 4080.0], [97.1, 4082.0], [97.2, 4083.0], [97.3, 4083.0], [97.4, 4084.0], [97.5, 4085.0], [97.6, 4086.0], [97.7, 4086.0], [97.8, 4087.0], [97.9, 4087.0], [98.0, 4088.0], [98.1, 4088.0], [98.2, 4089.0], [98.3, 4089.0], [98.4, 4090.0], [98.5, 4091.0], [98.6, 4091.0], [98.7, 4092.0], [98.8, 4093.0], [98.9, 4094.0], [99.0, 4095.0], [99.1, 4095.0], [99.2, 4097.0], [99.3, 4097.0], [99.4, 4098.0], [99.5, 4099.0], [99.6, 4100.0], [99.7, 4102.0], [99.8, 4104.0], [99.9, 4110.0], [100.0, 4291.0]], "isOverall": false, "label": "JDBC Request category_list", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 623.0, "series": [{"data": [[0.0, 316.0], [600.0, 298.0], [700.0, 144.0], [800.0, 3.0], [900.0, 5.0], [1000.0, 249.0], [1100.0, 268.0], [1200.0, 128.0], [1300.0, 2.0], [1400.0, 1.0], [1500.0, 623.0], [100.0, 175.0], [1600.0, 233.0], [1700.0, 19.0], [1800.0, 1.0], [1900.0, 2.0], [2000.0, 331.0], [2100.0, 136.0], [2200.0, 85.0], [2300.0, 1.0], [2400.0, 1.0], [2500.0, 456.0], [2600.0, 322.0], [2700.0, 6.0], [3000.0, 441.0], [3100.0, 58.0], [200.0, 58.0], [3200.0, 12.0], [3300.0, 6.0], [3500.0, 246.0], [3700.0, 1.0], [3600.0, 27.0], [4000.0, 146.0], [4200.0, 5.0], [4100.0, 18.0], [300.0, 18.0], [500.0, 159.0]], "isOverall": false, "label": "JDBC Request category_list", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 4200.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 4.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 4848.0, "series": [{"data": [[0.0, 148.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 4.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 4848.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 2207.232999999994, "minX": 1.69988376E12, "maxY": 2207.232999999994, "series": [{"data": [[1.69988376E12, 2207.232999999994]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.69988376E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 8.0, "minX": 1.0, "maxY": 4291.0, "series": [{"data": [[2.0, 443.5882352941177], [3.0, 226.47058823529412], [4.0, 210.66666666666666], [5.0, 20.375000000000004], [6.0, 278.25], [7.0, 1183.142857142857], [8.0, 338.15384615384613], [9.0, 24.75], [10.0, 28.8], [11.0, 47.0], [12.0, 2748.5], [13.0, 626.1666666666666], [14.0, 1395.0], [15.0, 47.0], [16.0, 1564.4], [17.0, 40.333333333333336], [18.0, 2408.0], [19.0, 630.8333333333334], [20.0, 1817.0], [21.0, 37.0], [22.0, 1224.3333333333333], [23.0, 43.5], [24.0, 4099.5], [26.0, 4097.0], [27.0, 4099.5], [29.0, 4102.5], [30.0, 4104.0], [32.0, 4095.0], [35.0, 3594.5], [37.0, 3594.0], [39.0, 3762.6666666666665], [41.0, 4096.0], [40.0, 4098.0], [45.0, 4092.0], [44.0, 3754.3333333333335], [46.0, 2052.0], [47.0, 4099.0], [49.0, 4097.0], [51.0, 4095.0], [50.0, 4103.0], [52.0, 2049.0], [53.0, 3611.0], [55.0, 3611.0], [54.0, 4291.0], [57.0, 4097.0], [59.0, 3591.5], [58.0, 4093.0], [60.0, 4091.0], [63.0, 3602.0], [62.0, 3846.0], [67.0, 4091.0], [65.0, 3602.0], [64.0, 3601.0], [71.0, 4094.0], [70.0, 3592.0], [69.0, 3592.0], [75.0, 4100.0], [73.0, 4094.0], [72.0, 4096.0], [78.0, 4102.0], [77.0, 4099.0], [76.0, 4100.0], [83.0, 3836.0], [81.0, 3984.3333333333335], [87.0, 3591.0], [85.0, 3587.0], [84.0, 3593.0], [91.0, 3592.0], [90.0, 4092.0], [89.0, 3589.3333333333335], [95.0, 4095.0], [94.0, 3590.0], [93.0, 4091.5], [99.0, 3599.0], [98.0, 3839.5], [96.0, 4092.0], [101.0, 4089.0], [100.0, 4090.0], [106.0, 4095.5], [104.0, 3929.3333333333335], [108.0, 1799.5], [111.0, 3826.0], [110.0, 4093.0], [115.0, 3594.0], [113.0, 4093.0], [112.0, 4096.0], [119.0, 4090.0], [118.0, 3589.0], [117.0, 3581.0], [116.0, 3590.0], [123.0, 4095.0], [122.0, 4090.0], [121.0, 3591.0], [127.0, 4085.0], [125.0, 3587.0], [124.0, 4089.0], [135.0, 4186.0], [134.0, 4093.0], [132.0, 3968.75], [131.0, 4090.0], [128.0, 4090.0], [143.0, 4071.0], [142.0, 4083.0], [141.0, 4279.0], [140.0, 4091.0], [139.0, 4097.0], [137.0, 4099.0], [150.0, 3586.0], [149.0, 3595.0], [148.0, 3835.0], [147.0, 4084.0], [145.0, 4086.0], [159.0, 4087.0], [158.0, 4081.0], [157.0, 4086.5], [155.0, 4087.0], [154.0, 4083.0], [153.0, 3920.3333333333335], [167.0, 4083.0], [166.0, 4087.5], [164.0, 4089.0], [163.0, 4087.0], [161.0, 4088.0], [160.0, 4087.0], [175.0, 4080.0], [174.0, 4085.5], [172.0, 4094.0], [171.0, 4095.0], [170.0, 4088.0], [169.0, 4087.0], [168.0, 4088.0], [182.0, 4085.0], [181.0, 3833.0], [179.0, 3581.5], [178.0, 3581.5], [191.0, 2050.5], [190.0, 4079.0], [188.0, 4086.5], [186.0, 4086.0], [185.0, 4081.0], [184.0, 4084.5], [199.0, 4084.0], [198.0, 4083.0], [197.0, 3587.0], [195.0, 4080.0], [194.0, 3838.5], [192.0, 3839.5], [207.0, 3578.0], [206.0, 4087.5], [204.0, 4088.0], [202.0, 4089.0], [201.0, 4088.0], [200.0, 4085.0], [215.0, 3586.0], [213.0, 3590.0], [212.0, 3581.0], [211.0, 3580.0], [210.0, 3832.5], [208.0, 4086.0], [223.0, 4081.0], [221.0, 4077.0], [219.0, 3577.0], [218.0, 4090.0], [217.0, 4089.0], [216.0, 4089.5], [231.0, 3840.5], [229.0, 4087.0], [228.0, 4084.5], [226.0, 4083.0], [225.0, 4079.0], [224.0, 4078.0], [239.0, 4075.0], [238.0, 4075.0], [237.0, 4077.0], [235.0, 3587.0], [234.0, 3598.0], [233.0, 3598.5], [247.0, 4086.0], [245.0, 4086.5], [244.0, 4082.0], [243.0, 4082.0], [242.0, 4078.0], [240.0, 4078.0], [255.0, 4085.0], [254.0, 3573.5], [253.0, 3581.5], [251.0, 3582.0], [259.0, 3580.6666666666665], [270.0, 3573.0], [269.0, 2387.3333333333335], [271.0, 3576.0], [267.0, 3573.25], [264.0, 3571.0], [262.0, 3569.0], [260.0, 3573.5], [257.0, 4082.0], [256.0, 3575.0], [275.0, 3102.0], [286.0, 3096.0], [285.0, 3097.0], [284.0, 3401.8], [279.0, 3608.0], [278.0, 3601.5], [277.0, 3600.0], [274.0, 3356.0], [272.0, 3107.0], [291.0, 3102.0], [302.0, 3597.0], [303.0, 3597.0], [301.0, 3434.6666666666665], [298.0, 3100.5], [296.0, 3345.5], [294.0, 3605.0], [293.0, 3352.5], [289.0, 3097.0], [288.0, 3100.5], [316.0, 3098.0], [318.0, 3338.5], [319.0, 3578.0], [317.0, 3099.0], [314.0, 3096.0], [313.0, 3095.0], [311.0, 3093.0], [309.0, 3600.0], [307.0, 3606.0], [306.0, 3601.0], [304.0, 3602.0], [323.0, 3578.0], [335.0, 3602.0], [333.0, 3597.0], [332.0, 3345.5], [330.0, 3429.6666666666665], [327.0, 3093.6666666666665], [324.0, 3096.0], [322.0, 3578.0], [321.0, 3581.0], [350.0, 3257.3333333333335], [347.0, 3093.0], [346.0, 3253.3333333333335], [344.0, 3092.0], [342.0, 3578.0], [341.0, 3090.5], [339.0, 3089.0], [338.0, 3346.5], [336.0, 3599.0], [354.0, 3337.5], [365.0, 3572.5], [355.0, 24.0], [366.0, 3571.0], [363.0, 3573.0], [362.0, 3092.0], [359.0, 3099.5], [357.0, 3093.0], [356.0, 3091.0], [353.0, 3090.0], [352.0, 3100.0], [371.0, 3086.0], [382.0, 3345.5], [381.0, 3597.0], [379.0, 3593.0], [378.0, 3084.0], [377.0, 3093.5], [375.0, 3082.0], [374.0, 3331.5], [373.0, 3577.0], [370.0, 3249.0], [369.0, 3574.0], [399.0, 3088.5], [397.0, 3088.0], [396.0, 3094.0], [395.0, 3089.5], [393.0, 3336.5], [392.0, 3579.0], [389.0, 3459.25], [387.0, 3594.0], [415.0, 3592.0], [412.0, 3083.0], [411.0, 3257.3333333333335], [409.0, 3591.0], [407.0, 3589.0], [406.0, 3587.0], [405.0, 3594.0], [404.0, 3590.5], [402.0, 3335.5], [401.0, 3082.0], [430.0, 28.0], [431.0, 3082.5], [429.0, 3584.0], [428.0, 3083.0], [427.0, 3590.0], [426.0, 3086.0], [425.0, 3582.0], [423.0, 3081.0], [417.0, 3082.0], [416.0, 3592.0], [419.0, 3081.0], [418.0, 3585.0], [422.0, 3329.5], [420.0, 3584.0], [445.0, 1557.5], [444.0, 1809.0], [434.0, 3081.0], [432.0, 3089.0], [443.0, 2401.3333333333335], [442.0, 1558.0], [447.0, 3589.0], [446.0, 3085.0], [441.0, 3586.0], [439.0, 3330.5], [437.0, 3086.0], [436.0, 3331.5], [463.0, 3581.0], [455.0, 1803.5], [456.0, 30.0], [457.0, 3578.0], [453.0, 30.0], [452.0, 3589.5], [454.0, 3585.0], [462.0, 3577.0], [461.0, 3589.0], [460.0, 3590.0], [451.0, 3334.5], [448.0, 3087.0], [459.0, 3580.5], [458.0, 3586.0], [478.0, 3083.0], [479.0, 3585.0], [477.0, 3082.5], [476.0, 3075.0], [475.0, 3081.0], [473.0, 3074.0], [472.0, 3077.0], [471.0, 3082.5], [465.0, 3095.0], [464.0, 3580.0], [467.0, 3095.0], [466.0, 3580.0], [469.0, 3076.0], [468.0, 3085.0], [494.0, 3079.0], [492.0, 3073.0], [491.0, 3077.0], [490.0, 3075.0], [489.0, 3074.0], [488.0, 3075.0], [487.0, 3331.0], [485.0, 3327.5], [483.0, 3577.0], [482.0, 3083.0], [481.0, 3333.0], [508.0, 3408.6666666666665], [510.0, 3577.0], [511.0, 33.0], [496.0, 1555.5], [498.0, 3083.0], [497.0, 3075.5], [509.0, 3583.0], [505.0, 3080.0], [504.0, 3576.5], [502.0, 3072.0], [501.0, 3073.0], [500.0, 3076.0], [540.0, 3573.0], [526.0, 1556.5], [512.0, 3582.0], [518.0, 3073.0], [516.0, 3073.0], [542.0, 3070.0], [538.0, 3578.3333333333335], [536.0, 3077.0], [534.0, 3568.0], [532.0, 3571.0], [530.0, 3409.0], [524.0, 3578.0], [522.0, 3322.0], [520.0, 3075.0], [568.0, 3582.0], [572.0, 3576.0], [558.0, 36.0], [574.0, 3572.0], [570.0, 3583.0], [566.0, 3058.0], [564.0, 3574.3333333333335], [556.0, 3316.5], [550.0, 3327.0], [548.0, 3570.0], [546.0, 3577.0], [544.0, 3318.0], [604.0, 2586.0], [578.0, 1805.5], [576.0, 3558.0], [582.0, 3570.0], [606.0, 2590.0], [602.0, 2594.0], [600.0, 2588.0], [598.0, 2596.0], [596.0, 2596.0], [594.0, 2590.0], [588.0, 3561.0], [586.0, 3563.0], [584.0, 3565.0], [636.0, 2578.0], [638.0, 2573.0], [634.0, 2575.0], [632.0, 2578.0], [630.0, 2576.0], [628.0, 2586.0], [626.0, 2578.0], [624.0, 2578.0], [622.0, 2584.0], [610.0, 2584.0], [608.0, 2586.0], [614.0, 2585.0], [612.0, 2589.0], [620.0, 2584.0], [618.0, 2578.0], [616.0, 2583.0], [668.0, 2561.0], [670.0, 882.0], [666.0, 2570.0], [664.0, 2558.0], [662.0, 2571.0], [660.0, 2563.0], [658.0, 2560.0], [656.0, 2562.0], [654.0, 2575.0], [642.0, 2571.0], [640.0, 2569.0], [646.0, 2579.0], [644.0, 2569.0], [652.0, 2574.0], [650.0, 2566.0], [648.0, 2564.0], [700.0, 2557.6666666666665], [678.0, 1134.6666666666667], [702.0, 2557.0], [696.0, 2562.0], [694.0, 2552.0], [690.0, 2558.0], [688.0, 2553.0], [686.0, 2566.0], [672.0, 2566.0], [676.0, 3113.0], [674.0, 2567.0], [684.0, 2569.0], [682.0, 2569.0], [680.0, 3316.0], [732.0, 2544.0], [734.0, 2558.0], [730.0, 2555.0], [728.0, 2558.0], [726.0, 2560.0], [724.0, 2556.0], [722.0, 2563.0], [720.0, 2562.0], [716.0, 2561.0], [708.0, 2548.0], [704.0, 2565.0], [712.0, 2549.0], [764.0, 1715.0], [738.0, 1301.0], [766.0, 2544.0], [762.0, 2541.0], [740.0, 2559.0], [758.0, 2567.0], [756.0, 2546.5], [752.0, 2556.5], [750.0, 2553.0], [748.0, 2555.0], [744.0, 2555.0], [792.0, 2558.0], [798.0, 3299.0], [796.0, 3054.0], [794.0, 2552.0], [790.0, 2559.0], [782.0, 2553.6666666666665], [774.0, 2544.0], [768.0, 2556.0], [780.0, 2552.0], [778.0, 2559.0], [776.0, 2549.0], [828.0, 2563.0], [830.0, 2557.0], [826.0, 3078.0], [824.0, 3062.0], [820.0, 2555.5], [818.0, 3061.5], [816.0, 2563.0], [812.0, 2567.0], [802.0, 3301.0], [806.0, 2811.5], [804.0, 2558.0], [838.0, 1896.3333333333333], [860.0, 2899.6666666666665], [862.0, 3078.0], [856.0, 2968.8], [850.0, 2553.0], [848.0, 3072.0], [844.0, 2554.0], [836.0, 3070.0], [832.0, 2561.0], [842.0, 2561.0], [840.0, 3077.5], [870.0, 2601.0], [894.0, 2852.5], [892.0, 3116.0], [886.0, 3110.5], [884.0, 3105.0], [882.0, 2851.5], [878.0, 3117.0], [874.0, 2860.0], [868.0, 2595.0], [866.0, 3078.5], [902.0, 3109.0], [924.0, 2850.5], [926.0, 61.0], [920.0, 3097.0], [914.0, 2587.0], [910.0, 2929.6666666666665], [906.0, 2593.0], [904.0, 3118.0], [898.0, 2595.0], [896.0, 2593.0], [954.0, 2923.3333333333335], [930.0, 60.5], [928.0, 3099.0], [934.0, 3105.5], [958.0, 3094.3333333333335], [950.0, 3112.0], [946.0, 3098.0], [944.0, 3115.0], [942.0, 2844.5], [940.0, 3090.0], [938.0, 2847.5], [936.0, 2852.0], [976.0, 3081.0], [974.0, 2581.0], [968.0, 3091.0], [966.0, 2750.0], [960.0, 3096.0], [1020.0, 2572.0], [1022.0, 3076.0], [1018.0, 3085.0], [1016.0, 3097.0], [1014.0, 3099.0], [1010.0, 3090.0], [1008.0, 3075.0], [1006.0, 2576.0], [998.0, 2580.0], [996.0, 2746.3333333333335], [1004.0, 2826.5], [1002.0, 3089.0], [1000.0, 3076.0], [1080.0, 2565.5], [1084.0, 2566.0], [1076.0, 3093.0], [1072.0, 2566.0], [1068.0, 2568.0], [1064.0, 3077.0], [1060.0, 3081.0], [1056.0, 3069.0], [1052.0, 3080.0], [1036.0, 2829.0], [1028.0, 3081.0], [1024.0, 2827.5], [1040.0, 3093.0], [1136.0, 3076.0], [1144.0, 3219.0], [1148.0, 3059.0], [1140.0, 3088.0], [1132.0, 3076.5], [1124.0, 3059.0], [1116.0, 3067.0], [1100.0, 3064.0], [1092.0, 3073.0], [1112.0, 3066.0], [1108.0, 3065.0], [1104.0, 3073.0], [1208.0, 3060.0], [1192.0, 3082.0], [1176.0, 3078.6666666666665], [1164.0, 3083.0], [1160.0, 3080.0], [1156.0, 3086.0], [1152.0, 3077.0], [1264.0, 2158.3333333333335], [1276.0, 2089.0], [1272.0, 2089.0], [1268.0, 3150.0], [1256.0, 3076.0], [1236.0, 3077.0], [1232.0, 3074.0], [1228.0, 3074.5], [1224.0, 3054.0], [1332.0, 2078.0], [1300.0, 1425.0], [1296.0, 2093.0], [1340.0, 1083.0], [1328.0, 2076.0], [1292.0, 2090.0], [1288.0, 2089.0], [1284.0, 2089.0], [1280.0, 2088.0], [1324.0, 2075.0], [1320.0, 2075.0], [1316.0, 2073.0], [1312.0, 2073.0], [1308.0, 2095.0], [1404.0, 2620.0], [1384.0, 1072.5], [1400.0, 2645.0], [1396.0, 2648.0], [1392.0, 2050.0], [1356.0, 2065.0], [1352.0, 2061.0], [1348.0, 2067.0], [1344.0, 2075.0], [1388.0, 2048.0], [1380.0, 2043.0], [1376.0, 2045.0], [1372.0, 2046.0], [1368.0, 2789.0], [1364.0, 2055.0], [1360.0, 2064.0], [1412.0, 1361.0], [1436.0, 1370.5], [1408.0, 2620.0], [1468.0, 2624.5], [1456.0, 2618.0], [1452.0, 2632.0], [1448.0, 2615.6666666666665], [1444.0, 2634.0], [1428.0, 2637.0], [1420.0, 2642.0], [1416.0, 2638.0], [1504.0, 2623.0], [1532.0, 2635.0], [1516.0, 2630.0], [1512.0, 2629.0], [1508.0, 2626.3333333333335], [1492.0, 2614.0], [1488.0, 2623.0], [1484.0, 2607.0], [1480.0, 2618.0], [1476.0, 2629.5], [1472.0, 2096.0], [1592.0, 2630.0], [1596.0, 2628.5], [1588.0, 2623.0], [1568.0, 2626.0], [1564.0, 2624.0], [1560.0, 2625.0], [1552.0, 2631.0], [1548.0, 2624.0], [1536.0, 2617.5], [1648.0, 2624.0], [1656.0, 2643.5], [1652.0, 117.0], [1660.0, 2612.285714285714], [1640.0, 2645.0], [1636.0, 2614.0], [1628.0, 2615.0], [1624.0, 2627.0], [1620.0, 2624.0], [1616.0, 2657.0], [1712.0, 124.0], [1680.0, 1364.5], [1684.0, 2600.0], [1720.0, 1366.0], [1724.0, 2597.0], [1704.0, 2608.0], [1700.0, 2605.0], [1696.0, 2603.0], [1692.0, 2597.0], [1668.0, 2615.0], [1664.0, 2617.0], [1676.0, 2601.0], [1672.0, 2608.0], [1688.0, 2599.0], [1780.0, 2564.5], [1740.0, 1758.0], [1768.0, 1753.6666666666667], [1788.0, 2561.0], [1784.0, 2561.0], [1776.0, 2565.0], [1760.0, 2565.5], [1752.0, 2567.0], [1736.0, 2570.0], [1728.0, 2598.0], [1748.0, 2564.0], [1744.0, 2578.0], [1804.0, 2560.5], [1816.0, 1384.0], [1812.0, 133.0], [1852.0, 2540.0], [1848.0, 2549.0], [1844.0, 2556.0], [1836.0, 2553.3333333333335], [1828.0, 2631.0], [1820.0, 2306.5], [1792.0, 2566.0], [1800.0, 2563.0], [1796.0, 2560.5], [1808.0, 2556.5], [1904.0, 1518.0], [1912.0, 1520.0], [1864.0, 1735.6666666666667], [1856.0, 2537.0], [1916.0, 1519.0], [1908.0, 1522.0], [1900.0, 2420.0], [1888.0, 1521.0], [1884.0, 1519.0], [1880.0, 1649.0], [1876.0, 2538.0], [1872.0, 2537.0], [1976.0, 1589.0], [1980.0, 1577.0], [1972.0, 1580.0], [1968.0, 1591.0], [1964.0, 1589.0], [1960.0, 1590.0], [1956.0, 1590.0], [1952.0, 1600.0], [1948.0, 1601.0], [1924.0, 1641.0], [1920.0, 1521.0], [1932.0, 1602.0], [1928.0, 1602.0], [1944.0, 1594.0], [1940.0, 1603.0], [1936.0, 1603.0], [2040.0, 2121.0], [2016.0, 855.5], [1988.0, 862.5], [1984.0, 1578.0], [1996.0, 1570.0], [1992.0, 1583.0], [2012.0, 1562.0], [2008.0, 1575.0], [2004.0, 1562.0], [2000.0, 1576.0], [2024.0, 838.0], [2044.0, 2230.0], [2036.0, 1548.0], [2032.0, 1549.0], [2028.0, 1562.0], [2020.0, 1561.0], [2152.0, 2182.0], [2168.0, 2168.0], [2096.0, 1166.5], [2088.0, 2218.0], [2080.0, 2216.0], [2104.0, 2215.0], [2144.0, 2194.0], [2072.0, 2228.0], [2064.0, 2231.0], [2056.0, 2321.0], [2048.0, 2230.0], [2120.0, 1164.5], [2128.0, 2189.0], [2136.0, 2187.0], [2112.0, 2203.0], [2160.0, 2185.0], [2272.0, 138.0], [2240.0, 2113.0], [2200.0, 2154.5], [2256.0, 2134.0], [2232.0, 2113.0], [2224.0, 2128.0], [2216.0, 2145.5], [2208.0, 2150.0], [2440.0, 108.0], [2656.0, 1526.5], [2680.0, 1530.0], [2672.0, 1528.0], [2664.0, 1531.5], [2608.0, 1130.0], [2584.0, 1559.0], [2600.0, 1552.0], [2592.0, 1546.0], [2648.0, 1535.0], [2640.0, 1534.0], [2632.0, 1534.0], [2624.0, 1533.0], [2712.0, 1659.0], [2800.0, 1636.0], [2696.0, 479.75], [2744.0, 1069.0], [2736.0, 1070.0], [2728.0, 1075.0], [2720.0, 1153.0], [2752.0, 1064.0], [2760.0, 1062.0], [2768.0, 1060.0], [2776.0, 1059.0], [2808.0, 1635.0], [2792.0, 1050.0], [2784.0, 1057.0], [2920.0, 1706.0], [2912.0, 1571.0], [2936.0, 1697.0], [2888.0, 1093.0], [2928.0, 1699.0], [2816.0, 1636.0], [2824.0, 1618.0], [2832.0, 1618.0], [2840.0, 1616.0], [2864.0, 1596.0], [2856.0, 1099.0], [2848.0, 1618.0], [2904.0, 1082.0], [2896.0, 1083.0], [2952.0, 1690.0], [3056.0, 1620.0], [2944.0, 1689.0], [2960.0, 1678.0], [2968.0, 1671.0], [3000.0, 1144.0], [2992.0, 1651.0], [2984.0, 1655.0], [2976.0, 1665.0], [3064.0, 888.5], [3016.0, 1135.0], [3024.0, 1632.0], [3032.0, 1629.0], [3048.0, 1620.0], [3040.0, 1623.0], [3104.0, 1587.0], [3096.0, 1593.0], [3088.0, 1596.0], [3080.0, 1602.0], [3072.0, 1606.0], [3264.0, 432.6], [3280.0, 315.0], [3256.0, 68.0], [3248.0, 62.125], [3272.0, 423.25], [3288.0, 67.0], [3304.0, 305.0], [3296.0, 312.5], [3384.0, 647.0], [3376.0, 41.5], [3328.0, 585.0], [3344.0, 443.5], [3352.0, 243.0], [3448.0, 657.0], [3392.0, 652.0], [3576.0, 1150.0], [3528.0, 664.0], [3520.0, 1177.0], [3536.0, 1186.0], [3544.0, 663.0], [3504.0, 1187.0], [3496.0, 1205.0], [3512.0, 1178.0], [3568.0, 660.0], [3560.0, 677.0], [3552.0, 662.0], [3480.0, 728.0], [3696.0, 571.0], [3704.0, 1069.0], [3688.0, 572.0], [3600.0, 974.6666666666666], [3648.0, 1110.0], [3656.0, 1103.0], [3664.0, 1083.0], [3672.0, 1080.0], [3584.0, 1150.0], [3592.0, 1146.0], [3640.0, 1109.0], [3632.0, 1117.0], [3624.0, 646.0], [3616.0, 620.0], [3816.0, 943.5], [3832.0, 935.5], [3776.0, 1209.0], [3824.0, 1165.0], [3808.0, 1182.0], [3736.0, 1247.0], [3720.0, 1256.0], [3712.0, 946.25], [3760.0, 1222.5], [3744.0, 1103.75], [3752.0, 1227.0], [3792.0, 1194.0], [3784.0, 686.0], [3800.0, 1190.0], [3904.0, 1096.5], [3960.0, 671.0], [3928.0, 1074.5], [3920.0, 1086.0], [3912.0, 1090.0], [3888.0, 909.5], [3840.0, 1155.0], [3896.0, 1100.0], [3880.0, 1123.0], [3872.0, 1116.0], [3848.0, 1148.0], [3856.0, 1130.0], [3936.0, 1065.0], [3944.0, 689.0], [3952.0, 673.0], [3968.0, 658.0], [4048.0, 619.0], [4024.0, 634.0], [4016.0, 636.0], [3976.0, 657.0], [4000.0, 646.0], [4008.0, 641.0], [4040.0, 616.0], [4056.0, 611.0], [4032.0, 727.0], [4256.0, 763.0], [4304.0, 770.0], [4144.0, 740.0], [4096.0, 735.0], [4192.0, 746.0], [4544.0, 204.0], [4400.0, 587.0], [4448.0, 581.0], [4321.0, 593.0], [4385.0, 103.0], [4353.0, 345.0], [4449.0, 582.0], [2073.0, 2223.0], [2161.0, 2172.0], [2081.0, 1167.5], [2089.0, 2212.0], [2097.0, 2217.0], [2105.0, 2208.0], [2065.0, 2228.0], [2057.0, 2223.0], [2049.0, 2230.0], [2113.0, 2208.0], [2121.0, 2205.0], [2129.0, 2190.0], [2137.0, 2191.0], [2169.0, 2168.0], [2153.0, 2175.0], [2145.0, 2184.0], [2185.0, 2161.0], [2241.0, 2113.6666666666665], [2249.0, 1724.5], [2177.0, 2169.0], [2193.0, 2158.0], [2201.0, 2155.0], [2233.0, 2112.0], [2225.0, 2128.0], [2217.0, 2145.0], [2409.0, 104.0], [2369.0, 100.0], [2537.0, 2087.0], [2657.0, 1526.0], [2681.0, 1529.0], [2625.0, 1533.0], [2665.0, 1527.0], [2585.0, 1558.0], [2609.0, 1129.0], [2601.0, 1551.0], [2593.0, 1546.0], [2649.0, 1535.0], [2633.0, 1535.0], [2801.0, 1635.0], [2753.0, 1067.0], [2761.0, 1062.0], [2769.0, 1060.0], [2809.0, 1634.0], [2793.0, 1050.0], [2785.0, 1054.0], [2697.0, 1532.0], [2689.0, 1530.0], [2713.0, 1659.0], [2745.0, 1071.0], [2737.0, 1070.0], [2729.0, 1075.0], [2721.0, 1155.0], [2777.0, 1056.0], [2825.0, 1617.0], [2841.0, 434.0], [2817.0, 1132.0], [2833.0, 1618.0], [2873.0, 1598.0], [2865.0, 1596.0], [2857.0, 1098.0], [2849.0, 1114.0], [2881.0, 1092.5], [2889.0, 1082.0], [2897.0, 1084.0], [2929.0, 1700.0], [2921.0, 1704.0], [2913.0, 1709.0], [2905.0, 1082.0], [3057.0, 1618.0], [3009.0, 1642.0], [3017.0, 1638.0], [3025.0, 1631.0], [3065.0, 1612.0], [3049.0, 1621.0], [3041.0, 1623.0], [2945.0, 1688.0], [2953.0, 1685.0], [2969.0, 1671.0], [2993.0, 1651.0], [2985.0, 1653.0], [2977.0, 1663.0], [3033.0, 1629.0], [3097.0, 1591.0], [3185.0, 25.0], [3105.0, 1586.0], [3089.0, 1596.0], [3081.0, 1602.0], [3073.0, 1606.0], [3201.0, 26.666666666666668], [3321.0, 414.2], [3257.0, 68.0], [3249.0, 31.333333333333336], [3265.0, 303.0], [3273.0, 386.0], [3281.0, 70.0], [3289.0, 66.0], [3313.0, 302.0], [3305.0, 304.5], [3377.0, 649.0], [3345.0, 246.0], [3353.0, 442.0], [3401.0, 649.0], [3369.0, 201.0], [3361.0, 242.0], [3553.0, 661.0], [3569.0, 666.0], [3513.0, 675.0], [3505.0, 1199.0], [3497.0, 1206.0], [3489.0, 947.5], [3521.0, 1193.0], [3529.0, 666.0], [3537.0, 663.0], [3577.0, 1150.0], [3561.0, 662.0], [3545.0, 1187.0], [3681.0, 1079.0], [3665.0, 1098.0], [3673.0, 1080.0], [3601.0, 1128.0], [3585.0, 1151.0], [3609.0, 903.0], [3689.0, 572.0], [3705.0, 1070.0], [3657.0, 587.0], [3649.0, 1104.0], [3641.0, 892.0], [3625.0, 898.0], [3617.0, 617.0], [3633.0, 1111.0], [3817.0, 1177.0], [3833.0, 933.5], [3777.0, 1209.0], [3785.0, 1205.0], [3793.0, 1193.0], [3801.0, 671.0], [3809.0, 940.5], [3737.0, 965.5], [3721.0, 1253.0], [3713.0, 1069.0], [3729.0, 1247.5], [3769.0, 1220.0], [3753.0, 1224.0], [3761.0, 1220.0], [3745.0, 967.0], [3945.0, 687.0], [3953.0, 673.0], [3937.0, 564.0], [3961.0, 679.0], [3921.0, 897.5], [3905.0, 1097.0], [3913.0, 1093.0], [3897.0, 907.0], [3889.0, 1104.0], [3881.0, 1112.0], [3873.0, 1126.0], [3865.0, 918.25], [3841.0, 929.5], [3849.0, 1144.0], [3857.0, 1141.0], [3977.0, 691.5], [4065.0, 740.0], [4033.0, 620.3333333333334], [3969.0, 660.0], [3985.0, 657.0], [4017.0, 676.5], [4009.0, 664.6666666666666], [4001.0, 643.0], [4025.0, 619.0], [4041.0, 676.5], [4057.0, 605.0], [4049.0, 609.0], [4114.0, 736.0], [4402.0, 105.0], [4546.0, 217.5], [4370.0, 102.0], [4466.0, 579.0], [4434.0, 584.0], [4147.0, 753.0], [4163.0, 755.0], [4547.0, 230.0], [4403.0, 586.0], [4483.0, 577.0], [4387.0, 103.0], [4355.0, 779.0], [4451.0, 808.0], [4435.0, 583.0], [4515.0, 201.0], [1077.0, 3084.0], [1073.0, 3065.0], [1033.0, 3081.0], [1069.0, 2565.0], [1065.0, 3077.0], [1061.0, 3069.0], [1057.0, 3069.0], [1053.0, 3072.0], [1049.0, 3076.5], [1045.0, 2823.5], [1041.0, 3096.0], [1141.0, 3090.5], [1145.0, 3220.0], [1137.0, 3065.0], [1101.0, 3081.0], [1097.0, 3075.5], [1093.0, 2562.0], [1133.0, 3093.0], [1125.0, 3223.0], [1121.0, 2809.0], [1117.0, 3067.0], [1109.0, 3061.0], [1105.0, 3082.0], [1201.0, 3067.8], [1209.0, 3061.0], [1213.0, 3080.5], [1205.0, 3080.0], [1189.0, 3075.5], [1185.0, 3074.0], [1181.0, 3057.5], [1157.0, 3064.0], [1153.0, 3062.5], [1165.0, 3072.5], [1161.0, 3081.0], [1177.0, 3073.0], [1173.0, 3087.0], [1169.0, 3082.75], [1229.0, 3072.0], [1273.0, 2089.0], [1277.0, 2089.0], [1269.0, 2659.0], [1261.0, 3065.6666666666665], [1245.0, 3065.0], [1241.0, 3066.5], [1237.0, 3082.0], [1225.0, 3065.5], [1221.0, 3068.0], [1217.0, 3077.0], [1341.0, 2074.0], [1321.0, 1082.0], [1333.0, 1084.5], [1329.0, 2076.0], [1325.0, 2075.0], [1317.0, 2073.0], [1313.0, 2074.0], [1309.0, 2073.0], [1281.0, 2089.0], [1289.0, 2089.0], [1285.0, 2090.0], [1305.0, 2094.5], [1301.0, 2093.0], [1297.0, 2093.0], [1393.0, 2051.0], [1401.0, 2648.0], [1397.0, 1371.0], [1405.0, 2620.0], [1381.0, 2049.0], [1377.0, 2049.0], [1373.0, 2050.0], [1345.0, 2075.0], [1353.0, 2065.0], [1349.0, 2061.0], [1369.0, 2046.0], [1365.0, 2059.0], [1361.0, 2059.0], [1421.0, 2642.0], [1469.0, 2635.0], [1457.0, 2634.0], [1453.0, 2631.0], [1445.0, 2658.0], [1437.0, 2637.0], [1433.0, 2641.0], [1429.0, 2616.0], [1425.0, 2633.5], [1413.0, 2621.0], [1409.0, 2633.0], [1521.0, 2626.5], [1517.0, 2755.0], [1513.0, 2090.0], [1509.0, 2630.0], [1501.0, 2632.0], [1497.0, 2620.5], [1493.0, 2627.0], [1489.0, 2616.5], [1485.0, 2619.0], [1481.0, 2624.0], [1549.0, 2628.0], [1593.0, 2630.0], [1589.0, 2655.5], [1581.0, 2647.0], [1569.0, 2620.0], [1565.0, 2627.0], [1557.0, 2617.0], [1545.0, 2629.0], [1541.0, 2629.0], [1653.0, 2655.0], [1617.0, 1370.5], [1657.0, 2629.0], [1645.0, 2624.0], [1641.0, 2628.5], [1633.0, 2615.0], [1625.0, 2624.0], [1605.0, 2630.0], [1621.0, 2638.5], [1613.0, 2660.0], [1609.0, 2624.0], [1689.0, 1779.6666666666667], [1717.0, 2601.0], [1709.0, 2607.0], [1693.0, 2601.0], [1681.0, 2605.0], [1669.0, 2611.0], [1665.0, 2612.0], [1777.0, 2564.0], [1749.0, 1345.5], [1785.0, 2561.0], [1773.0, 2575.0], [1765.0, 2570.5], [1761.0, 2577.0], [1737.0, 2575.0], [1733.0, 2597.375], [1729.0, 2600.0], [1801.0, 2564.0], [1845.0, 134.0], [1841.0, 2552.0], [1797.0, 2560.0], [1793.0, 2570.0], [1837.0, 2555.0], [1829.0, 2553.0], [1825.0, 2056.5], [1821.0, 2267.0], [1817.0, 2058.0], [1813.0, 2059.0], [1809.0, 2555.0], [1865.0, 2538.0], [1905.0, 1518.0], [1877.0, 137.0], [1917.0, 1521.0], [1897.0, 1522.5], [1893.0, 1521.0], [1881.0, 1520.0], [1861.0, 2540.0], [1873.0, 2536.0], [1869.0, 2533.0], [1981.0, 1578.0], [1961.0, 866.0], [1977.0, 1577.0], [1973.0, 1576.0], [1969.0, 1590.0], [1933.0, 1602.0], [1929.0, 1602.0], [1925.0, 1602.0], [1921.0, 1521.0], [1965.0, 1590.0], [1957.0, 1590.0], [1953.0, 1588.0], [1949.0, 1600.0], [1945.0, 1594.0], [1941.0, 1603.0], [1937.0, 1603.0], [2041.0, 2231.0], [2045.0, 2231.0], [2037.0, 1548.0], [2033.0, 1561.0], [2029.0, 1549.0], [2025.0, 1562.0], [2021.0, 1561.0], [2017.0, 1561.0], [2013.0, 2134.0], [1989.0, 1578.0], [1985.0, 1578.0], [1997.0, 1576.0], [1993.0, 1569.0], [2009.0, 1561.0], [2005.0, 1563.0], [2001.0, 1575.0], [2114.0, 2202.0], [2162.0, 2178.0], [2138.0, 1156.0], [2130.0, 2189.0], [2122.0, 2192.0], [2170.0, 2172.0], [2154.0, 2174.0], [2146.0, 2184.0], [2074.0, 2216.0], [2066.0, 2230.0], [2058.0, 2222.0], [2050.0, 2230.0], [2106.0, 2214.0], [2098.0, 2210.0], [2090.0, 2219.0], [2082.0, 2216.0], [2186.0, 2161.0], [2258.0, 2133.0], [2250.0, 2133.0], [2242.0, 2102.0], [2234.0, 2112.0], [2194.0, 2157.0], [2202.0, 2154.0], [2226.0, 2122.0], [2218.0, 2145.0], [2210.0, 2148.0], [2682.0, 1530.0], [2642.0, 1535.0], [2634.0, 1533.0], [2626.0, 1534.0], [2650.0, 1536.0], [2674.0, 1528.5], [2666.0, 1528.0], [2658.0, 1527.0], [2586.0, 1558.0], [2610.0, 1536.0], [2602.0, 1552.0], [2594.0, 1545.0], [2802.0, 1636.0], [2810.0, 1634.0], [2754.0, 1063.0], [2762.0, 1063.0], [2770.0, 1061.0], [2794.0, 1050.0], [2786.0, 1054.0], [2714.0, 1155.0], [2706.0, 1517.75], [2690.0, 1525.5], [2746.0, 1068.0], [2738.0, 1070.0], [2730.0, 1075.0], [2722.0, 1157.0], [2778.0, 1059.0], [2826.0, 1617.0], [2930.0, 1699.0], [2842.0, 862.0], [2834.0, 1618.0], [2818.0, 1132.0], [2874.0, 1592.0], [2866.0, 1596.0], [2858.0, 1598.0], [2850.0, 1113.0], [2938.0, 1172.0], [2882.0, 1093.0], [2890.0, 1082.0], [2898.0, 1083.0], [2906.0, 1082.0], [2922.0, 1705.0], [2914.0, 1708.0], [2954.0, 1679.0], [3042.0, 1622.0], [3066.0, 1611.0], [2962.0, 1170.3333333333333], [2946.0, 1689.0], [2970.0, 1670.0], [3002.0, 1395.0], [2994.0, 1146.0], [2978.0, 1658.0], [3010.0, 1641.0], [3018.0, 1638.0], [3026.0, 1630.0], [3058.0, 1617.0], [3050.0, 1620.0], [3034.0, 1128.0], [3114.0, 168.0], [3106.0, 1586.0], [3098.0, 1590.0], [3090.0, 1595.0], [3082.0, 1601.0], [3074.0, 1605.0], [3314.0, 54.0], [3266.0, 79.0], [3258.0, 67.25], [3250.0, 25.75], [3274.0, 73.0], [3282.0, 314.0], [3290.0, 66.0], [3306.0, 399.3333333333333], [3298.0, 58.0], [3338.0, 379.6666666666667], [3330.0, 276.0], [3354.0, 244.0], [3426.0, 652.0], [3570.0, 906.5], [3498.0, 931.5], [3490.0, 687.0], [3514.0, 1177.0], [3522.0, 1192.0], [3530.0, 1188.0], [3538.0, 666.0], [3578.0, 1149.0], [3562.0, 677.0], [3554.0, 664.0], [3482.0, 963.5], [3546.0, 665.0], [3690.0, 680.0], [3650.0, 1109.0], [3658.0, 1102.0], [3698.0, 1079.0], [3682.0, 572.0], [3610.0, 899.5], [3594.0, 888.0], [3602.0, 1128.0], [3674.0, 1079.0], [3618.0, 616.0], [3586.0, 1149.0], [3642.0, 1112.0], [3818.0, 703.0], [3810.0, 706.0], [3834.0, 1157.0], [3778.0, 1208.0], [3826.0, 939.0], [3738.0, 685.0], [3730.0, 692.0], [3714.0, 1067.0], [3770.0, 1219.0], [3762.0, 712.0], [3746.0, 1236.0], [3754.0, 1224.0], [3802.0, 1188.0], [3962.0, 670.0], [3946.0, 677.0], [3930.0, 1073.5], [3922.0, 1083.0], [3906.0, 1105.0], [3914.0, 1093.0], [3890.0, 1104.0], [3882.0, 1109.0], [3874.0, 913.5], [3850.0, 1147.0], [3858.0, 1129.0], [3866.0, 1137.0], [3938.0, 692.0], [3842.0, 925.5], [3978.0, 664.0], [3970.0, 696.5], [4026.0, 619.0], [4018.0, 627.0], [3986.0, 694.0], [3994.0, 642.6666666666666], [4010.0, 639.0], [4050.0, 607.0], [4042.0, 616.0], [4034.0, 621.0], [4058.0, 606.0], [4228.0, 763.0], [4324.0, 774.0], [4276.0, 755.0], [4244.0, 761.0], [4292.0, 756.0], [4132.0, 745.5], [4196.0, 752.5], [4388.0, 104.0], [4548.0, 231.0], [4500.0, 920.0], [4404.0, 105.0], [4532.0, 203.0], [4405.0, 787.0], [4549.0, 231.0], [4373.0, 441.0], [4421.0, 780.0], [4501.0, 122.0], [2067.0, 1174.0], [2075.0, 2215.0], [2107.0, 2209.0], [2059.0, 2227.0], [2051.0, 2230.0], [2099.0, 2216.0], [2091.0, 2213.0], [2083.0, 2213.0], [2147.0, 1155.0], [2115.0, 2208.0], [2123.0, 2199.0], [2131.0, 2188.0], [2163.0, 2178.0], [2155.0, 2182.0], [2139.0, 2186.0], [2203.0, 2153.0], [2243.0, 790.6666666666666], [2259.0, 1467.3333333333333], [2283.0, 138.0], [2251.0, 2132.0], [2227.0, 2113.0], [2195.0, 2156.0], [2187.0, 2160.0], [2179.0, 2168.0], [2307.0, 140.0], [2667.0, 1528.0], [2683.0, 1530.0], [2627.0, 1534.0], [2635.0, 1534.0], [2643.0, 1535.0], [2675.0, 1538.0], [2659.0, 1528.0], [2587.0, 1558.0], [2579.0, 1812.7587301587307], [2619.0, 1250.25], [2603.0, 2166.0], [2595.0, 1553.0], [2651.0, 1535.0], [2803.0, 1636.0], [2755.0, 1066.0], [2763.0, 1061.0], [2771.0, 1057.0], [2811.0, 1633.0], [2795.0, 1049.0], [2787.0, 1054.0], [2691.0, 1521.0], [2699.0, 1526.5], [2715.0, 1659.0], [2747.0, 1069.0], [2739.0, 1070.0], [2731.0, 1075.0], [2723.0, 1159.0], [2779.0, 1055.0], [2827.0, 1617.0], [2843.0, 878.0], [2819.0, 1131.0], [2835.0, 1618.0], [2875.0, 1091.0], [2867.0, 1595.0], [2859.0, 1598.0], [2851.0, 1112.0], [2939.0, 1695.0], [2891.0, 1083.0], [2899.0, 1083.0], [2931.0, 1699.0], [2923.0, 1703.0], [2915.0, 1708.0], [2907.0, 1080.0], [2955.0, 917.5], [3059.0, 1617.0], [2995.0, 904.5], [2987.0, 1653.5], [2979.0, 1658.0], [2947.0, 1688.0], [3003.0, 1644.0], [3011.0, 1641.0], [3019.0, 1135.0], [3027.0, 1629.0], [3067.0, 1611.0], [3043.0, 1622.0], [2971.0, 1669.0], [2963.0, 1674.0], [3035.0, 1626.0], [3187.0, 25.0], [3107.0, 1585.0], [3099.0, 1589.0], [3091.0, 1596.0], [3083.0, 1601.0], [3075.0, 1604.0], [3259.0, 67.0], [3251.0, 24.75], [3267.0, 79.0], [3275.0, 73.0], [3283.0, 314.5], [3291.0, 315.0], [3315.0, 576.3333333333334], [3299.0, 437.5], [3339.0, 792.6], [3331.0, 587.0], [3347.0, 245.0], [3355.0, 242.0], [3371.0, 201.0], [3363.0, 645.0], [3475.0, 656.0], [3563.0, 661.0], [3579.0, 908.5], [3547.0, 664.0], [3539.0, 1189.0], [3467.0, 660.0], [3459.0, 655.0], [3515.0, 1177.0], [3507.0, 1190.5], [3499.0, 1189.0], [3491.0, 1208.0], [3523.0, 1192.0], [3531.0, 665.0], [3571.0, 1153.0], [3555.0, 657.0], [3699.0, 1077.5], [3683.0, 577.0], [3651.0, 891.5], [3675.0, 880.5], [3667.0, 955.0], [3659.0, 585.0], [3643.0, 895.0], [3603.0, 1128.0], [3595.0, 630.0], [3611.0, 1126.0], [3691.0, 573.0], [3707.0, 1070.0], [3635.0, 967.0], [3619.0, 1009.5], [3627.0, 1121.0], [3827.0, 1012.6666666666666], [3835.0, 933.5], [3787.0, 942.5], [3795.0, 1027.3333333333333], [3819.0, 708.0], [3739.0, 1060.3333333333333], [3723.0, 1065.0], [3715.0, 1067.0], [3731.0, 1247.5], [3771.0, 1217.0], [3755.0, 1223.0], [3763.0, 1220.0], [3747.0, 1233.0], [3947.0, 685.0], [3963.0, 671.0], [3939.0, 688.0], [3955.0, 673.0], [3931.0, 1069.0], [3923.0, 1082.0], [3915.0, 1082.0], [3891.0, 1105.0], [3883.0, 1108.0], [3899.0, 1100.0], [3843.0, 1151.0], [3859.0, 1139.0], [3979.0, 656.0], [4091.0, 739.5], [4035.0, 618.0], [3971.0, 698.6666666666666], [3995.0, 731.0], [4003.0, 638.0], [4011.0, 639.0], [4019.0, 636.0], [4027.0, 618.0], [4051.0, 607.0], [4118.0, 738.0], [4134.0, 601.0], [4102.0, 488.0], [4214.0, 760.0], [4278.0, 755.0], [4502.0, 122.0], [4358.0, 346.5], [4470.0, 574.0], [4454.0, 579.0], [4183.0, 758.0], [4199.0, 598.0], [4551.0, 499.97368421052613], [4471.0, 376.66666666666663], [4439.0, 583.0], [4503.0, 164.91304347826093], [4487.0, 919.0], [517.0, 3076.0], [541.0, 3579.0], [539.0, 3567.0], [533.0, 3077.0], [527.0, 3569.0], [525.0, 3573.0], [523.0, 3578.0], [515.0, 3323.0], [513.0, 3581.5], [575.0, 3568.0], [569.0, 3578.0], [567.0, 3730.0], [565.0, 3402.3333333333335], [563.0, 3314.0], [557.0, 3074.0], [555.0, 3574.0], [553.0, 3406.0], [547.0, 3569.0], [545.0, 3574.0], [605.0, 2586.0], [607.0, 2591.0], [603.0, 2597.0], [601.0, 2591.0], [599.0, 2589.0], [597.0, 2600.0], [593.0, 2592.0], [591.0, 3567.5], [581.0, 3573.3333333333335], [577.0, 3560.0], [589.0, 3555.0], [587.0, 3567.0], [585.0, 3567.0], [637.0, 2572.0], [639.0, 2572.0], [635.0, 2576.0], [633.0, 2586.0], [631.0, 2574.0], [629.0, 2575.0], [627.0, 2589.0], [625.0, 2576.0], [623.0, 2582.0], [611.0, 2584.0], [609.0, 2585.0], [615.0, 2585.0], [613.0, 2581.0], [621.0, 2583.0], [619.0, 2579.0], [617.0, 2580.0], [669.0, 2560.0], [671.0, 2566.0], [667.0, 2557.0], [665.0, 2558.0], [663.0, 2558.0], [661.0, 2561.0], [659.0, 2571.0], [657.0, 2572.0], [655.0, 2569.0], [643.0, 2574.0], [641.0, 2569.0], [647.0, 2570.0], [645.0, 2573.0], [653.0, 2565.0], [651.0, 2566.0], [649.0, 2569.0], [679.0, 2554.0], [685.0, 1306.5], [681.0, 1303.5], [703.0, 2560.0], [697.0, 2569.0], [695.0, 2567.0], [693.0, 2564.0], [689.0, 2563.0], [687.0, 2564.0], [673.0, 2568.0], [677.0, 3318.0], [675.0, 2567.0], [683.0, 2567.0], [733.0, 2559.0], [735.0, 2545.0], [731.0, 2559.0], [711.0, 2559.0], [707.0, 2553.5], [705.0, 2569.0], [727.0, 2548.0], [725.0, 2556.0], [721.0, 2565.0], [719.0, 2570.0], [717.0, 2570.0], [715.0, 2554.0], [713.0, 2553.0], [743.0, 2553.0], [767.0, 2549.5], [761.0, 2562.6666666666665], [757.0, 2548.0], [755.0, 2543.0], [753.0, 2561.0], [749.0, 2552.0], [747.0, 2557.0], [745.0, 2544.5], [739.0, 2557.0], [737.0, 2551.5], [793.0, 51.0], [779.0, 1303.5], [799.0, 3298.0], [789.0, 2550.0], [787.0, 2551.75], [783.0, 2541.0], [775.0, 2545.0], [771.0, 2553.5], [769.0, 2552.0], [827.0, 2563.0], [831.0, 2561.0], [825.0, 3061.0], [803.0, 3299.0], [823.0, 3062.0], [821.0, 2566.0], [817.0, 3061.0], [815.0, 2555.0], [813.0, 2561.0], [811.0, 2562.5], [809.0, 2904.6666666666665], [857.0, 2558.0], [863.0, 2554.0], [853.0, 55.0], [861.0, 3057.0], [851.0, 2558.0], [849.0, 2558.5], [847.0, 3072.0], [835.0, 2565.0], [833.0, 3061.0], [845.0, 3060.0], [843.0, 3059.0], [841.0, 3071.0], [891.0, 2725.5], [867.0, 1562.0], [865.0, 2555.0], [871.0, 2580.0], [869.0, 2596.0], [895.0, 2592.0], [887.0, 3120.0], [883.0, 2593.0], [881.0, 3126.0], [879.0, 2598.3333333333335], [875.0, 2600.0], [873.0, 2597.0], [925.0, 3099.0], [927.0, 3095.5], [923.0, 3089.0], [921.0, 3109.0], [919.0, 3100.0], [917.0, 2589.5], [915.0, 3094.0], [913.0, 2843.5], [911.0, 3101.0], [899.0, 2596.0], [897.0, 3093.0], [903.0, 3115.0], [901.0, 2635.5], [907.0, 3119.0], [905.0, 2592.0], [945.0, 2588.0], [955.0, 3112.0], [951.0, 3096.0], [949.0, 2839.5], [947.0, 3088.0], [943.0, 3088.0], [939.0, 3111.0], [933.0, 3113.0], [931.0, 3089.5], [929.0, 3108.0], [989.0, 3082.0], [991.0, 3093.5], [985.0, 3090.0], [967.0, 3085.0], [963.0, 2582.0], [961.0, 3092.0], [983.0, 3087.0], [981.0, 3107.0], [979.0, 2927.3333333333335], [975.0, 2564.0], [971.0, 3090.0], [969.0, 3094.0], [999.0, 3087.0], [1009.0, 2082.0], [1021.0, 3096.5], [1015.0, 2572.0], [1013.0, 3097.0], [1005.0, 3085.0], [1001.0, 2582.0], [997.0, 3078.0], [993.0, 2830.5], [1034.0, 3080.0], [1082.0, 2559.0], [1086.0, 3063.0], [1074.0, 2565.0], [1030.0, 2827.5], [1026.0, 2830.0], [1070.0, 2568.0], [1066.0, 2566.0], [1054.0, 2569.0], [1050.0, 3075.0], [1046.0, 3069.0], [1042.0, 3081.0], [1146.0, 3089.0], [1150.0, 3075.0], [1142.0, 3089.0], [1138.0, 3068.0], [1134.0, 3090.0], [1130.0, 3057.0], [1122.0, 3065.0], [1114.0, 3067.5], [1094.0, 3074.0], [1102.0, 3072.0], [1098.0, 3077.0], [1110.0, 3060.0], [1106.0, 3062.0], [1206.0, 3068.3333333333335], [1214.0, 3077.0], [1202.0, 3070.0], [1162.0, 3080.0], [1158.0, 3080.0], [1198.0, 3058.0], [1194.0, 3082.6666666666665], [1190.0, 3057.0], [1186.0, 3084.0], [1178.0, 3057.0], [1174.0, 3058.0], [1170.0, 3072.0], [1278.0, 2089.0], [1258.0, 2080.3333333333335], [1274.0, 2089.0], [1266.0, 3193.0], [1262.0, 3202.0], [1254.0, 3073.3333333333335], [1250.0, 3055.0], [1246.0, 3060.5], [1238.0, 3076.0], [1234.0, 3070.5], [1334.0, 2077.0], [1282.0, 1088.0], [1342.0, 2075.0], [1330.0, 2076.0], [1294.0, 2090.5], [1290.0, 2090.0], [1286.0, 2089.0], [1326.0, 2075.0], [1322.0, 2075.0], [1318.0, 2073.0], [1314.0, 2073.0], [1310.0, 2075.0], [1306.0, 2094.0], [1302.0, 2093.0], [1298.0, 2092.0], [1402.0, 2642.0], [1374.0, 1072.5], [1346.0, 2062.0], [1354.0, 2061.0], [1350.0, 2066.0], [1406.0, 2620.0], [1398.0, 2644.0], [1394.0, 2637.0], [1390.0, 2046.0], [1386.0, 2045.0], [1378.0, 2044.0], [1370.0, 2046.0], [1366.0, 2060.0], [1362.0, 2060.0], [1462.0, 2632.6666666666665], [1466.0, 2622.6666666666665], [1458.0, 2629.0], [1418.0, 2627.0], [1414.0, 2621.0], [1410.0, 2641.0], [1454.0, 2633.0], [1450.0, 2632.0], [1442.0, 2638.25], [1438.0, 2637.0], [1434.0, 2641.0], [1430.0, 2636.0], [1426.0, 2624.0], [1522.0, 2624.0], [1530.0, 2624.0], [1534.0, 2625.0], [1526.0, 2621.0], [1518.0, 2621.0], [1510.0, 2628.0], [1502.0, 2618.5], [1498.0, 2630.0], [1486.0, 2624.0], [1482.0, 2624.0], [1478.0, 2614.0], [1474.0, 2625.5], [1570.0, 2633.0], [1598.0, 2628.0], [1582.0, 2653.0], [1578.0, 2648.0], [1574.0, 2625.6666666666665], [1566.0, 2632.0], [1554.0, 2618.0], [1550.0, 2626.0], [1546.0, 2629.5], [1542.0, 2629.0], [1538.0, 2633.0], [1610.0, 2653.0], [1650.0, 2646.0], [1630.0, 115.0], [1606.0, 2636.0], [1602.0, 2627.0], [1642.0, 1370.5], [1638.0, 2625.0], [1634.0, 2620.6666666666665], [1622.0, 2616.0], [1618.0, 2618.3333333333335], [1614.0, 2626.6666666666665], [1722.0, 2597.0], [1726.0, 2603.3333333333335], [1718.0, 2601.0], [1714.0, 2598.0], [1710.0, 2595.0], [1702.0, 2597.0], [1698.0, 2598.5], [1694.0, 2600.0], [1666.0, 2619.0], [1678.0, 2601.0], [1670.0, 2608.0], [1686.0, 2601.0], [1682.0, 2611.0], [1790.0, 2568.0], [1774.0, 2565.0], [1770.0, 2561.0], [1766.0, 2565.0], [1758.0, 2570.0], [1730.0, 2596.6666666666665], [1754.0, 2574.0], [1750.0, 2573.0], [1742.0, 2571.5], [1734.0, 2622.0], [1846.0, 2549.6666666666665], [1830.0, 133.0], [1854.0, 2541.0], [1850.0, 2545.0], [1842.0, 2561.0], [1818.0, 2059.0], [1814.0, 2060.0], [1810.0, 2554.0], [1806.0, 2555.5], [1802.0, 2558.0], [1798.0, 2571.0], [1794.0, 2571.0], [1910.0, 1519.5], [1918.0, 1520.0], [1902.0, 139.0], [1914.0, 1520.0], [1894.0, 1522.0], [1890.0, 1521.0], [1882.0, 1639.0], [1878.0, 2539.0], [1870.0, 2535.0], [1866.0, 2534.0], [1862.0, 2545.0], [1858.0, 2540.0], [1978.0, 1588.0], [1938.0, 871.5], [1942.0, 1654.0], [1950.0, 1588.0], [1926.0, 1603.0], [1934.0, 1602.0], [1930.0, 1603.0], [1946.0, 1602.0], [1970.0, 867.0], [1982.0, 861.5], [1974.0, 1589.0], [1966.0, 1591.0], [1962.0, 1590.0], [1958.0, 1589.0], [1954.0, 1588.0], [2042.0, 2231.0], [1998.0, 861.5], [1994.0, 857.5], [1990.0, 1578.0], [1986.0, 1579.0], [2014.0, 1562.0], [2010.0, 1562.0], [2006.0, 1575.0], [2002.0, 1563.0], [2046.0, 1173.5], [2038.0, 1548.0], [2034.0, 1548.0], [2030.0, 1562.0], [2026.0, 1555.0], [2022.0, 1560.0], [2018.0, 1562.0], [2108.0, 2210.0], [2092.0, 2213.0], [2084.0, 2214.0], [2100.0, 2210.0], [2076.0, 2216.0], [2068.0, 2224.0], [2060.0, 2232.0], [2052.0, 2230.0], [2148.0, 2183.0], [2124.0, 1157.0], [2132.0, 2189.0], [2140.0, 1160.5], [2172.0, 2170.5], [2116.0, 2201.0], [2164.0, 2183.0], [2156.0, 2174.0], [2196.0, 2162.0], [2180.0, 2171.0], [2260.0, 2134.0], [2244.0, 1627.0], [2236.0, 2113.0], [2228.0, 2114.0], [2220.0, 2141.5], [2212.0, 2147.0], [2684.0, 1530.0], [2644.0, 594.3333333333333], [2564.0, 2084.0], [2580.0, 1560.0], [2604.0, 1551.0], [2596.0, 1552.0], [2652.0, 1536.0], [2636.0, 1537.0], [2700.0, 1535.0], [2692.0, 1537.0], [2708.0, 1518.0], [2716.0, 1157.0], [2748.0, 1067.0], [2740.0, 1070.0], [2732.0, 1074.0], [2724.0, 1659.0], [2812.0, 1634.0], [2756.0, 1063.0], [2764.0, 1062.0], [2772.0, 1059.0], [2804.0, 1636.0], [2796.0, 1122.0], [2788.0, 1050.0], [2924.0, 1703.0], [2940.0, 1693.0], [2884.0, 1093.0], [2892.0, 1083.0], [2876.0, 1091.0], [2820.0, 1131.0], [2828.0, 1616.0], [2836.0, 1617.0], [2844.0, 1615.0], [2868.0, 1595.0], [2860.0, 1597.0], [2852.0, 1113.0], [2908.0, 1783.0], [2900.0, 1083.0], [2948.0, 1687.0], [3004.0, 160.0], [2956.0, 1681.0], [2964.0, 1674.0], [2972.0, 1669.0], [2996.0, 1650.0], [2988.0, 1652.0], [2980.0, 1657.0], [3068.0, 1610.0], [3012.0, 1640.0], [3020.0, 1136.0], [3028.0, 1629.0], [3036.0, 1626.0], [3060.0, 1615.0], [3052.0, 1620.0], [3044.0, 1621.0], [3116.0, 145.0], [3092.0, 1594.0], [3108.0, 640.0], [3196.0, 1580.0], [3100.0, 1588.0], [3084.0, 1597.0], [3076.0, 1603.0], [3260.0, 194.21428571428567], [3252.0, 71.0], [3220.0, 28.0], [3268.0, 498.8571428571429], [3276.0, 72.0], [3284.0, 68.0], [3292.0, 820.0], [3316.0, 54.0], [3308.0, 304.0], [3332.0, 220.0], [3340.0, 50.0], [3436.0, 1565.0], [3372.0, 96.0], [3364.0, 203.0], [3572.0, 1153.0], [3524.0, 1192.0], [3532.0, 1188.0], [3540.0, 663.0], [3548.0, 1185.0], [3516.0, 919.5], [3508.0, 920.0], [3500.0, 1189.0], [3492.0, 1206.0], [3580.0, 1150.0], [3564.0, 662.0], [3556.0, 677.0], [3484.0, 963.5], [3476.0, 1385.5323943661967], [3692.0, 629.0], [3700.0, 1076.0], [3684.0, 627.5], [3612.0, 1126.0], [3604.0, 1127.0], [3652.0, 889.5], [3660.0, 1101.0], [3668.0, 1080.0], [3676.0, 1079.0], [3628.0, 895.5], [3644.0, 1112.0], [3596.0, 1143.0], [3636.0, 1110.0], [3620.0, 620.0], [3740.0, 1246.0], [3820.0, 1057.5], [3828.0, 934.5], [3780.0, 1207.0], [3812.0, 1182.6666666666667], [3772.0, 952.5], [3756.0, 957.0], [3764.0, 714.0], [3748.0, 1232.0], [3796.0, 1191.0], [3788.0, 1198.0], [3804.0, 1186.0], [3908.0, 1094.5], [3956.0, 703.0], [3932.0, 899.5], [3924.0, 1072.0], [3916.0, 1082.0], [3964.0, 663.0], [3900.0, 1100.0], [3884.0, 907.0], [3876.0, 1120.0], [3852.0, 999.6666666666666], [3868.0, 1120.0], [3940.0, 690.0], [3948.0, 676.0], [3972.0, 666.0], [4076.0, 730.0], [4028.0, 618.0], [4020.0, 635.0], [3980.0, 664.0], [3988.0, 643.5], [3996.0, 640.5], [4004.0, 732.0], [4012.0, 640.0], [4052.0, 607.0], [4044.0, 620.5], [4060.0, 608.0], [4152.0, 754.0], [4296.0, 512.0], [4120.0, 738.0], [4280.0, 754.5], [4392.0, 103.0], [4345.0, 489.0], [4505.0, 199.0], [4521.0, 202.0], [2109.0, 2203.0], [2085.0, 2218.0], [2093.0, 2218.0], [2101.0, 2216.0], [2077.0, 2215.0], [2069.0, 2224.0], [2061.0, 2231.0], [2053.0, 2230.0], [2173.0, 2169.0], [2117.0, 2207.0], [2125.0, 2198.0], [2133.0, 2200.0], [2141.0, 2185.0], [2165.0, 2177.0], [2157.0, 2187.0], [2149.0, 2183.0], [2253.0, 2133.0], [2261.0, 2133.0], [2237.0, 2113.0], [2181.0, 2168.0], [2197.0, 2163.0], [2205.0, 2152.5], [2229.0, 2113.0], [2221.0, 2148.0], [2325.0, 142.0], [2661.0, 1532.5], [2677.0, 1528.0], [2629.0, 1533.5], [2669.0, 1531.5], [2613.0, 1536.6666666666667], [2581.0, 1566.0], [2589.0, 1557.5], [2605.0, 1551.0], [2597.0, 1552.0], [2645.0, 1535.0], [2637.0, 1533.0], [2805.0, 1635.0], [2813.0, 1638.0], [2757.0, 1062.0], [2765.0, 1060.0], [2773.0, 1058.0], [2797.0, 1622.0], [2789.0, 1049.0], [2749.0, 1069.0], [2701.0, 1534.0], [2741.0, 1070.0], [2733.0, 1072.0], [2725.0, 1666.0], [2781.0, 1055.5], [2821.0, 1132.0], [2925.0, 1703.0], [2877.0, 1091.0], [2829.0, 1616.0], [2869.0, 1594.0], [2861.0, 1596.0], [2853.0, 1114.0], [2941.0, 1693.0], [2885.0, 1093.0], [2893.0, 1083.0], [2901.0, 1082.0], [2933.0, 1696.5], [2917.0, 1708.0], [2845.0, 1618.0], [2909.0, 1080.0], [3053.0, 1620.0], [3061.0, 889.5], [3069.0, 1609.0], [3013.0, 1640.0], [3029.0, 1127.0], [3045.0, 1620.0], [3005.0, 1644.0], [2949.0, 1688.0], [2965.0, 1674.0], [2957.0, 1681.0], [2973.0, 1667.0], [2997.0, 1649.0], [2989.0, 1652.0], [2981.0, 1652.0], [3037.0, 1624.0], [3173.0, 24.0], [3109.0, 1585.0], [3101.0, 1589.0], [3093.0, 1593.0], [3085.0, 1597.0], [3077.0, 1603.0], [3317.0, 53.0], [3261.0, 462.5], [3253.0, 70.0], [3245.0, 48.0], [3269.0, 78.0], [3277.0, 532.923076923077], [3285.0, 67.0], [3293.0, 314.0], [3325.0, 584.0], [3309.0, 302.0], [3301.0, 223.33333333333334], [3341.0, 640.7878787878788], [3373.0, 44.0], [3333.0, 275.0], [3349.0, 686.3333333333333], [3357.0, 242.0], [3365.0, 203.0], [3477.0, 735.0], [3485.0, 1042.5], [3517.0, 1177.0], [3509.0, 1198.0], [3501.0, 1189.0], [3493.0, 1188.0], [3581.0, 1152.0], [3525.0, 1192.0], [3533.0, 664.0], [3573.0, 1153.0], [3557.0, 663.0], [3541.0, 663.0], [3653.0, 1105.0], [3669.0, 1081.0], [3677.0, 1079.0], [3605.0, 669.0], [3597.0, 903.5], [3645.0, 1112.0], [3589.0, 1148.3333333333333], [3661.0, 585.0], [3613.0, 898.0], [3621.0, 620.0], [3629.0, 1113.0], [3637.0, 1111.0], [3829.0, 935.0], [3781.0, 1206.5], [3789.0, 1195.0], [3837.0, 1157.0], [3797.0, 1191.0], [3805.0, 1187.0], [3821.0, 1172.0], [3813.0, 702.0], [3741.0, 964.5], [3717.0, 1067.0], [3725.0, 1252.0], [3733.0, 1247.0], [3773.0, 1212.0], [3765.0, 698.0], [3757.0, 955.5], [3749.0, 1227.0], [3941.0, 688.0], [3869.0, 1131.0], [3949.0, 684.0], [3933.0, 694.0], [3909.0, 905.5], [3917.0, 1081.0], [3893.0, 1103.5], [3885.0, 1108.0], [3877.0, 1112.0], [3901.0, 1097.0], [3845.0, 1150.5], [3853.0, 1142.0], [3861.0, 1132.0], [3965.0, 671.0], [3981.0, 695.5], [4077.0, 732.0], [4085.0, 734.0], [4037.0, 618.0], [3973.0, 665.0], [3997.0, 636.0], [4005.0, 632.0], [4013.0, 631.0], [4021.0, 684.0], [4029.0, 618.0], [4061.0, 606.0], [4053.0, 607.0], [4045.0, 616.0], [4234.0, 763.0], [4170.0, 743.0], [4282.0, 767.0], [4442.0, 583.5], [4155.0, 741.0], [4203.0, 759.0], [4395.0, 444.5], [4459.0, 111.0], [4443.0, 109.0], [4491.0, 919.0], [1079.0, 3090.0], [1083.0, 3067.0], [1075.0, 3083.0], [1039.0, 3088.3333333333335], [1027.0, 3081.0], [1067.0, 2564.0], [1063.0, 3093.5], [1059.0, 3087.0], [1055.0, 3081.0], [1051.0, 3080.0], [1047.0, 3072.0], [1043.0, 3078.0], [1103.0, 3064.0], [1147.0, 3048.0], [1143.0, 3093.0], [1135.0, 3082.5], [1127.0, 3140.5], [1123.0, 3058.0], [1119.0, 2813.5], [1091.0, 2765.4], [1099.0, 3061.0], [1095.0, 3072.0], [1211.0, 3084.5], [1215.0, 3076.0], [1207.0, 3085.0], [1195.0, 3055.0], [1187.0, 3069.0], [1183.0, 3077.0], [1179.0, 3058.0], [1175.0, 3084.0], [1159.0, 3065.0], [1155.0, 3067.5], [1231.0, 3058.5], [1275.0, 2089.0], [1279.0, 2089.0], [1271.0, 2639.0], [1255.0, 3076.0], [1251.0, 3062.0], [1247.0, 3056.0], [1243.0, 3053.5], [1239.0, 3068.0], [1227.0, 3058.0], [1223.0, 3054.0], [1219.0, 3081.6666666666665], [1339.0, 2079.0], [1311.0, 1082.0], [1287.0, 2089.0], [1283.0, 2088.0], [1295.0, 2092.0], [1291.0, 2091.0], [1307.0, 2094.0], [1303.0, 2094.0], [1343.0, 2074.0], [1335.0, 2078.0], [1331.0, 2077.0], [1327.0, 2075.0], [1323.0, 2075.0], [1319.0, 2073.0], [1315.0, 2073.0], [1403.0, 2635.0], [1351.0, 1079.0], [1347.0, 2062.0], [1355.0, 2065.0], [1375.0, 2050.0], [1371.0, 2051.0], [1367.0, 2060.0], [1363.0, 2054.0], [1359.0, 1570.5], [1407.0, 2643.0], [1399.0, 2646.0], [1395.0, 2637.0], [1391.0, 2049.0], [1387.0, 2043.0], [1383.0, 2418.0], [1379.0, 2048.0], [1423.0, 2641.5], [1463.0, 2633.0], [1471.0, 2636.5], [1459.0, 2615.0], [1455.0, 2618.0], [1451.0, 2637.0], [1435.0, 2642.0], [1431.0, 2640.0], [1427.0, 2615.0], [1419.0, 2637.0], [1415.0, 2637.0], [1411.0, 2623.0], [1531.0, 2632.75], [1535.0, 2626.0], [1523.0, 2624.0], [1483.0, 2623.0], [1479.0, 2609.0], [1519.0, 2627.0], [1515.0, 2091.0], [1511.0, 2625.0], [1507.0, 2627.0], [1503.0, 2627.0], [1499.0, 2612.0], [1495.0, 2619.5], [1491.0, 2625.5], [1595.0, 2637.0], [1599.0, 2628.0], [1591.0, 2630.0], [1587.0, 2733.0], [1579.0, 2651.0], [1575.0, 2612.0], [1571.0, 2628.0], [1567.0, 2624.0], [1539.0, 2606.0], [1547.0, 2632.0], [1543.0, 2627.0], [1563.0, 2630.3333333333335], [1559.0, 2625.75], [1655.0, 118.0], [1663.0, 1991.25], [1659.0, 2648.5], [1643.0, 2643.5], [1631.0, 2652.5], [1627.0, 2621.5], [1719.0, 2598.5], [1671.0, 1377.5], [1703.0, 122.0], [1727.0, 2597.0], [1723.0, 2596.6666666666665], [1711.0, 2606.0], [1687.0, 2597.0], [1683.0, 2611.0], [1679.0, 2611.0], [1675.0, 2609.3333333333335], [1743.0, 2578.0], [1783.0, 2561.6666666666665], [1787.0, 2560.0], [1779.0, 2560.0], [1739.0, 2575.0], [1731.0, 2595.0], [1771.0, 2566.5], [1763.0, 2564.0], [1759.0, 2570.0], [1755.0, 2568.5], [1751.0, 2567.0], [1747.0, 2573.3333333333335], [1847.0, 2549.5], [1855.0, 2546.0], [1843.0, 2553.0], [1839.0, 2555.0], [1835.0, 2555.0], [1827.0, 2057.0], [1823.0, 2350.5], [1815.0, 2062.0], [1811.0, 2554.0], [1871.0, 2537.0], [1891.0, 1060.0], [1907.0, 1519.0], [1899.0, 1522.5], [1895.0, 1523.0], [1887.0, 1520.25], [1879.0, 2539.0], [1875.0, 2539.0], [1867.0, 2543.0], [1859.0, 2540.0], [1979.0, 1579.0], [1983.0, 1578.0], [1975.0, 1577.0], [1971.0, 1578.0], [1967.0, 1590.0], [1963.0, 1590.0], [1959.0, 1590.0], [1955.0, 1588.0], [1951.0, 1588.0], [1927.0, 1602.0], [1923.0, 1520.5], [1935.0, 1603.0], [1931.0, 1602.0], [1947.0, 1589.0], [1943.0, 1595.0], [1939.0, 1603.0], [2039.0, 1548.0], [1995.0, 857.5], [1991.0, 1578.0], [1987.0, 1577.0], [2003.0, 861.5], [2011.0, 1562.0], [2007.0, 1575.0], [2015.0, 855.5], [2047.0, 1173.0], [2031.0, 838.5], [2043.0, 2231.0], [2035.0, 1561.0], [1999.0, 1575.0], [2027.0, 1561.0], [2023.0, 1561.0], [2019.0, 1561.0], [2166.0, 2168.0], [2134.0, 2195.0], [2126.0, 2190.0], [2118.0, 2200.0], [2158.0, 2180.0], [2150.0, 2183.0], [2110.0, 2203.0], [2054.0, 2229.0], [2070.0, 2228.0], [2062.0, 2226.0], [2102.0, 2209.0], [2094.0, 2212.0], [2086.0, 2213.0], [2142.0, 2190.0], [2190.0, 2160.5], [2294.0, 139.0], [2246.0, 1131.0], [2254.0, 2133.0], [2182.0, 2161.0], [2206.0, 2243.0], [2230.0, 2112.0], [2222.0, 2129.0], [2214.0, 2146.5], [2446.0, 109.0], [2454.0, 110.0], [2662.0, 1527.0], [2678.0, 1528.0], [2646.0, 830.0], [2630.0, 1534.0], [2686.0, 1530.0], [2670.0, 1527.0], [2590.0, 2181.0], [2582.0, 1566.0], [2566.0, 2087.0], [2622.0, 1533.0], [2614.0, 1538.0], [2606.0, 1551.0], [2598.0, 1551.0], [2790.0, 1050.0], [2814.0, 1637.0], [2758.0, 1063.0], [2766.0, 1062.0], [2774.0, 1059.0], [2806.0, 1635.0], [2718.0, 1157.5], [2702.0, 1534.0], [2694.0, 1525.5], [2750.0, 1064.0], [2742.0, 1070.0], [2734.0, 1071.0], [2782.0, 1056.0], [2830.0, 1618.0], [2838.0, 1617.0], [2822.0, 1618.0], [2846.0, 1618.0], [2878.0, 1091.0], [2870.0, 1594.0], [2862.0, 1596.0], [2854.0, 1600.0], [2942.0, 1692.0], [2886.0, 1095.0], [2894.0, 1082.0], [2902.0, 1083.0], [2910.0, 1080.0], [2934.0, 1697.0], [2926.0, 1702.0], [2918.0, 1708.0], [2958.0, 1680.0], [2950.0, 1686.0], [2966.0, 1672.0], [3006.0, 1642.0], [2998.0, 1649.0], [2990.0, 1653.0], [2982.0, 1656.0], [3070.0, 1608.0], [3014.0, 1640.0], [3022.0, 1635.5], [3030.0, 1628.0], [3062.0, 1613.0], [3038.0, 1623.0], [3094.0, 1593.0], [3118.0, 1583.0], [3166.0, 22.0], [3110.0, 1584.0], [3102.0, 1588.0], [3086.0, 1596.0], [3078.0, 1602.0], [3214.0, 1580.0], [3262.0, 368.3333333333333], [3230.0, 30.0], [3254.0, 69.0], [3246.0, 118.14285714285714], [3206.0, 27.0], [3270.0, 538.0], [3278.0, 232.33333333333334], [3286.0, 68.0], [3294.0, 61.0], [3326.0, 277.3333333333333], [3318.0, 54.0], [3302.0, 306.0], [3350.0, 49.0], [3334.0, 275.0], [3342.0, 644.0], [3438.0, 656.0], [3374.0, 43.0], [3366.0, 201.0], [3574.0, 1153.0], [3502.0, 1182.0], [3510.0, 1178.0], [3582.0, 1149.0], [3526.0, 1172.0], [3534.0, 664.0], [3558.0, 658.0], [3486.0, 1208.0], [3478.0, 728.0], [3518.0, 1177.0], [3542.0, 1188.0], [3686.0, 572.0], [3694.0, 573.0], [3702.0, 946.0], [3710.0, 689.0], [3654.0, 586.0], [3614.0, 620.0], [3598.0, 907.0], [3606.0, 1127.5], [3590.0, 649.0], [3662.0, 1100.0], [3670.0, 1081.0], [3678.0, 1079.0], [3622.0, 646.0], [3630.0, 1120.0], [3646.0, 1111.0], [3742.0, 684.0], [3830.0, 1161.0], [3822.0, 1172.0], [3814.0, 1181.0], [3734.0, 1247.5], [3726.0, 682.0], [3718.0, 1273.0], [3774.0, 955.0], [3766.0, 1043.6666666666667], [3758.0, 1223.0], [3750.0, 1227.0], [3798.0, 686.0], [3782.0, 866.6666666666666], [3910.0, 901.0], [3926.0, 1071.0], [3934.0, 1066.0], [3918.0, 900.0], [3966.0, 661.0], [3958.0, 680.5], [3886.0, 1107.0], [3894.0, 1101.0], [3878.0, 918.0], [3846.0, 1150.0], [3854.0, 1130.0], [3862.0, 1125.0], [3870.0, 1116.0], [3942.0, 688.0], [3950.0, 683.0], [3982.0, 659.0], [3974.0, 688.5], [4030.0, 618.0], [4022.0, 634.0], [3990.0, 643.0], [3998.0, 638.0], [4014.0, 681.5], [4006.0, 643.0], [4054.0, 672.0], [4046.0, 616.0], [4038.0, 618.0], [4062.0, 606.0], [4086.0, 605.0], [4316.0, 773.0], [4268.0, 767.0], [4476.0, 518.5], [4364.0, 101.0], [4380.0, 102.0], [4412.0, 114.0], [4524.0, 127.0], [4125.0, 751.0], [4109.0, 736.0], [4365.0, 780.0], [4461.0, 809.0], [4445.0, 583.0], [4541.0, 204.0], [2079.0, 2215.5], [2159.0, 2173.0], [2111.0, 2209.0], [2055.0, 2233.0], [2071.0, 2223.0], [2063.0, 2225.0], [2103.0, 2209.0], [2095.0, 2218.0], [2087.0, 2214.0], [2175.0, 2169.5], [2119.0, 2201.0], [2127.0, 2203.0], [2135.0, 2200.0], [2167.0, 2169.0], [2151.0, 2183.0], [2143.0, 2185.0], [2207.0, 2152.0], [2247.0, 1636.0], [2231.0, 2113.0], [2223.0, 2124.0], [2199.0, 2154.0], [2191.0, 2160.0], [2183.0, 2160.0], [2335.0, 143.0], [2351.0, 145.0], [2415.0, 104.0], [2423.0, 107.0], [2431.0, 107.0], [2679.0, 1529.0], [2687.0, 1530.0], [2639.0, 1533.0], [2647.0, 1535.0], [2671.0, 1528.0], [2591.0, 1546.0], [2583.0, 1559.0], [2623.0, 1534.0], [2615.0, 1210.0], [2607.0, 1551.0], [2599.0, 1552.0], [2655.0, 1531.5], [2807.0, 1635.0], [2815.0, 1636.0], [2759.0, 1062.0], [2767.0, 1060.0], [2775.0, 1056.0], [2799.0, 1635.5], [2791.0, 1051.0], [2751.0, 1067.0], [2695.0, 1526.0], [2711.0, 1346.6666666666667], [2719.0, 1666.0], [2743.0, 1069.0], [2735.0, 1071.0], [2727.0, 1075.5], [2783.0, 1056.0], [2823.0, 1618.0], [2927.0, 1700.0], [2879.0, 1092.0], [2831.0, 1619.0], [2839.0, 1617.0], [2871.0, 1592.0], [2863.0, 1596.0], [2855.0, 1098.0], [2887.0, 1093.0], [2895.0, 1084.0], [2903.0, 1082.0], [2935.0, 1696.0], [2919.0, 1706.0], [2847.0, 1617.0], [2911.0, 1270.0], [3007.0, 1641.0], [2991.0, 1652.0], [2983.0, 1654.0], [2999.0, 1647.0], [2951.0, 1686.0], [3071.0, 1607.0], [3015.0, 1136.0], [3023.0, 1634.0], [3063.0, 1612.0], [3047.0, 1620.5], [2975.0, 1665.0], [2967.0, 1673.0], [2959.0, 1680.0], [3039.0, 1623.0], [3095.0, 1593.0], [3103.0, 1588.0], [3167.0, 23.0], [3199.0, 27.0], [3119.0, 1583.0], [3111.0, 1584.0], [3087.0, 1596.0], [3079.0, 1602.0], [3319.0, 290.5], [3263.0, 65.0], [3327.0, 326.3333333333333], [3255.0, 69.0], [3247.0, 66.0], [3271.0, 77.0], [3279.0, 496.75], [3287.0, 315.0], [3295.0, 60.0], [3311.0, 439.5], [3303.0, 570.0], [3335.0, 589.0], [3343.0, 273.0], [3375.0, 335.5], [3351.0, 444.5], [3359.0, 242.0], [3415.0, 654.0], [3367.0, 201.0], [3527.0, 1172.0], [3543.0, 665.0], [3551.0, 997.6666666666666], [3535.0, 662.0], [3519.0, 1176.0], [3511.0, 1197.0], [3503.0, 1188.0], [3495.0, 1200.0], [3583.0, 1148.0], [3575.0, 1154.0], [3567.0, 658.6666666666666], [3559.0, 678.0], [3487.0, 688.0], [3655.0, 1102.0], [3671.0, 1080.0], [3679.0, 1078.0], [3663.0, 891.5], [3639.0, 1114.0], [3647.0, 1110.0], [3591.0, 1146.0], [3607.0, 898.0], [3615.0, 654.0], [3687.0, 572.0], [3695.0, 572.0], [3703.0, 1074.0], [3623.0, 621.0], [3631.0, 1112.0], [3839.0, 1154.0], [3831.0, 854.3333333333334], [3783.0, 1205.0], [3799.0, 1190.0], [3807.0, 1184.5], [3791.0, 1031.3333333333333], [3823.0, 936.0], [3815.0, 1184.0], [3719.0, 1256.0], [3775.0, 1211.0], [3767.0, 1220.0], [3751.0, 956.0], [3959.0, 671.0], [3967.0, 697.0], [3943.0, 724.0], [3871.0, 1128.0], [3951.0, 682.0], [3935.0, 1073.0], [3911.0, 1094.0], [3919.0, 1079.0], [3895.0, 1103.0], [3887.0, 1107.0], [3879.0, 1111.0], [3847.0, 1146.0], [3855.0, 1131.0], [3863.0, 1137.0], [3903.0, 1096.0], [4079.0, 736.5], [4039.0, 617.0], [4031.0, 738.0], [3975.0, 665.0], [3991.0, 636.0], [3983.0, 648.0], [3999.0, 644.0], [4015.0, 629.0], [4023.0, 635.0], [4055.0, 607.0], [4047.0, 616.0], [4510.0, 576.0], [4462.0, 580.0], [4430.0, 444.5], [4335.0, 775.0], [4271.0, 766.0], [4175.0, 756.0], [4127.0, 739.0], [4111.0, 747.0], [4383.0, 782.0], [4431.0, 806.0], [1.0, 8.0]], "isOverall": false, "label": "JDBC Request category_list", "isController": false}, {"data": [[2207.231199999995, 1809.5603999999964]], "isOverall": false, "label": "JDBC Request category_list-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 4551.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 0.0, "minX": 1.69988376E12, "maxY": 14108.333333333334, "series": [{"data": [[1.69988376E12, 14108.333333333334]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.69988376E12, 0.0]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.69988376E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 1809.5603999999964, "minX": 1.69988376E12, "maxY": 1809.5603999999964, "series": [{"data": [[1.69988376E12, 1809.5603999999964]], "isOverall": false, "label": "JDBC Request category_list", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.69988376E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 1.6509999999999998, "minX": 1.69988376E12, "maxY": 1.6509999999999998, "series": [{"data": [[1.69988376E12, 1.6509999999999998]], "isOverall": false, "label": "JDBC Request category_list", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.69988376E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 1809.489999999997, "minX": 1.69988376E12, "maxY": 1809.489999999997, "series": [{"data": [[1.69988376E12, 1809.489999999997]], "isOverall": false, "label": "JDBC Request category_list", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.69988376E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 5.0, "minX": 1.69988376E12, "maxY": 1427.0, "series": [{"data": [[1.69988376E12, 1427.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.69988376E12, 51.70000000000002]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.69988376E12, 1340.08]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.69988376E12, 66.04999999999998]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.69988376E12, 5.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.69988376E12, 22.5]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.69988376E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 22.0, "minX": 190.0, "maxY": 4083.0, "series": [{"data": [[1452.0, 1263.0], [190.0, 22.0], [878.0, 650.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[271.0, 4083.0], [1212.0, 2171.5], [1452.0, 1245.0], [190.0, 35.0], [878.0, 562.0], [997.0, 3077.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1452.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 190.0, "maxY": 1263.0, "series": [{"data": [[1452.0, 1263.0], [190.0, 22.0], [878.0, 650.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[271.0, 0.0], [1212.0, 0.0], [1452.0, 0.0], [190.0, 0.0], [878.0, 0.0], [997.0, 0.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1452.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 83.33333333333333, "minX": 1.69988376E12, "maxY": 83.33333333333333, "series": [{"data": [[1.69988376E12, 83.33333333333333]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.69988376E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 2.533333333333333, "minX": 1.69988376E12, "maxY": 80.8, "series": [{"data": [[1.69988376E12, 2.533333333333333]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.69988376E12, 80.8]], "isOverall": false, "label": "null 0", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.69988376E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 2.533333333333333, "minX": 1.69988376E12, "maxY": 80.8, "series": [{"data": [[1.69988376E12, 2.533333333333333]], "isOverall": false, "label": "JDBC Request category_list-success", "isController": false}, {"data": [[1.69988376E12, 80.8]], "isOverall": false, "label": "JDBC Request category_list-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.69988376E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 2.533333333333333, "minX": 1.69988376E12, "maxY": 80.8, "series": [{"data": [[1.69988376E12, 2.533333333333333]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.69988376E12, 80.8]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.69988376E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

