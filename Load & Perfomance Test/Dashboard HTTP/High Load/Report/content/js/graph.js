/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 4.0, "minX": 0.0, "maxY": 23873.0, "series": [{"data": [[0.0, 4.0], [0.1, 9.0], [0.2, 12.0], [0.3, 16.0], [0.4, 18.0], [0.5, 20.0], [0.6, 25.0], [0.7, 27.0], [0.8, 27.0], [0.9, 31.0], [1.0, 35.0], [1.1, 39.0], [1.2, 44.0], [1.3, 47.0], [1.4, 50.0], [1.5, 52.0], [1.6, 54.0], [1.7, 55.0], [1.8, 58.0], [1.9, 62.0], [2.0, 68.0], [2.1, 70.0], [2.2, 73.0], [2.3, 76.0], [2.4, 77.0], [2.5, 80.0], [2.6, 83.0], [2.7, 85.0], [2.8, 89.0], [2.9, 93.0], [3.0, 95.0], [3.1, 97.0], [3.2, 100.0], [3.3, 104.0], [3.4, 107.0], [3.5, 110.0], [3.6, 114.0], [3.7, 119.0], [3.8, 124.0], [3.9, 125.0], [4.0, 128.0], [4.1, 133.0], [4.2, 137.0], [4.3, 139.0], [4.4, 142.0], [4.5, 144.0], [4.6, 146.0], [4.7, 153.0], [4.8, 158.0], [4.9, 167.0], [5.0, 172.0], [5.1, 180.0], [5.2, 185.0], [5.3, 187.0], [5.4, 198.0], [5.5, 200.0], [5.6, 213.0], [5.7, 217.0], [5.8, 223.0], [5.9, 230.0], [6.0, 234.0], [6.1, 241.0], [6.2, 243.0], [6.3, 250.0], [6.4, 257.0], [6.5, 261.0], [6.6, 269.0], [6.7, 275.0], [6.8, 281.0], [6.9, 292.0], [7.0, 309.0], [7.1, 326.0], [7.2, 334.0], [7.3, 347.0], [7.4, 364.0], [7.5, 385.0], [7.6, 391.0], [7.7, 399.0], [7.8, 404.0], [7.9, 413.0], [8.0, 418.0], [8.1, 433.0], [8.2, 439.0], [8.3, 443.0], [8.4, 449.0], [8.5, 450.0], [8.6, 459.0], [8.7, 463.0], [8.8, 467.0], [8.9, 485.0], [9.0, 499.0], [9.1, 506.0], [9.2, 518.0], [9.3, 523.0], [9.4, 528.0], [9.5, 535.0], [9.6, 540.0], [9.7, 545.0], [9.8, 551.0], [9.9, 562.0], [10.0, 569.0], [10.1, 574.0], [10.2, 576.0], [10.3, 594.0], [10.4, 612.0], [10.5, 628.0], [10.6, 639.0], [10.7, 689.0], [10.8, 716.0], [10.9, 718.0], [11.0, 729.0], [11.1, 754.0], [11.2, 772.0], [11.3, 789.0], [11.4, 837.0], [11.5, 866.0], [11.6, 903.0], [11.7, 920.0], [11.8, 983.0], [11.9, 991.0], [12.0, 1016.0], [12.1, 1043.0], [12.2, 1089.0], [12.3, 1119.0], [12.4, 1129.0], [12.5, 1134.0], [12.6, 1144.0], [12.7, 1150.0], [12.8, 1161.0], [12.9, 1168.0], [13.0, 1179.0], [13.1, 1205.0], [13.2, 1280.0], [13.3, 1324.0], [13.4, 1411.0], [13.5, 1523.0], [13.6, 1663.0], [13.7, 1702.0], [13.8, 1740.0], [13.9, 1753.0], [14.0, 1768.0], [14.1, 1849.0], [14.2, 2012.0], [14.3, 2111.0], [14.4, 2136.0], [14.5, 2213.0], [14.6, 2300.0], [14.7, 2358.0], [14.8, 2426.0], [14.9, 2459.0], [15.0, 2479.0], [15.1, 2487.0], [15.2, 2497.0], [15.3, 2510.0], [15.4, 2529.0], [15.5, 2540.0], [15.6, 2546.0], [15.7, 2563.0], [15.8, 2569.0], [15.9, 2581.0], [16.0, 2594.0], [16.1, 2602.0], [16.2, 2615.0], [16.3, 2631.0], [16.4, 2642.0], [16.5, 2652.0], [16.6, 2662.0], [16.7, 2668.0], [16.8, 2678.0], [16.9, 2684.0], [17.0, 2699.0], [17.1, 2722.0], [17.2, 2750.0], [17.3, 2784.0], [17.4, 2801.0], [17.5, 2811.0], [17.6, 2817.0], [17.7, 2820.0], [17.8, 2837.0], [17.9, 2852.0], [18.0, 2884.0], [18.1, 2950.0], [18.2, 2975.0], [18.3, 2999.0], [18.4, 3016.0], [18.5, 3023.0], [18.6, 3039.0], [18.7, 3050.0], [18.8, 3068.0], [18.9, 3082.0], [19.0, 3098.0], [19.1, 3123.0], [19.2, 3148.0], [19.3, 3171.0], [19.4, 3183.0], [19.5, 3186.0], [19.6, 3190.0], [19.7, 3195.0], [19.8, 3201.0], [19.9, 3208.0], [20.0, 3211.0], [20.1, 3220.0], [20.2, 3226.0], [20.3, 3236.0], [20.4, 3262.0], [20.5, 3298.0], [20.6, 3326.0], [20.7, 3359.0], [20.8, 3369.0], [20.9, 3391.0], [21.0, 3413.0], [21.1, 3430.0], [21.2, 3460.0], [21.3, 3477.0], [21.4, 3512.0], [21.5, 3532.0], [21.6, 3570.0], [21.7, 3630.0], [21.8, 3648.0], [21.9, 3676.0], [22.0, 3687.0], [22.1, 3696.0], [22.2, 3715.0], [22.3, 3727.0], [22.4, 3738.0], [22.5, 3752.0], [22.6, 3759.0], [22.7, 3780.0], [22.8, 3798.0], [22.9, 3843.0], [23.0, 3869.0], [23.1, 3891.0], [23.2, 3922.0], [23.3, 3953.0], [23.4, 3966.0], [23.5, 3989.0], [23.6, 4023.0], [23.7, 4056.0], [23.8, 4092.0], [23.9, 4122.0], [24.0, 4154.0], [24.1, 4230.0], [24.2, 4267.0], [24.3, 4293.0], [24.4, 4352.0], [24.5, 4421.0], [24.6, 4442.0], [24.7, 4466.0], [24.8, 4494.0], [24.9, 4518.0], [25.0, 4539.0], [25.1, 4551.0], [25.2, 4574.0], [25.3, 4603.0], [25.4, 4619.0], [25.5, 4626.0], [25.6, 4634.0], [25.7, 4644.0], [25.8, 4650.0], [25.9, 4672.0], [26.0, 4691.0], [26.1, 4702.0], [26.2, 4711.0], [26.3, 4720.0], [26.4, 4727.0], [26.5, 4736.0], [26.6, 4742.0], [26.7, 4752.0], [26.8, 4757.0], [26.9, 4765.0], [27.0, 4771.0], [27.1, 4776.0], [27.2, 4782.0], [27.3, 4788.0], [27.4, 4795.0], [27.5, 4800.0], [27.6, 4803.0], [27.7, 4807.0], [27.8, 4812.0], [27.9, 4819.0], [28.0, 4825.0], [28.1, 4829.0], [28.2, 4835.0], [28.3, 4837.0], [28.4, 4843.0], [28.5, 4851.0], [28.6, 4855.0], [28.7, 4859.0], [28.8, 4861.0], [28.9, 4864.0], [29.0, 4869.0], [29.1, 4873.0], [29.2, 4877.0], [29.3, 4887.0], [29.4, 4891.0], [29.5, 4895.0], [29.6, 4899.0], [29.7, 4906.0], [29.8, 4912.0], [29.9, 4914.0], [30.0, 4916.0], [30.1, 4918.0], [30.2, 4927.0], [30.3, 4931.0], [30.4, 4935.0], [30.5, 4939.0], [30.6, 4941.0], [30.7, 4944.0], [30.8, 4949.0], [30.9, 4953.0], [31.0, 4956.0], [31.1, 4959.0], [31.2, 4961.0], [31.3, 4966.0], [31.4, 4968.0], [31.5, 4970.0], [31.6, 4972.0], [31.7, 4976.0], [31.8, 4979.0], [31.9, 4982.0], [32.0, 4989.0], [32.1, 4993.0], [32.2, 4997.0], [32.3, 4999.0], [32.4, 5005.0], [32.5, 5008.0], [32.6, 5012.0], [32.7, 5016.0], [32.8, 5021.0], [32.9, 5026.0], [33.0, 5028.0], [33.1, 5030.0], [33.2, 5033.0], [33.3, 5035.0], [33.4, 5040.0], [33.5, 5045.0], [33.6, 5049.0], [33.7, 5051.0], [33.8, 5053.0], [33.9, 5057.0], [34.0, 5061.0], [34.1, 5064.0], [34.2, 5067.0], [34.3, 5070.0], [34.4, 5075.0], [34.5, 5077.0], [34.6, 5082.0], [34.7, 5086.0], [34.8, 5089.0], [34.9, 5091.0], [35.0, 5096.0], [35.1, 5102.0], [35.2, 5106.0], [35.3, 5109.0], [35.4, 5113.0], [35.5, 5115.0], [35.6, 5119.0], [35.7, 5124.0], [35.8, 5130.0], [35.9, 5134.0], [36.0, 5138.0], [36.1, 5141.0], [36.2, 5145.0], [36.3, 5151.0], [36.4, 5159.0], [36.5, 5164.0], [36.6, 5167.0], [36.7, 5169.0], [36.8, 5176.0], [36.9, 5180.0], [37.0, 5183.0], [37.1, 5187.0], [37.2, 5192.0], [37.3, 5197.0], [37.4, 5205.0], [37.5, 5212.0], [37.6, 5218.0], [37.7, 5223.0], [37.8, 5231.0], [37.9, 5238.0], [38.0, 5245.0], [38.1, 5249.0], [38.2, 5257.0], [38.3, 5263.0], [38.4, 5267.0], [38.5, 5272.0], [38.6, 5276.0], [38.7, 5285.0], [38.8, 5288.0], [38.9, 5293.0], [39.0, 5297.0], [39.1, 5308.0], [39.2, 5314.0], [39.3, 5321.0], [39.4, 5326.0], [39.5, 5330.0], [39.6, 5337.0], [39.7, 5346.0], [39.8, 5352.0], [39.9, 5358.0], [40.0, 5365.0], [40.1, 5373.0], [40.2, 5380.0], [40.3, 5384.0], [40.4, 5389.0], [40.5, 5393.0], [40.6, 5400.0], [40.7, 5407.0], [40.8, 5412.0], [40.9, 5417.0], [41.0, 5424.0], [41.1, 5432.0], [41.2, 5438.0], [41.3, 5443.0], [41.4, 5454.0], [41.5, 5460.0], [41.6, 5464.0], [41.7, 5470.0], [41.8, 5474.0], [41.9, 5479.0], [42.0, 5482.0], [42.1, 5486.0], [42.2, 5491.0], [42.3, 5495.0], [42.4, 5501.0], [42.5, 5505.0], [42.6, 5511.0], [42.7, 5517.0], [42.8, 5524.0], [42.9, 5530.0], [43.0, 5536.0], [43.1, 5547.0], [43.2, 5552.0], [43.3, 5558.0], [43.4, 5567.0], [43.5, 5572.0], [43.6, 5580.0], [43.7, 5582.0], [43.8, 5587.0], [43.9, 5593.0], [44.0, 5599.0], [44.1, 5602.0], [44.2, 5608.0], [44.3, 5616.0], [44.4, 5621.0], [44.5, 5632.0], [44.6, 5639.0], [44.7, 5642.0], [44.8, 5645.0], [44.9, 5653.0], [45.0, 5658.0], [45.1, 5667.0], [45.2, 5670.0], [45.3, 5675.0], [45.4, 5680.0], [45.5, 5687.0], [45.6, 5694.0], [45.7, 5701.0], [45.8, 5709.0], [45.9, 5716.0], [46.0, 5723.0], [46.1, 5728.0], [46.2, 5735.0], [46.3, 5746.0], [46.4, 5750.0], [46.5, 5755.0], [46.6, 5762.0], [46.7, 5769.0], [46.8, 5777.0], [46.9, 5781.0], [47.0, 5788.0], [47.1, 5798.0], [47.2, 5808.0], [47.3, 5813.0], [47.4, 5819.0], [47.5, 5826.0], [47.6, 5832.0], [47.7, 5837.0], [47.8, 5843.0], [47.9, 5846.0], [48.0, 5854.0], [48.1, 5862.0], [48.2, 5869.0], [48.3, 5877.0], [48.4, 5884.0], [48.5, 5890.0], [48.6, 5899.0], [48.7, 5902.0], [48.8, 5908.0], [48.9, 5910.0], [49.0, 5915.0], [49.1, 5920.0], [49.2, 5923.0], [49.3, 5929.0], [49.4, 5936.0], [49.5, 5938.0], [49.6, 5941.0], [49.7, 5946.0], [49.8, 5950.0], [49.9, 5956.0], [50.0, 5962.0], [50.1, 5970.0], [50.2, 5973.0], [50.3, 5979.0], [50.4, 5981.0], [50.5, 5983.0], [50.6, 5986.0], [50.7, 5994.0], [50.8, 5996.0], [50.9, 5999.0], [51.0, 6001.0], [51.1, 6006.0], [51.2, 6012.0], [51.3, 6018.0], [51.4, 6021.0], [51.5, 6026.0], [51.6, 6031.0], [51.7, 6033.0], [51.8, 6035.0], [51.9, 6041.0], [52.0, 6047.0], [52.1, 6049.0], [52.2, 6051.0], [52.3, 6055.0], [52.4, 6058.0], [52.5, 6060.0], [52.6, 6063.0], [52.7, 6066.0], [52.8, 6070.0], [52.9, 6073.0], [53.0, 6075.0], [53.1, 6080.0], [53.2, 6084.0], [53.3, 6090.0], [53.4, 6094.0], [53.5, 6098.0], [53.6, 6101.0], [53.7, 6104.0], [53.8, 6107.0], [53.9, 6111.0], [54.0, 6114.0], [54.1, 6122.0], [54.2, 6126.0], [54.3, 6133.0], [54.4, 6138.0], [54.5, 6144.0], [54.6, 6148.0], [54.7, 6152.0], [54.8, 6158.0], [54.9, 6161.0], [55.0, 6165.0], [55.1, 6169.0], [55.2, 6172.0], [55.3, 6174.0], [55.4, 6178.0], [55.5, 6180.0], [55.6, 6184.0], [55.7, 6186.0], [55.8, 6190.0], [55.9, 6193.0], [56.0, 6197.0], [56.1, 6200.0], [56.2, 6202.0], [56.3, 6207.0], [56.4, 6208.0], [56.5, 6211.0], [56.6, 6214.0], [56.7, 6219.0], [56.8, 6223.0], [56.9, 6227.0], [57.0, 6231.0], [57.1, 6240.0], [57.2, 6244.0], [57.3, 6250.0], [57.4, 6256.0], [57.5, 6263.0], [57.6, 6267.0], [57.7, 6274.0], [57.8, 6282.0], [57.9, 6288.0], [58.0, 6294.0], [58.1, 6301.0], [58.2, 6306.0], [58.3, 6314.0], [58.4, 6324.0], [58.5, 6333.0], [58.6, 6341.0], [58.7, 6346.0], [58.8, 6351.0], [58.9, 6357.0], [59.0, 6362.0], [59.1, 6377.0], [59.2, 6383.0], [59.3, 6393.0], [59.4, 6401.0], [59.5, 6410.0], [59.6, 6417.0], [59.7, 6427.0], [59.8, 6436.0], [59.9, 6444.0], [60.0, 6452.0], [60.1, 6455.0], [60.2, 6461.0], [60.3, 6466.0], [60.4, 6470.0], [60.5, 6478.0], [60.6, 6487.0], [60.7, 6496.0], [60.8, 6504.0], [60.9, 6516.0], [61.0, 6524.0], [61.1, 6533.0], [61.2, 6539.0], [61.3, 6543.0], [61.4, 6551.0], [61.5, 6556.0], [61.6, 6562.0], [61.7, 6568.0], [61.8, 6578.0], [61.9, 6585.0], [62.0, 6595.0], [62.1, 6602.0], [62.2, 6616.0], [62.3, 6626.0], [62.4, 6633.0], [62.5, 6640.0], [62.6, 6648.0], [62.7, 6654.0], [62.8, 6669.0], [62.9, 6677.0], [63.0, 6684.0], [63.1, 6688.0], [63.2, 6699.0], [63.3, 6709.0], [63.4, 6718.0], [63.5, 6721.0], [63.6, 6725.0], [63.7, 6734.0], [63.8, 6739.0], [63.9, 6744.0], [64.0, 6750.0], [64.1, 6752.0], [64.2, 6759.0], [64.3, 6768.0], [64.4, 6777.0], [64.5, 6788.0], [64.6, 6798.0], [64.7, 6808.0], [64.8, 6815.0], [64.9, 6820.0], [65.0, 6828.0], [65.1, 6834.0], [65.2, 6837.0], [65.3, 6842.0], [65.4, 6847.0], [65.5, 6858.0], [65.6, 6863.0], [65.7, 6866.0], [65.8, 6871.0], [65.9, 6875.0], [66.0, 6879.0], [66.1, 6886.0], [66.2, 6892.0], [66.3, 6898.0], [66.4, 6902.0], [66.5, 6908.0], [66.6, 6917.0], [66.7, 6924.0], [66.8, 6935.0], [66.9, 6940.0], [67.0, 6948.0], [67.1, 6958.0], [67.2, 6965.0], [67.3, 6968.0], [67.4, 6970.0], [67.5, 6974.0], [67.6, 6984.0], [67.7, 6995.0], [67.8, 7012.0], [67.9, 7021.0], [68.0, 7029.0], [68.1, 7038.0], [68.2, 7055.0], [68.3, 7066.0], [68.4, 7079.0], [68.5, 7094.0], [68.6, 7106.0], [68.7, 7121.0], [68.8, 7135.0], [68.9, 7149.0], [69.0, 7158.0], [69.1, 7167.0], [69.2, 7181.0], [69.3, 7189.0], [69.4, 7206.0], [69.5, 7225.0], [69.6, 7251.0], [69.7, 7267.0], [69.8, 7288.0], [69.9, 7315.0], [70.0, 7340.0], [70.1, 7352.0], [70.2, 7370.0], [70.3, 7412.0], [70.4, 7428.0], [70.5, 7472.0], [70.6, 7541.0], [70.7, 7568.0], [70.8, 7590.0], [70.9, 7606.0], [71.0, 7623.0], [71.1, 7647.0], [71.2, 7680.0], [71.3, 7698.0], [71.4, 7713.0], [71.5, 7719.0], [71.6, 7732.0], [71.7, 7740.0], [71.8, 7752.0], [71.9, 7763.0], [72.0, 7775.0], [72.1, 7779.0], [72.2, 7788.0], [72.3, 7794.0], [72.4, 7799.0], [72.5, 7805.0], [72.6, 7814.0], [72.7, 7819.0], [72.8, 7826.0], [72.9, 7831.0], [73.0, 7836.0], [73.1, 7846.0], [73.2, 7854.0], [73.3, 7858.0], [73.4, 7861.0], [73.5, 7867.0], [73.6, 7874.0], [73.7, 7881.0], [73.8, 7887.0], [73.9, 7891.0], [74.0, 7897.0], [74.1, 7903.0], [74.2, 7909.0], [74.3, 7915.0], [74.4, 7921.0], [74.5, 7926.0], [74.6, 7935.0], [74.7, 7941.0], [74.8, 7945.0], [74.9, 7960.0], [75.0, 7969.0], [75.1, 7975.0], [75.2, 7980.0], [75.3, 7985.0], [75.4, 7989.0], [75.5, 7992.0], [75.6, 7996.0], [75.7, 8003.0], [75.8, 8009.0], [75.9, 8017.0], [76.0, 8024.0], [76.1, 8031.0], [76.2, 8039.0], [76.3, 8044.0], [76.4, 8048.0], [76.5, 8056.0], [76.6, 8062.0], [76.7, 8069.0], [76.8, 8075.0], [76.9, 8084.0], [77.0, 8095.0], [77.1, 8104.0], [77.2, 8114.0], [77.3, 8119.0], [77.4, 8131.0], [77.5, 8137.0], [77.6, 8151.0], [77.7, 8159.0], [77.8, 8175.0], [77.9, 8195.0], [78.0, 8203.0], [78.1, 8215.0], [78.2, 8220.0], [78.3, 8239.0], [78.4, 8251.0], [78.5, 8262.0], [78.6, 8276.0], [78.7, 8285.0], [78.8, 8300.0], [78.9, 8320.0], [79.0, 8336.0], [79.1, 8345.0], [79.2, 8361.0], [79.3, 8378.0], [79.4, 8389.0], [79.5, 8410.0], [79.6, 8437.0], [79.7, 8458.0], [79.8, 8485.0], [79.9, 8519.0], [80.0, 8545.0], [80.1, 8561.0], [80.2, 8589.0], [80.3, 8603.0], [80.4, 8624.0], [80.5, 8656.0], [80.6, 8705.0], [80.7, 8732.0], [80.8, 8795.0], [80.9, 8951.0], [81.0, 9012.0], [81.1, 9041.0], [81.2, 9059.0], [81.3, 9080.0], [81.4, 9095.0], [81.5, 9111.0], [81.6, 9125.0], [81.7, 9142.0], [81.8, 9157.0], [81.9, 9169.0], [82.0, 9195.0], [82.1, 9212.0], [82.2, 9240.0], [82.3, 9263.0], [82.4, 9285.0], [82.5, 9305.0], [82.6, 9318.0], [82.7, 9345.0], [82.8, 9371.0], [82.9, 9393.0], [83.0, 9410.0], [83.1, 9420.0], [83.2, 9434.0], [83.3, 9449.0], [83.4, 9511.0], [83.5, 9549.0], [83.6, 9574.0], [83.7, 9612.0], [83.8, 9660.0], [83.9, 9705.0], [84.0, 9826.0], [84.1, 9844.0], [84.2, 9855.0], [84.3, 9882.0], [84.4, 9907.0], [84.5, 10002.0], [84.6, 10318.0], [84.7, 10439.0], [84.8, 10798.0], [84.9, 11277.0], [85.0, 11337.0], [85.1, 11432.0], [85.2, 11440.0], [85.3, 11448.0], [85.4, 11456.0], [85.5, 11462.0], [85.6, 11476.0], [85.7, 11733.0], [85.8, 11772.0], [85.9, 11815.0], [86.0, 11871.0], [86.1, 11876.0], [86.2, 11879.0], [86.3, 11889.0], [86.4, 11973.0], [86.5, 12213.0], [86.6, 12494.0], [86.7, 12666.0], [86.8, 12788.0], [86.9, 12874.0], [87.0, 12951.0], [87.1, 13028.0], [87.2, 13155.0], [87.3, 13276.0], [87.4, 13306.0], [87.5, 13363.0], [87.6, 13421.0], [87.7, 13504.0], [87.8, 13538.0], [87.9, 13580.0], [88.0, 13638.0], [88.1, 13695.0], [88.2, 13765.0], [88.3, 13800.0], [88.4, 13819.0], [88.5, 13890.0], [88.6, 13922.0], [88.7, 13958.0], [88.8, 13980.0], [88.9, 13993.0], [89.0, 14037.0], [89.1, 14100.0], [89.2, 14141.0], [89.3, 14212.0], [89.4, 14262.0], [89.5, 14307.0], [89.6, 14358.0], [89.7, 14428.0], [89.8, 14453.0], [89.9, 14498.0], [90.0, 14541.0], [90.1, 14622.0], [90.2, 14693.0], [90.3, 14739.0], [90.4, 14804.0], [90.5, 14841.0], [90.6, 14890.0], [90.7, 14926.0], [90.8, 14965.0], [90.9, 15011.0], [91.0, 15063.0], [91.1, 15135.0], [91.2, 15193.0], [91.3, 15255.0], [91.4, 15330.0], [91.5, 15394.0], [91.6, 15452.0], [91.7, 15528.0], [91.8, 15588.0], [91.9, 15631.0], [92.0, 15697.0], [92.1, 15764.0], [92.2, 15840.0], [92.3, 15869.0], [92.4, 15939.0], [92.5, 16002.0], [92.6, 16057.0], [92.7, 16130.0], [92.8, 16204.0], [92.9, 16301.0], [93.0, 16344.0], [93.1, 16428.0], [93.2, 16466.0], [93.3, 16503.0], [93.4, 16555.0], [93.5, 16603.0], [93.6, 16636.0], [93.7, 16684.0], [93.8, 16746.0], [93.9, 16784.0], [94.0, 16828.0], [94.1, 16873.0], [94.2, 16951.0], [94.3, 16995.0], [94.4, 17060.0], [94.5, 17147.0], [94.6, 17211.0], [94.7, 17288.0], [94.8, 17323.0], [94.9, 17380.0], [95.0, 17449.0], [95.1, 17490.0], [95.2, 17540.0], [95.3, 17589.0], [95.4, 17627.0], [95.5, 17665.0], [95.6, 17738.0], [95.7, 17776.0], [95.8, 17827.0], [95.9, 17894.0], [96.0, 17924.0], [96.1, 17965.0], [96.2, 18012.0], [96.3, 18045.0], [96.4, 18109.0], [96.5, 18204.0], [96.6, 18283.0], [96.7, 18372.0], [96.8, 18429.0], [96.9, 18509.0], [97.0, 18541.0], [97.1, 18563.0], [97.2, 18680.0], [97.3, 18764.0], [97.4, 18806.0], [97.5, 18864.0], [97.6, 18940.0], [97.7, 19017.0], [97.8, 19050.0], [97.9, 19107.0], [98.0, 19174.0], [98.1, 19282.0], [98.2, 19360.0], [98.3, 19410.0], [98.4, 19459.0], [98.5, 19540.0], [98.6, 19622.0], [98.7, 19679.0], [98.8, 19779.0], [98.9, 19835.0], [99.0, 19960.0], [99.1, 20137.0], [99.2, 20329.0], [99.3, 20478.0], [99.4, 20717.0], [99.5, 20824.0], [99.6, 21250.0], [99.7, 21525.0], [99.8, 21841.0], [99.9, 22344.0], [100.0, 23873.0]], "isOverall": false, "label": "HTTP Request Dashboard", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 318.0, "series": [{"data": [[0.0, 318.0], [100.0, 230.0], [200.0, 148.0], [300.0, 75.0], [400.0, 132.0], [500.0, 132.0], [600.0, 40.0], [700.0, 58.0], [800.0, 27.0], [900.0, 33.0], [1000.0, 31.0], [1100.0, 84.0], [1200.0, 17.0], [1300.0, 14.0], [1400.0, 9.0], [1500.0, 6.0], [1600.0, 13.0], [1700.0, 39.0], [1800.0, 6.0], [1900.0, 8.0], [2000.0, 10.0], [2100.0, 17.0], [2300.0, 18.0], [2200.0, 13.0], [2400.0, 48.0], [2500.0, 79.0], [2600.0, 96.0], [2800.0, 62.0], [2700.0, 38.0], [2900.0, 30.0], [3000.0, 71.0], [3100.0, 77.0], [3200.0, 71.0], [3300.0, 42.0], [3400.0, 44.0], [3500.0, 25.0], [3600.0, 51.0], [3700.0, 68.0], [3800.0, 32.0], [3900.0, 43.0], [4000.0, 26.0], [4100.0, 23.0], [4200.0, 26.0], [4300.0, 15.0], [4600.0, 77.0], [4500.0, 47.0], [4400.0, 36.0], [4700.0, 143.0], [4800.0, 212.0], [4900.0, 270.0], [5000.0, 275.0], [5100.0, 227.0], [5300.0, 155.0], [5200.0, 172.0], [5400.0, 176.0], [5500.0, 165.0], [5600.0, 168.0], [5800.0, 149.0], [5700.0, 143.0], [6000.0, 266.0], [6100.0, 248.0], [5900.0, 232.0], [6200.0, 201.0], [6300.0, 129.0], [6400.0, 137.0], [6500.0, 133.0], [6600.0, 114.0], [6700.0, 142.0], [6800.0, 170.0], [6900.0, 141.0], [7000.0, 82.0], [7100.0, 79.0], [7200.0, 51.0], [7400.0, 24.0], [7300.0, 41.0], [7500.0, 33.0], [7600.0, 48.0], [7900.0, 156.0], [7700.0, 109.0], [7800.0, 167.0], [8100.0, 90.0], [8000.0, 142.0], [8600.0, 34.0], [8700.0, 22.0], [8500.0, 41.0], [8400.0, 37.0], [8300.0, 67.0], [8200.0, 84.0], [8800.0, 5.0], [9100.0, 63.0], [9200.0, 44.0], [9000.0, 46.0], [8900.0, 10.0], [9300.0, 45.0], [9400.0, 44.0], [9500.0, 27.0], [9700.0, 7.0], [9600.0, 25.0], [9800.0, 42.0], [9900.0, 11.0], [10000.0, 3.0], [10200.0, 3.0], [10700.0, 5.0], [10300.0, 12.0], [10400.0, 7.0], [10600.0, 1.0], [11200.0, 9.0], [11000.0, 3.0], [10800.0, 1.0], [11100.0, 1.0], [11400.0, 61.0], [11700.0, 18.0], [11300.0, 9.0], [11500.0, 2.0], [11600.0, 2.0], [11800.0, 51.0], [11900.0, 4.0], [12000.0, 4.0], [12200.0, 6.0], [12100.0, 2.0], [12600.0, 5.0], [12500.0, 6.0], [12700.0, 11.0], [12300.0, 3.0], [12400.0, 4.0], [12900.0, 11.0], [13100.0, 10.0], [13000.0, 10.0], [12800.0, 11.0], [13200.0, 12.0], [13300.0, 19.0], [13400.0, 11.0], [13500.0, 27.0], [13600.0, 17.0], [13700.0, 19.0], [13800.0, 21.0], [13900.0, 42.0], [14000.0, 17.0], [14100.0, 19.0], [14200.0, 19.0], [14300.0, 19.0], [14400.0, 24.0], [14500.0, 14.0], [14600.0, 19.0], [14700.0, 16.0], [14800.0, 24.0], [14900.0, 23.0], [15000.0, 15.0], [15100.0, 24.0], [15200.0, 9.0], [15300.0, 17.0], [15400.0, 12.0], [15500.0, 20.0], [15600.0, 17.0], [15700.0, 14.0], [15800.0, 20.0], [15900.0, 15.0], [16000.0, 15.0], [16100.0, 15.0], [16300.0, 15.0], [16200.0, 10.0], [17200.0, 13.0], [16400.0, 25.0], [16600.0, 28.0], [16800.0, 20.0], [17000.0, 15.0], [17400.0, 19.0], [18200.0, 11.0], [17600.0, 19.0], [17800.0, 16.0], [18000.0, 21.0], [18400.0, 16.0], [19200.0, 10.0], [18600.0, 5.0], [18800.0, 17.0], [19000.0, 20.0], [19400.0, 12.0], [19600.0, 15.0], [19800.0, 13.0], [20000.0, 4.0], [20200.0, 6.0], [20400.0, 7.0], [20600.0, 5.0], [20800.0, 6.0], [21000.0, 2.0], [21200.0, 3.0], [21400.0, 1.0], [21600.0, 2.0], [22000.0, 2.0], [22200.0, 2.0], [21800.0, 1.0], [22800.0, 1.0], [23400.0, 2.0], [23200.0, 1.0], [23800.0, 1.0], [16500.0, 18.0], [16700.0, 18.0], [16900.0, 17.0], [17100.0, 14.0], [17300.0, 20.0], [17500.0, 23.0], [17700.0, 23.0], [17900.0, 25.0], [18100.0, 11.0], [18300.0, 11.0], [18500.0, 28.0], [18700.0, 18.0], [18900.0, 12.0], [19100.0, 15.0], [19300.0, 16.0], [19500.0, 17.0], [19700.0, 10.0], [19900.0, 9.0], [20100.0, 5.0], [20300.0, 4.0], [20500.0, 4.0], [20700.0, 5.0], [21100.0, 5.0], [21300.0, 6.0], [21500.0, 5.0], [20900.0, 1.0], [21700.0, 4.0], [22100.0, 2.0], [22300.0, 3.0], [22500.0, 3.0], [21900.0, 1.0], [22900.0, 2.0]], "isOverall": false, "label": "HTTP Request Dashboard", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 23800.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 77.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 7815.0, "series": [{"data": [[0.0, 413.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 77.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 1695.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 7815.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 3961.660300000015, "minX": 1.69772454E12, "maxY": 3961.660300000015, "series": [{"data": [[1.69772454E12, 3961.660300000015]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.69772454E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 4.0, "minX": 1.0, "maxY": 22947.0, "series": [{"data": [[2.0, 9091.5], [3.0, 4460.0], [4.0, 138.0], [5.0, 130.0], [6.0, 13197.75], [7.0, 80.0], [8.0, 9.0], [9.0, 4491.5], [10.0, 41.4], [11.0, 73.0], [12.0, 72.5], [13.0, 14009.25], [14.0, 4399.0], [15.0, 63.0], [16.0, 36.57142857142857], [17.0, 26.333333333333332], [18.0, 21.0], [19.0, 7142.2], [20.0, 10236.285714285716], [21.0, 16.666666666666668], [22.0, 18.833333333333332], [23.0, 52.4], [24.0, 10820.833333333334], [25.0, 37.666666666666664], [26.0, 48.916666666666664], [27.0, 17555.0], [28.0, 17167.666666666668], [29.0, 8822.5], [30.0, 11.0], [31.0, 10954.333333333332], [33.0, 6465.5], [32.0, 4502.25], [35.0, 9.0], [34.0, 27.0], [37.0, 8.0], [36.0, 12332.5], [39.0, 12900.0], [41.0, 5631.666666666667], [40.0, 9921.0], [42.0, 17923.333333333332], [44.0, 25.0], [45.0, 17725.666666666668], [47.0, 51.42857142857143], [46.0, 5810.0], [48.0, 31.3], [49.0, 7101.0], [51.0, 57.75], [50.0, 38.0], [52.0, 7449.0], [55.0, 8129.625], [58.0, 8444.5], [59.0, 18725.5], [60.0, 62.0], [62.0, 9775.857142857143], [63.0, 4170.25], [65.0, 97.66666666666667], [64.0, 8561.5], [66.0, 6405.5], [67.0, 8602.5], [69.0, 10885.333333333332], [71.0, 17299.0], [68.0, 17330.0], [73.0, 79.33333333333333], [74.0, 16937.0], [78.0, 11724.5], [79.0, 10886.333333333334], [76.0, 76.0], [81.0, 91.5], [82.0, 5903.833333333333], [83.0, 11643.0], [86.0, 82.0], [87.0, 5291.857142857143], [85.0, 17639.0], [91.0, 90.5], [90.0, 6390.5], [89.0, 10037.0], [88.0, 84.25], [93.0, 78.33333333333334], [92.0, 76.0], [95.0, 85.0], [94.0, 14045.8], [96.0, 8378.5], [97.0, 77.75], [99.0, 81.5], [98.0, 9987.0], [102.0, 71.33333333333333], [101.0, 87.0], [100.0, 16033.5], [105.0, 80.0], [107.0, 16131.0], [106.0, 16660.333333333332], [104.0, 18009.5], [111.0, 6394.0], [109.0, 19521.0], [115.0, 17615.0], [114.0, 14781.0], [112.0, 14933.5], [116.0, 232.0], [117.0, 16525.0], [122.0, 222.0], [123.0, 13204.75], [120.0, 235.0], [127.0, 2749.166666666667], [124.0, 13048.333333333334], [126.0, 17766.5], [132.0, 238.0], [131.0, 6524.666666666667], [130.0, 4898.5], [128.0, 5706.333333333333], [135.0, 17042.75], [129.0, 19525.0], [142.0, 207.80555555555557], [141.0, 250.43478260869566], [140.0, 3565.333333333333], [138.0, 258.5], [137.0, 5605.333333333333], [136.0, 4077.2], [143.0, 15871.5], [145.0, 91.0], [151.0, 15184.75], [147.0, 16953.0], [146.0, 17033.0], [144.0, 16328.5], [159.0, 16636.0], [158.0, 21322.5], [156.0, 19948.0], [155.0, 16802.0], [154.0, 17641.0], [153.0, 16161.0], [160.0, 9581.5], [166.0, 11205.5], [164.0, 16085.0], [162.0, 12105.0], [161.0, 15004.0], [172.0, 19081.0], [171.0, 12049.0], [170.0, 17822.5], [168.0, 16000.0], [178.0, 109.0], [183.0, 15850.0], [182.0, 16444.5], [180.0, 15364.0], [179.0, 17698.5], [176.0, 17743.5], [184.0, 9445.5], [185.0, 107.0], [191.0, 14689.0], [190.0, 15777.0], [189.0, 15690.0], [188.0, 15783.0], [187.0, 15865.0], [186.0, 17427.0], [199.0, 7820.5], [198.0, 16266.0], [197.0, 16053.0], [195.0, 16492.0], [193.0, 14622.0], [192.0, 16332.0], [200.0, 11555.0], [204.0, 10236.666666666666], [206.0, 144.0], [207.0, 15686.0], [205.0, 16082.0], [202.0, 22947.0], [201.0, 16559.0], [215.0, 15402.0], [214.0, 15394.0], [213.0, 15314.0], [211.0, 15588.0], [210.0, 15590.0], [209.0, 18327.0], [208.0, 16150.0], [217.0, 9049.0], [222.0, 13610.0], [221.0, 14884.0], [220.0, 11278.0], [218.0, 14834.0], [216.0, 14827.0], [225.0, 123.0], [227.0, 7454.5], [231.0, 15518.5], [230.0, 15466.0], [229.0, 16289.0], [226.0, 15717.0], [224.0, 15017.0], [239.0, 129.0], [238.0, 18222.0], [236.0, 15970.333333333334], [233.0, 17807.0], [232.0, 15947.0], [242.0, 11200.75], [241.0, 129.0], [247.0, 17673.0], [246.0, 18093.0], [245.0, 18584.0], [244.0, 13957.0], [243.0, 16807.0], [240.0, 18204.0], [253.0, 139.5], [254.0, 12266.6], [252.0, 16057.0], [250.0, 15902.5], [270.0, 146.0], [271.0, 20382.333333333332], [268.0, 14693.5], [267.0, 14694.0], [265.0, 13686.0], [264.0, 15573.5], [262.0, 17791.0], [261.0, 18620.0], [259.0, 14768.0], [258.0, 15881.0], [257.0, 19097.0], [284.0, 193.0], [287.0, 14193.5], [285.0, 14102.8], [283.0, 22340.0], [279.0, 16268.0], [278.0, 14619.0], [274.0, 15531.5], [272.0, 14519.0], [302.0, 13300.0], [301.0, 14388.2], [297.0, 14881.0], [296.0, 13340.0], [295.0, 15444.0], [293.0, 19825.5], [291.0, 15143.0], [289.0, 18331.0], [306.0, 12665.75], [314.0, 171.0], [316.0, 173.0], [317.0, 16344.0], [315.0, 18490.0], [312.0, 16518.2], [310.0, 14588.0], [333.0, 13115.0], [334.0, 13474.5], [332.0, 17222.0], [330.0, 14332.666666666666], [329.0, 14512.0], [328.0, 14698.0], [325.0, 15352.333333333334], [324.0, 14821.0], [322.0, 13202.0], [321.0, 14891.0], [351.0, 14063.0], [350.0, 14851.6], [347.0, 14904.0], [346.0, 13805.0], [345.0, 12997.0], [343.0, 14767.0], [341.0, 14841.0], [340.0, 13469.0], [338.0, 13716.0], [337.0, 12963.666666666666], [356.0, 8499.2], [367.0, 22582.0], [366.0, 21773.0], [365.0, 22538.0], [362.0, 13958.0], [360.0, 14051.0], [357.0, 16570.333333333332], [374.0, 12643.0], [380.0, 11878.75], [381.0, 218.0], [382.0, 12788.0], [378.0, 14404.0], [376.0, 15190.5], [369.0, 14505.666666666666], [368.0, 13956.5], [397.0, 13190.166666666668], [399.0, 14358.0], [393.0, 15754.333333333334], [391.0, 16967.8], [387.0, 12804.5], [390.0, 13726.0], [400.0, 237.5], [405.0, 10340.333333333334], [414.0, 19020.666666666668], [411.0, 15829.75], [409.0, 16601.0], [407.0, 16780.5], [403.0, 16859.75], [427.0, 11880.75], [429.0, 14215.0], [428.0, 16739.4], [424.0, 13910.5], [423.0, 18952.0], [417.0, 14311.0], [436.0, 265.0], [441.0, 271.0], [445.0, 277.0], [442.0, 16560.833333333332], [439.0, 14172.4], [437.0, 13845.0], [435.0, 16645.0], [460.0, 16372.4], [456.0, 290.0], [459.0, 292.0], [463.0, 15553.25], [457.0, 15848.333333333334], [454.0, 13862.666666666666], [453.0, 14804.75], [450.0, 14033.0], [451.0, 16698.0], [476.0, 10660.8], [478.0, 12669.0], [474.0, 12274.0], [473.0, 12305.0], [472.0, 15378.333333333334], [470.0, 16517.333333333332], [465.0, 22023.0], [493.0, 339.0], [495.0, 13286.0], [491.0, 13507.333333333332], [490.0, 14325.5], [483.0, 17250.0], [504.0, 333.0], [501.0, 333.0], [505.0, 11055.5], [506.0, 333.0], [508.0, 21790.0], [503.0, 13795.0], [502.0, 13427.6], [500.0, 13728.5], [496.0, 16575.5], [536.0, 6838.0], [518.0, 345.5], [516.0, 13807.000000000002], [524.0, 363.0], [512.0, 20797.0], [528.0, 10465.75], [542.0, 17033.5], [538.0, 12259.5], [530.0, 20735.0], [522.0, 16373.333333333334], [570.0, 410.0], [574.0, 13897.666666666666], [560.0, 10276.0], [572.0, 20416.0], [568.0, 20354.0], [550.0, 16257.0], [548.0, 21462.0], [546.0, 21018.0], [544.0, 21059.0], [566.0, 17443.666666666668], [562.0, 21316.0], [554.0, 13306.0], [552.0, 20558.5], [602.0, 441.0], [604.0, 19963.0], [600.0, 14102.0], [582.0, 15500.0], [576.0, 20337.0], [598.0, 11244.0], [594.0, 11267.0], [592.0, 15518.0], [590.0, 14613.333333333334], [586.0, 15516.0], [584.0, 11423.0], [612.0, 449.3333333333333], [622.0, 6909.0], [610.0, 20523.85714285714], [638.0, 10774.0], [632.0, 19554.0], [614.0, 19888.0], [630.0, 20502.0], [628.0, 20690.0], [624.0, 19832.0], [620.0, 20823.0], [618.0, 20717.0], [616.0, 12040.666666666666], [642.0, 471.0], [650.0, 12887.333333333334], [662.0, 484.0], [666.0, 485.0], [664.0, 20083.0], [656.0, 13555.333333333334], [652.0, 20329.0], [640.0, 19457.0], [646.0, 19364.0], [644.0, 19517.0], [682.0, 10019.666666666666], [694.0, 9770.5], [698.0, 19008.0], [688.0, 14689.5], [684.0, 10344.0], [680.0, 11102.5], [672.0, 19031.0], [722.0, 10138.25], [728.0, 18610.0], [720.0, 19306.5], [718.0, 19322.0], [716.0, 19113.25], [712.0, 19353.0], [710.0, 19502.0], [706.0, 15978.666666666666], [762.0, 19449.0], [764.0, 19431.5], [760.0, 18972.0], [758.0, 18983.5], [756.0, 19527.5], [754.0, 18564.5], [752.0, 18857.0], [742.0, 19220.5], [740.0, 19037.0], [794.0, 19172.0], [796.0, 19135.0], [792.0, 19223.0], [790.0, 19099.0], [788.0, 18188.0], [786.0, 18826.0], [784.0, 19341.0], [780.0, 18278.0], [768.0, 18841.5], [774.0, 19436.0], [830.0, 18358.14285714286], [828.0, 18361.0], [822.0, 18054.0], [818.0, 19007.0], [814.0, 18254.75], [802.0, 18077.0], [800.0, 19076.0], [862.0, 14182.0], [858.0, 18487.666666666668], [854.0, 18327.0], [852.0, 17934.4], [842.0, 18157.5], [838.0, 18041.0], [832.0, 17770.0], [894.0, 18253.333333333332], [892.0, 17657.666666666668], [886.0, 17731.0], [874.0, 17704.5], [868.0, 18190.333333333332], [922.0, 18395.0], [920.0, 17456.0], [918.0, 18025.5], [916.0, 17991.25], [914.0, 17581.0], [912.0, 17548.0], [910.0, 17509.0], [904.0, 18153.333333333332], [896.0, 18584.0], [954.0, 18110.0], [958.0, 17244.0], [952.0, 17154.0], [934.0, 18438.0], [930.0, 17421.0], [928.0, 18356.0], [950.0, 18283.0], [946.0, 18245.0], [944.0, 18280.5], [942.0, 17916.0], [940.0, 17857.5], [938.0, 17352.0], [936.0, 17936.0], [966.0, 18097.0], [988.0, 17805.0], [990.0, 16854.0], [986.0, 17247.5], [982.0, 17712.0], [980.0, 16685.0], [974.0, 16925.0], [972.0, 17894.0], [964.0, 17665.0], [962.0, 18109.0], [960.0, 18045.0], [1022.0, 17360.0], [1020.0, 16421.0], [1014.0, 13219.0], [998.0, 16495.0], [996.0, 17106.5], [992.0, 17056.0], [1052.0, 5077.0], [1036.0, 5184.5], [1032.0, 16344.0], [1204.0, 114.0], [1196.0, 5523.5], [1192.0, 4930.0], [1180.0, 5710.933333333334], [1152.0, 16879.0], [1228.0, 7963.0], [1256.0, 124.0], [1276.0, 5734.805825242717], [1224.0, 16829.0], [1264.0, 16829.0], [1312.0, 161.0], [1336.0, 181.0], [1320.0, 4952.0], [1340.0, 15682.0], [1392.0, 123.0], [1384.0, 131.66666666666666], [1388.0, 2501.5], [1348.0, 6055.555555555556], [1436.0, 64.0], [1456.0, 77.0], [1464.0, 82.0], [1468.0, 10780.0], [1444.0, 5633.037037037038], [1424.0, 6449.666666666667], [1532.0, 14854.0], [1500.0, 7524.5], [1488.0, 15938.5], [1484.0, 6033.0], [1480.0, 16069.0], [1476.0, 15747.0], [1472.0, 15632.0], [1564.0, 113.0], [1556.0, 8698.272727272728], [1544.0, 10185.399999999998], [1540.0, 14792.0], [1620.0, 130.0], [1648.0, 15635.0], [1616.0, 15023.0], [1604.0, 7023.0], [1684.0, 14621.0], [1756.0, 15485.0], [1740.0, 7215.847826086956], [1736.0, 7013.913043478262], [1796.0, 190.0], [1888.0, 15394.0], [1912.0, 14307.0], [1956.0, 6837.428571428572], [1952.0, 6918.5], [1968.0, 6960.0], [2004.0, 6416.0344827586205], [2020.0, 14655.0], [2008.0, 6824.4609375], [2160.0, 6817.5], [2168.0, 14649.0], [2152.0, 14859.0], [2144.0, 14519.0], [2120.0, 14662.333333333334], [2112.0, 7087.0], [2104.0, 14596.0], [2080.0, 6906.0], [2240.0, 6848.0], [2424.0, 7065.864406779661], [2488.0, 4015.5], [2640.0, 5647.25], [2584.0, 8408.0], [2784.0, 5434.0], [2736.0, 8693.8], [3040.0, 6014.75], [2992.0, 14306.0], [3056.0, 2496.0], [3080.0, 131.33333333333334], [3256.0, 2309.0], [3200.0, 5248.0], [3368.0, 14067.0], [3520.0, 14022.0], [3456.0, 5756.5], [3688.0, 6159.0], [3640.0, 13765.0], [3704.0, 3763.0], [3680.0, 6118.0], [3648.0, 7585.0], [3768.0, 3860.5], [3760.0, 4303.9], [3752.0, 3865.0], [3800.0, 6034.0], [3936.0, 7754.0], [3848.0, 13711.6], [4072.0, 8134.0], [4064.0, 5016.0], [4008.0, 13477.0], [4128.0, 3495.5], [4096.0, 8243.0], [4224.0, 513.0], [4272.0, 5912.0], [4336.0, 6577.0], [4256.0, 5959.0], [4176.0, 5483.0], [4352.0, 5020.0], [4432.0, 413.0], [4368.0, 321.0], [4528.0, 4800.0], [4592.0, 6849.0], [4384.0, 6423.571428571428], [4976.0, 1010.0], [4896.0, 4402.0], [4880.0, 6515.8], [5328.0, 463.4], [5296.0, 4812.0], [5248.0, 5713.714285714286], [5312.0, 5823.8], [5376.0, 3422.3333333333335], [5584.0, 9888.0], [5488.0, 11786.0], [5552.0, 5187.0], [5424.0, 95.0], [5872.0, 5902.214285714285], [5744.0, 1057.0], [5776.0, 1101.0], [5808.0, 4863.0], [5648.0, 5093.75], [6128.0, 5323.0], [6080.0, 6271.0], [6000.0, 6536.0], [5952.0, 6886.0], [5888.0, 6842.0], [5904.0, 6170.0], [6336.0, 5419.333333333333], [6272.0, 4561.0], [6160.0, 5495.0], [6240.0, 2933.5], [6224.0, 6260.0], [6608.0, 1639.0], [6400.0, 3843.75], [6736.0, 6041.5], [6704.0, 2804.0], [6944.0, 7092.5], [7120.0, 5910.3], [7152.0, 6344.333333333333], [7056.0, 2941.3333333333335], [4273.0, 622.0], [4209.0, 4274.0], [4129.0, 6722.5], [4369.0, 836.0], [4545.0, 7774.2], [4561.0, 6847.0], [4401.0, 9611.0], [4513.0, 8004.0], [4609.0, 3912.0], [4689.0, 3990.0], [4705.0, 661.0], [4641.0, 7770.6], [4961.0, 1033.0], [4881.0, 4370.0], [5249.0, 6763.0], [5217.0, 3028.5], [5201.0, 4835.0], [5297.0, 542.0], [5169.0, 4141.5], [5377.0, 1561.3571428571431], [5409.0, 99.0], [5617.0, 11755.0], [5537.0, 11285.0], [5425.0, 5626.0], [5633.0, 922.0], [5873.0, 6215.5], [5825.0, 5392.0], [5937.0, 6970.0], [6017.0, 6338.0], [5953.0, 6923.5], [5969.0, 5422.0], [6369.0, 3655.3125000000005], [6385.0, 5032.6], [6353.0, 4904.111111111111], [6337.0, 5988.5], [6161.0, 5495.0], [6321.0, 4995.0], [6289.0, 6208.0], [6241.0, 3930.0], [6401.0, 6071.0], [6849.0, 3716.0], [6897.0, 2619.0], [6865.0, 5870.5], [6929.0, 5848.0], [6945.0, 5116.0], [7009.0, 6385.666666666667], [6913.0, 7962.0], [7105.0, 4955.0], [7121.0, 5152.5], [7153.0, 6520.0], [2105.0, 15015.0], [2081.0, 6201.333333333333], [2065.0, 14894.5], [2217.0, 7626.5], [2241.0, 8480.0], [2641.0, 5700.0], [2617.0, 5434.0], [2593.0, 6452.0], [2737.0, 150.0], [2729.0, 771.0], [2793.0, 6274.0], [2721.0, 2504.5], [2705.0, 14463.0], [3049.0, 2666.125], [3073.0, 282.0], [3081.0, 153.5], [3257.0, 71.33333333333333], [3241.0, 3570.0], [3265.0, 107.5], [3361.0, 6904.733333333333], [3457.0, 5780.0], [3665.0, 5638.666666666667], [3649.0, 6138.4], [3793.0, 455.0], [3801.0, 6038.0], [3769.0, 5273.866666666668], [3961.0, 13146.0], [3913.0, 5247.0], [3897.0, 7934.5], [4089.0, 8100.0], [4033.0, 8237.5], [4017.0, 8243.42857142857], [4009.0, 13028.0], [3977.0, 6061.666666666667], [3969.0, 13585.666666666666], [4130.0, 6708.5], [4098.0, 6049.0], [4114.0, 6750.0], [4162.0, 1610.25], [4338.0, 8442.0], [4578.0, 7899.0], [4594.0, 7959.5], [4530.0, 5607.6], [4610.0, 1810.4], [4690.0, 4010.5], [4930.0, 1065.0], [4914.0, 4568.0], [5314.0, 5316.0], [5234.0, 9778.0], [5362.0, 5527.38888888889], [5298.0, 6236.0], [5282.0, 4570.181818181817], [5202.0, 3430.0], [5186.0, 3752.0], [5586.0, 5443.0], [5394.0, 5390.0], [5746.0, 4778.0], [5874.0, 5611.0], [5794.0, 2637.086956521739], [5698.0, 5205.0], [5826.0, 9172.0], [6098.0, 2245.0], [6114.0, 6341.0], [5890.0, 5140.0], [5906.0, 5440.0], [6002.0, 4823.0], [6082.0, 2715.6], [6066.0, 5385.0], [6018.0, 6330.0], [6354.0, 3314.0], [6370.0, 3661.2], [6194.0, 6145.0], [6306.0, 2785.0], [6274.0, 4381.8], [6258.0, 3980.5], [6242.0, 4741.0], [6498.0, 5487.181818181818], [6530.0, 5983.0], [6418.0, 5768.5], [6402.0, 5650.3], [6434.0, 3745.0], [6594.0, 4206.0], [6690.0, 7719.0], [6754.0, 5771.0], [6866.0, 5869.0], [6738.0, 4024.6666666666665], [6914.0, 5719.0], [7010.0, 4894.2558139534885], [6930.0, 5926.5], [7122.0, 6900.380952380953], [7106.0, 6937.0], [7058.0, 6032.0], [7154.0, 6613.0], [6978.0, 5788.0], [7250.0, 6803.0], [7234.0, 6741.0], [7202.0, 6892.0], [4211.0, 3376.0], [4275.0, 629.5], [4163.0, 3201.0], [4195.0, 3283.0], [4291.0, 9364.5], [4515.0, 5473.0], [4595.0, 7780.0], [4611.0, 3961.0], [4675.0, 6065.0], [4835.0, 7866.0], [4963.0, 1028.0], [4867.0, 7971.0], [5363.0, 5559.777777777779], [5283.0, 3476.0], [5331.0, 454.75], [5219.0, 6172.0], [5187.0, 6.0], [5251.0, 6793.0], [5235.0, 628.0], [5379.0, 4454.750000000001], [5475.0, 720.6666666666667], [5507.0, 919.0], [5395.0, 4771.0], [5699.0, 5233.6], [5827.0, 7029.875], [6131.0, 6303.5], [6035.0, 1765.4444444444446], [5971.0, 6970.0], [6067.0, 4959.0], [6051.0, 3556.846153846154], [6019.0, 4803.0], [5891.0, 6935.0], [5907.0, 6910.5], [5923.0, 7119.5], [5939.0, 6970.0], [6275.0, 2843.5], [6387.0, 5315.750000000001], [6355.0, 3963.1666666666665], [6163.0, 5443.0], [6243.0, 3410.1428571428573], [6435.0, 3988.0], [6611.0, 1641.0], [6499.0, 6125.0], [6403.0, 861.3333333333334], [6419.0, 5338.333333333334], [6531.0, 5202.0], [6579.0, 5163.0], [6563.0, 6183.0], [6883.0, 2920.0], [6755.0, 3959.0], [6915.0, 5721.0], [7107.0, 7160.0], [7011.0, 5980.0], [7155.0, 6469.0], [7123.0, 6946.8], [6979.0, 7982.5], [7043.0, 5914.333333333333], [7219.0, 6724.0], [7235.0, 6761.375], [1077.0, 16965.0], [1053.0, 17177.0], [1045.0, 8896.0], [1041.0, 16238.0], [1037.0, 5218.0], [1029.0, 4631.5], [1025.0, 17217.5], [1105.0, 63.0], [1145.0, 5032.285714285715], [1137.0, 16064.0], [1113.0, 16620.333333333332], [1097.0, 5092.0], [1169.0, 93.0], [1197.0, 96.0], [1157.0, 15840.0], [1193.0, 4915.0], [1269.0, 133.0], [1225.0, 15823.0], [1273.0, 4949.0], [1293.0, 8498.5], [1297.0, 153.0], [1321.0, 172.0], [1317.0, 15831.0], [1309.0, 15608.0], [1289.0, 16741.0], [1385.0, 93.89189189189192], [1405.0, 206.4], [1361.0, 185.0], [1389.0, 6505.714285714285], [1393.0, 15738.0], [1401.0, 16018.0], [1437.0, 26.0], [1445.0, 70.0], [1469.0, 6945.863636363636], [1465.0, 6251.380952380953], [1425.0, 6464.125000000001], [1485.0, 15003.0], [1525.0, 86.0], [1509.0, 15831.0], [1505.0, 15903.0], [1501.0, 7347.0], [1497.0, 15566.0], [1481.0, 14988.0], [1477.0, 15709.0], [1473.0, 16120.0], [1549.0, 96.0], [1585.0, 123.0], [1657.0, 141.0], [1617.0, 15682.0], [1605.0, 7387.222222222223], [1681.0, 146.0], [1701.0, 14610.0], [1669.0, 15264.0], [1749.0, 15492.0], [1813.0, 15436.0], [1857.0, 215.0], [1909.0, 15386.0], [1881.0, 15338.0], [1977.0, 14261.0], [1933.0, 15255.0], [1949.0, 6868.0], [1997.0, 14914.0], [1993.0, 14244.0], [2005.0, 6261.0], [2170.0, 14892.0], [2162.0, 6870.0], [2122.0, 5003.0], [2058.0, 6352.0], [2098.0, 5069.0], [2242.0, 7080.150000000001], [2178.0, 14653.0], [2402.0, 6959.764705882354], [2426.0, 8273.0], [2418.0, 6752.0], [2362.0, 10783.5], [2482.0, 3492.538461538462], [2666.0, 14107.0], [2642.0, 5416.0], [2634.0, 6368.0], [2610.0, 6312.866666666666], [2746.0, 784.0], [2730.0, 466.74999999999994], [2722.0, 2430.0], [2938.0, 3596.8], [2890.0, 5997.428571428572], [3066.0, 5267.5], [3034.0, 5132.999999999999], [3058.0, 13812.0], [2962.0, 14033.333333333334], [3082.0, 599.1818181818181], [3266.0, 402.25000000000006], [3362.0, 14106.0], [3330.0, 13840.0], [3522.0, 13574.0], [3498.0, 13582.0], [3666.0, 7819.0], [3650.0, 7852.0], [3658.0, 13992.0], [3794.0, 444.77777777777777], [3802.0, 6006.75], [3762.0, 4203.0], [3714.0, 4498.857142857143], [3962.0, 13380.0], [3914.0, 5329.0], [3898.0, 6923.071428571429], [3850.0, 13798.0], [4066.0, 4896.0], [4082.0, 8144.333333333333], [3978.0, 7752.0], [4050.0, 8196.0], [4042.0, 7639.5], [4034.0, 8121.0], [4010.0, 12919.0], [4116.0, 127.0], [4148.0, 7037.307692307692], [4196.0, 3238.6], [4244.0, 5493.0], [4372.0, 2159.0], [4532.0, 6332.666666666667], [4596.0, 7905.5], [4548.0, 7986.0], [4516.0, 8216.0], [4612.0, 1312.0], [4836.0, 7915.0], [4964.0, 12942.0], [5252.0, 6331.0], [5316.0, 4462.634146341464], [5364.0, 6223.0], [5220.0, 17.0], [5300.0, 3554.0], [5284.0, 2666.0], [5380.0, 5429.377777777776], [5476.0, 3162.5], [5492.0, 10172.0], [5508.0, 5753.0], [5828.0, 7977.0], [5876.0, 5930.0], [5652.0, 4869.5], [5780.0, 1092.5], [5796.0, 3296.75], [5732.0, 4480.999999999999], [5700.0, 5190.0], [5716.0, 5178.0], [6132.0, 5528.0], [6020.0, 6423.0], [5924.0, 5946.0], [5908.0, 5531.0], [5956.0, 6835.5], [6356.0, 5018.380952380953], [6276.0, 4690.190909090908], [6340.0, 5901.5], [6260.0, 5123.666666666667], [6228.0, 7121.0], [6548.0, 6032.0], [6500.0, 5732.5], [6516.0, 4598.727272727273], [6580.0, 3955.875], [6404.0, 5304.777777777777], [6900.0, 5970.5], [6836.0, 3989.0], [6964.0, 6133.0], [7156.0, 6330.375], [7124.0, 6883.0], [6980.0, 4110.0], [6996.0, 5379.5], [7060.0, 5431.4], [7188.0, 5702.5], [7236.0, 6842.0], [7252.0, 6701.0], [4341.0, 759.5], [4133.0, 5517.0], [4213.0, 5505.0], [4149.0, 6898.0], [4597.0, 7492.307692307692], [4517.0, 12776.0], [4549.0, 4840.5], [4837.0, 7926.666666666666], [4773.0, 7601.0], [4965.0, 1017.0], [4901.0, 4434.0], [5285.0, 1313.0], [5301.0, 537.0], [5317.0, 5575.666666666667], [5237.0, 619.3333333333334], [5253.0, 6726.0], [5477.0, 754.0], [5573.0, 11292.0], [5589.0, 5383.0], [5461.0, 5665.0], [5845.0, 1263.0], [5669.0, 958.0], [5797.0, 4101.0], [5877.0, 5246.0], [5829.0, 6915.444444444445], [5685.0, 5430.0], [5733.0, 3662.0], [5909.0, 2463.8], [6069.0, 5243.0], [6037.0, 2925.333333333333], [6021.0, 6227.0], [6005.0, 6916.5], [5925.0, 6504.25], [6261.0, 3343.526315789474], [6245.0, 5749.0], [6533.0, 4194.166666666666], [6421.0, 3564.1000000000004], [6549.0, 6145.5], [6565.0, 5877.0], [6581.0, 3679.0], [6661.0, 5540.0], [6885.0, 5500.0], [6773.0, 5823.0], [6869.0, 7940.0], [6853.0, 5688.0], [6741.0, 4101.0], [6981.0, 4322.333333333333], [7045.0, 5762.8], [7013.0, 3145.0], [6933.0, 4992.799999999999], [6917.0, 5840.0], [7157.0, 6473.0], [7205.0, 6486.0], [7221.0, 4803.5], [7253.0, 6752.0], [7173.0, 6900.0], [2171.0, 14430.0], [2163.0, 6872.0], [2115.0, 7043.0], [2099.0, 6528.3], [2059.0, 7317.181818181818], [2179.0, 389.0], [2267.0, 8390.0], [2427.0, 7210.8], [2419.0, 6305.333333333333], [2307.0, 7278.666666666667], [2483.0, 3022.241379310345], [2611.0, 6353.947368421053], [2563.0, 5642.0], [2739.0, 412.0], [2731.0, 327.8590604026847], [2723.0, 2453.0], [2715.0, 2517.6666666666665], [2939.0, 2358.0], [3051.0, 1563.0], [3035.0, 3817.666666666667], [3075.0, 283.0], [3083.0, 175.0], [3267.0, 183.0], [3251.0, 13797.0], [3539.0, 13588.75], [3467.0, 14022.0], [3707.0, 3938.0], [3675.0, 6160.0], [3667.0, 7911.0], [3795.0, 450.0], [3747.0, 4082.3333333333335], [3731.0, 7024.183035714286], [3763.0, 3853.0], [3947.0, 6532.391304347827], [3931.0, 5277.0], [3899.0, 13713.0], [4091.0, 4386.0], [4083.0, 8096.5], [4075.0, 7660.666666666668], [4043.0, 8268.0], [4027.0, 8379.0], [4019.0, 8161.0], [4326.0, 722.0], [4246.0, 560.6666666666666], [4262.0, 7555.0], [4342.0, 9298.0], [4310.0, 9294.0], [4374.0, 4793.0], [4598.0, 4168.5], [4358.0, 571.0], [4502.0, 8521.0], [4518.0, 8060.0], [4582.0, 4909.25], [4550.0, 4930.0], [4422.0, 385.0], [4854.0, 1744.25], [4966.0, 5386.0], [4918.0, 6256.0], [4902.0, 4413.0], [4870.0, 7966.0], [5270.0, 3471.0], [5302.0, 459.0], [5286.0, 4423.578947368421], [5366.0, 5904.115384615385], [5238.0, 617.5], [5254.0, 5720.316666666664], [5382.0, 6257.8], [5590.0, 5519.0], [5830.0, 5868.8], [6022.0, 6649.5], [6054.0, 4380.799999999999], [5910.0, 5387.6], [6006.0, 4398.625000000001], [5942.0, 6907.0], [5974.0, 6949.0], [6342.0, 5509.0], [6390.0, 5996.0], [6166.0, 2746.0], [6310.0, 6159.0], [6246.0, 3236.0], [6534.0, 6048.0], [6582.0, 5850.5], [6422.0, 4140.704225352111], [6406.0, 4306.0], [6614.0, 1654.0], [6838.0, 5961.0], [6774.0, 6285.0], [6662.0, 5601.0], [6902.0, 5837.0], [6694.0, 5534.111111111111], [6966.0, 4432.0], [7030.0, 7200.0], [6982.0, 3386.6666666666665], [7014.0, 4749.607142857143], [7190.0, 6714.5], [4263.0, 7886.0], [4215.0, 7987.0], [4119.0, 6358.0], [4375.0, 860.0], [4503.0, 2870.0], [4519.0, 7990.0], [4599.0, 6231.333333333335], [4551.0, 4307.6], [4439.0, 8536.0], [4855.0, 1753.0], [4775.0, 4226.5], [4807.0, 2830.0], [4759.0, 7541.0], [4743.0, 7852.0], [4647.0, 7586.0], [4615.0, 6983.75], [4839.0, 7800.0], [4903.0, 6294.0], [4967.0, 1016.0], [5255.0, 3480.0], [5127.0, 5557.5], [5271.0, 3487.3333333333335], [5303.0, 385.0], [5287.0, 4958.0], [5367.0, 6238.0], [5319.0, 7251.027272727271], [5239.0, 6878.0], [5591.0, 5542.0], [5383.0, 6126.5], [5527.0, 3790.0], [5543.0, 11334.0], [5399.0, 4970.0], [5479.0, 4921.593749999998], [5879.0, 4513.666666666667], [5719.0, 11852.0], [5783.0, 5201.0], [5959.0, 1473.0], [6007.0, 5151.0], [6023.0, 6526.5], [6311.0, 3064.0], [6375.0, 5406.333333333332], [6343.0, 2482.6666666666665], [6167.0, 5381.0], [6263.0, 3906.0000000000005], [6247.0, 4784.583333333333], [6407.0, 5870.25], [6615.0, 1691.0], [6423.0, 5781.0], [6663.0, 5445.0], [6855.0, 5902.0], [6759.0, 6096.0], [6743.0, 3976.0], [6695.0, 5931.666666666667], [6839.0, 5691.0], [6903.0, 4250.0], [6871.0, 5877.0], [6983.0, 3182.642857142858], [6919.0, 5719.0], [7143.0, 6533.0], [6999.0, 5143.166666666666], [7047.0, 6418.0], [7063.0, 6013.0], [541.0, 15990.0], [517.0, 6849.0], [515.0, 16382.333333333334], [529.0, 364.5], [537.0, 5588.333333333333], [539.0, 16118.0], [535.0, 18857.0], [533.0, 14344.5], [531.0, 16569.0], [527.0, 11994.0], [525.0, 13760.0], [523.0, 16343.5], [551.0, 390.0], [569.0, 7376.333333333333], [549.0, 6100.5], [555.0, 7972.0], [557.0, 16486.5], [559.0, 21364.0], [567.0, 10845.75], [573.0, 414.0], [575.0, 21113.0], [571.0, 20306.5], [561.0, 20428.0], [579.0, 15716.5], [583.0, 422.0], [591.0, 5916.5], [593.0, 5891.0], [599.0, 436.0], [597.0, 19982.666666666668], [587.0, 12797.0], [581.0, 16297.0], [635.0, 20047.0], [625.0, 10030.5], [639.0, 19459.0], [637.0, 20413.0], [633.0, 20478.0], [613.0, 19783.5], [627.0, 19717.5], [623.0, 19616.0], [621.0, 20614.0], [619.0, 11055.0], [617.0, 19951.0], [643.0, 7790.25], [641.0, 6768.666666666667], [645.0, 10001.5], [671.0, 11101.333333333334], [667.0, 13665.333333333334], [665.0, 12494.0], [663.0, 13401.333333333334], [659.0, 18069.0], [655.0, 20168.0], [651.0, 20275.0], [649.0, 19230.5], [701.0, 16052.666666666666], [677.0, 13010.666666666666], [685.0, 499.0], [675.0, 17907.0], [703.0, 14679.0], [697.0, 19345.333333333332], [679.0, 19117.0], [695.0, 18978.5], [691.0, 16433.333333333332], [689.0, 18929.5], [683.0, 19997.0], [735.0, 19108.75], [729.0, 19758.0], [707.0, 19847.0], [765.0, 19410.0], [761.0, 18324.0], [749.0, 19212.0], [747.0, 19121.0], [745.0, 19050.5], [743.0, 18962.333333333332], [739.0, 19710.0], [797.0, 18359.0], [799.0, 18516.0], [795.0, 18017.0], [791.0, 19385.0], [789.0, 19357.0], [787.0, 19333.0], [783.0, 18761.0], [779.0, 19158.75], [775.0, 18312.0], [773.0, 19150.5], [831.0, 18074.0], [829.0, 18492.0], [819.0, 19017.0], [815.0, 18018.0], [809.0, 19068.25], [805.0, 18883.333333333332], [861.0, 18712.0], [859.0, 17761.0], [847.0, 18314.6], [837.0, 18290.4], [895.0, 17851.5], [891.0, 17947.333333333332], [889.0, 17567.0], [887.0, 17741.0], [877.0, 18186.5], [875.0, 17763.5], [871.0, 17856.5], [869.0, 18266.75], [907.0, 1626.6164383561643], [927.0, 18445.0], [925.0, 18229.5], [905.0, 17566.0], [901.0, 18222.0], [899.0, 18536.333333333332], [957.0, 17107.333333333332], [959.0, 18134.0], [953.0, 17123.0], [951.0, 17973.0], [949.0, 17735.0], [947.0, 17159.0], [945.0, 17303.0], [937.0, 17496.0], [931.0, 17939.0], [933.0, 18367.0], [989.0, 16813.0], [981.0, 17766.0], [979.0, 17463.666666666668], [977.0, 17467.333333333332], [969.0, 17781.5], [967.0, 17037.0], [965.0, 17993.0], [963.0, 17106.0], [961.0, 18037.0], [1023.0, 17280.0], [1021.0, 16475.0], [1019.0, 16436.0], [1017.0, 6397.428571428572], [1009.0, 16850.0], [1007.0, 17110.0], [999.0, 17622.5], [995.0, 17259.5], [1034.0, 22.0], [1050.0, 9098.0], [1046.0, 5157.0], [1030.0, 17344.0], [1026.0, 16439.0], [1138.0, 77.0], [1146.0, 5077.999999999999], [1142.0, 4997.0], [1098.0, 5094.0], [1094.0, 5029.0], [1158.0, 16873.0], [1278.0, 16753.0], [1222.0, 15850.0], [1274.0, 5003.0], [1266.0, 15803.0], [1270.0, 4993.0], [1322.0, 7577.0], [1326.0, 5062.0], [1338.0, 4722.0], [1402.0, 184.0], [1390.0, 58.5], [1398.0, 4.0], [1406.0, 9.0], [1386.0, 190.77777777777777], [1422.0, 18.0], [1446.0, 29.0], [1426.0, 62.0], [1450.0, 74.0], [1470.0, 13280.666666666666], [1466.0, 6207.0], [1414.0, 8930.703703703706], [1482.0, 76.0], [1502.0, 6681.0], [1478.0, 15964.0], [1586.0, 15718.0], [1554.0, 7346.0], [1606.0, 127.0], [1646.0, 137.0], [1618.0, 15674.0], [1614.0, 7748.47619047619], [1690.0, 143.0], [1670.0, 15252.0], [1754.0, 13098.75], [1750.0, 15015.0], [1746.0, 15529.0], [1742.0, 15594.5], [1838.0, 207.0], [1914.0, 15169.5], [1954.0, 249.0], [1946.0, 12154.666666666666], [1950.0, 6752.0], [1926.0, 14347.0], [2038.0, 299.5], [2018.0, 15193.0], [2014.0, 14788.0], [2002.0, 15270.0], [2116.0, 3694.5], [2164.0, 6763.909090909091], [2068.0, 14783.666666666666], [2060.0, 5113.0], [2236.0, 428.0], [2284.0, 14453.0], [2428.0, 7867.461538461538], [2420.0, 6502.0], [2380.0, 14387.0], [2508.0, 2595.0], [2652.0, 14136.0], [2644.0, 8431.5], [2572.0, 5594.249999999999], [2604.0, 6562.0], [2564.0, 2557.0], [2748.0, 671.5], [2732.0, 48.0], [2812.0, 8584.96875], [2724.0, 2577.1111111111113], [2780.0, 6179.0], [2708.0, 14544.0], [2716.0, 2515.0], [2940.0, 7291.0], [3060.0, 8381.5], [2948.0, 14354.0], [3076.0, 7274.0], [3084.0, 186.5], [3268.0, 992.0000000000003], [3700.0, 4416.5], [3676.0, 6176.0], [3668.0, 8038.666666666667], [3796.0, 3684.6842105263154], [3756.0, 5593.0], [3740.0, 4251.0], [3764.0, 3740.0], [3964.0, 13398.0], [3916.0, 6134.7], [3852.0, 13582.5], [3844.0, 13808.0], [4084.0, 8089.0], [4060.0, 6329.5], [4044.0, 6268.0], [4036.0, 8266.333333333334], [3996.0, 5231.0], [3980.0, 7860.0], [4120.0, 6751.0], [4328.0, 8289.0], [4200.0, 403.0], [4216.0, 5502.0], [4104.0, 13376.0], [4296.0, 7641.0], [4152.0, 7985.0], [4136.0, 6692.0], [4568.0, 2752.5], [4472.0, 8345.0], [4600.0, 6344.615384615385], [4536.0, 7979.0], [4616.0, 7161.894736842106], [4856.0, 4791.0], [4632.0, 7592.5], [4968.0, 2198.0], [4920.0, 6314.0], [4888.0, 4421.0], [5272.0, 3483.0], [5320.0, 5160.333333333333], [5256.0, 4199.5], [5224.0, 6185.5], [5240.0, 4436.615384615385], [5192.0, 4574.0], [5384.0, 6759.0], [5576.0, 11717.0], [5480.0, 7126.465677179965], [5512.0, 5639.846153846153], [5544.0, 11347.0], [5416.0, 90.0], [5400.0, 5196.333333333333], [5672.0, 957.0], [5848.0, 3025.0], [5832.0, 6099.125], [5880.0, 449.0], [5768.0, 3737.0], [5640.0, 11337.0], [6056.0, 5291.0], [5944.0, 1438.0], [6072.0, 1965.3333333333333], [6024.0, 6207.0], [5896.0, 6569.0], [5912.0, 5595.0], [5928.0, 6953.0], [6392.0, 5072.857142857142], [6360.0, 5979.0], [6312.0, 5087.6], [6168.0, 5090.0], [6184.0, 2708.0], [6264.0, 3719.875], [6232.0, 5533.0], [6344.0, 3929.3333333333335], [6408.0, 5350.0], [6616.0, 1701.0], [6504.0, 5260.5], [6600.0, 5861.0], [6440.0, 3879.0], [6744.0, 5980.0], [6680.0, 5879.0], [6872.0, 5881.333333333333], [6760.0, 4963.555555555556], [6968.0, 5750.0], [6984.0, 2840.5], [7016.0, 6069.0], [7064.0, 6706.333333333333], [7096.0, 5521.0], [7032.0, 3991.0], [4105.0, 2374.0], [4121.0, 3443.5], [4265.0, 7935.0], [4153.0, 5001.0], [4569.0, 2795.4], [4601.0, 7958.0], [4377.0, 4682.0], [4665.0, 7582.0], [4617.0, 4621.0], [4633.0, 7639.0], [4921.0, 4532.5], [5273.0, 3522.0], [5257.0, 345.0], [5289.0, 4873.333333333333], [5369.0, 5857.24], [5225.0, 6206.5], [5305.0, 6288.0], [5193.0, 6049.0], [5145.0, 3735.0], [5385.0, 5869.0], [5417.0, 5880.0], [5465.0, 696.0], [5401.0, 4902.0], [5481.0, 7402.0], [5545.0, 11753.0], [5609.0, 11337.0], [5833.0, 9767.266233766233], [5689.0, 5351.0], [5785.0, 6345.5], [6105.0, 4968.82608695652], [5913.0, 2531.333333333333], [6073.0, 3221.25], [6057.0, 5409.0], [6121.0, 6098.0], [6089.0, 5804.40625], [6025.0, 5063.0], [6009.0, 5583.5], [5897.0, 6069.583333333334], [5993.0, 6786.582887700534], [5961.0, 6916.0], [6329.0, 6207.0], [6313.0, 3962.0], [6249.0, 6229.0], [6233.0, 7098.0], [6617.0, 1709.5], [6489.0, 2101.75], [6505.0, 5155.125], [6409.0, 5955.0], [6457.0, 4419.65], [6873.0, 5886.333333333333], [6665.0, 5727.666666666667], [6841.0, 5348.0], [6761.0, 5882.0], [6729.0, 4107.0], [6697.0, 6102.1], [6969.0, 5642.0], [6985.0, 3939.3333333333335], [7145.0, 6505.0], [7129.0, 6895.0], [7193.0, 5077.0], [2173.0, 14429.0], [2165.0, 6841.034482758621], [2109.0, 14686.0], [2085.0, 5956.0], [2061.0, 5773.777777777777], [2429.0, 6562.0], [2397.0, 7164.75], [2421.0, 5651.0], [2669.0, 14094.0], [2613.0, 3725.0], [2629.0, 5781.0], [2621.0, 5703.6923076923085], [2573.0, 4742.0952380952385], [2565.0, 2702.0], [2725.0, 2547.2], [2781.0, 6254.0], [2717.0, 2595.0], [2701.0, 14084.0], [3053.0, 2477.3333333333335], [3061.0, 5309.0], [2957.0, 14022.333333333334], [3029.0, 5997.0], [3045.0, 2497.0], [3077.0, 263.0], [3413.0, 13695.0], [3381.0, 13646.0], [3509.0, 372.0], [3461.0, 6539.37037037037], [3701.0, 6111.0], [3669.0, 7216.376470588232], [3717.0, 13441.0], [3965.0, 13580.0], [3957.0, 5931.333333333333], [3933.0, 5224.0], [3885.0, 8056.0], [4093.0, 5615.428571428571], [4069.0, 8208.0], [4045.0, 5980.5], [4029.0, 8272.5], [4218.0, 532.0], [4186.0, 344.5], [4106.0, 7980.0], [4122.0, 6736.5], [4250.0, 13310.0], [4266.0, 4922.0], [4170.0, 5547.0], [4138.0, 6805.5], [4602.0, 3905.5], [4570.0, 4754.0], [4362.0, 9224.0], [4474.0, 8442.0], [4378.0, 4757.0], [4522.0, 8070.0], [4698.0, 4642.5], [4618.0, 4627.5], [5370.0, 5050.5], [5242.0, 9768.5], [5306.0, 190.33333333333331], [5258.0, 5255.0], [5210.0, 711.0], [5226.0, 6199.0], [5194.0, 6291.0], [5514.0, 6035.333333333333], [5594.0, 5442.0], [5402.0, 5140.0], [5786.0, 4321.25], [5882.0, 529.0], [5802.0, 5605.0], [5898.0, 7432.0], [6010.0, 1676.0], [5914.0, 5149.0], [5994.0, 6178.875939849624], [5978.0, 6672.0], [6106.0, 4166.555555555556], [6074.0, 2113.0], [6090.0, 5600.647058823529], [6026.0, 6244.0], [6362.0, 4212.5], [6330.0, 6104.0], [6234.0, 747.1818181818181], [6426.0, 1482.0], [6618.0, 1703.5], [6602.0, 6089.0], [6810.0, 5574.0], [6666.0, 5710.333333333333], [6874.0, 5836.0], [6762.0, 6378.5], [6730.0, 5376.888888888889], [6954.0, 5326.0], [6970.0, 5769.0], [6938.0, 6038.0], [7162.0, 7149.0], [7146.0, 6388.666666666667], [7018.0, 2692.0], [7242.0, 6663.0], [7210.0, 6841.0], [4123.0, 1282.3], [4171.0, 5555.0], [4219.0, 3580.0], [4155.0, 4099.0], [4267.0, 5627.333333333333], [4251.0, 4917.0], [4603.0, 4224.0], [4395.0, 352.0], [4523.0, 6764.7619047619055], [4539.0, 7876.0], [4475.0, 9820.75], [4459.0, 8371.0], [4379.0, 6438.5], [4507.0, 8437.75], [4635.0, 7885.0], [4923.0, 6253.0], [5355.0, 5600.0], [5291.0, 4977.0], [5371.0, 4953.333333333333], [5131.0, 3787.0], [5259.0, 5056.5], [5387.0, 5216.913043478261], [5499.0, 6239.0], [5611.0, 914.0], [5483.0, 11791.8], [5403.0, 4828.0], [5467.0, 5593.0], [5883.0, 7370.0], [5851.0, 1288.0], [5787.0, 5691.952380952381], [5995.0, 5167.907172995781], [6043.0, 4136.75], [6027.0, 6274.0], [5899.0, 6075.0], [5915.0, 5190.0], [6315.0, 5179.666666666667], [6379.0, 5472.111111111111], [6331.0, 6101.625], [6363.0, 3684.25], [6347.0, 3845.375], [6235.0, 4335.461538461538], [6267.0, 5781.25], [6507.0, 5190.166666666667], [6635.0, 5167.384615384615], [6491.0, 4094.857142857143], [6667.0, 5619.0], [6859.0, 5919.0], [6779.0, 5886.0], [6843.0, 5721.5], [6907.0, 7933.5], [6731.0, 4844.0], [6699.0, 5359.333333333334], [6939.0, 5966.0], [6923.0, 6837.5], [7115.0, 6545.0], [7163.0, 6797.0], [7099.0, 6334.0], [7179.0, 6666.0], [7195.0, 6639.0], [7243.0, 6781.0], [1055.0, 17043.0], [1047.0, 16858.0], [1031.0, 17223.0], [1027.0, 17354.0], [1111.0, 8036.0], [1147.0, 16972.0], [1099.0, 5064.099999999999], [1095.0, 4999.5], [1155.0, 87.0], [1215.0, 102.0], [1195.0, 5196.0], [1179.0, 4996.0], [1191.0, 16005.0], [1243.0, 119.0], [1279.0, 142.0], [1275.0, 5153.0], [1335.0, 176.0], [1319.0, 16694.0], [1391.0, 116.6], [1383.0, 159.3913043478261], [1351.0, 16336.666666666666], [1435.0, 44.0], [1467.0, 6267.538461538462], [1447.0, 15864.0], [1415.0, 16364.0], [1475.0, 75.0], [1519.0, 14834.0], [1503.0, 7541.0], [1499.0, 7065.75], [1491.0, 14960.0], [1487.0, 6010.0], [1483.0, 15527.666666666666], [1555.0, 107.0], [1563.0, 112.0], [1543.0, 7343.785714285715], [1539.0, 15764.0], [1623.0, 130.0], [1631.0, 139.0], [1619.0, 15305.0], [1603.0, 6561.0], [1791.0, 188.0], [1767.0, 14719.5], [1747.0, 14865.0], [1743.0, 15511.0], [1811.0, 201.0], [1823.0, 207.0], [1851.0, 213.0], [1967.0, 7757.0], [1955.0, 6828.52], [1939.0, 15345.0], [1947.0, 6812.5], [2003.0, 5360.136363636363], [2158.0, 6187.0], [2094.0, 4789.428571428572], [2174.0, 14834.0], [2166.0, 14438.0], [2118.0, 6903.0], [2102.0, 14483.5], [2070.0, 14956.5], [2182.0, 387.0], [2302.0, 7749.8], [2414.0, 6695.333333333333], [2422.0, 6914.0], [2382.0, 8392.0], [2510.0, 6602.0], [2750.0, 628.0], [2742.0, 433.0], [2734.0, 2622.5], [2782.0, 5948.583333333334], [2910.0, 13912.0], [2958.0, 2541.0], [3030.0, 6147.5], [3198.0, 8053.0], [3262.0, 105.0], [3270.0, 2384.0], [3326.0, 14218.5], [3454.0, 4918.0], [3414.0, 13652.0], [3662.0, 6659.111111111112], [3654.0, 6306.0], [3790.0, 3643.0], [3798.0, 446.0], [3758.0, 6627.0], [3750.0, 4323.5], [3718.0, 5712.5], [3726.0, 7962.0], [3950.0, 5356.5], [3942.0, 7832.0], [3902.0, 13435.666666666666], [3894.0, 7312.879310344825], [3846.0, 13801.0], [4086.0, 4230.0], [3998.0, 5998.857142857143], [4062.0, 4983.0], [4030.0, 8247.25], [4300.0, 8378.0], [4220.0, 3028.0], [4108.0, 7373.25], [4140.0, 243.0], [4332.0, 8960.0], [4284.0, 9218.0], [4252.0, 4917.0], [4268.0, 5146.0], [4380.0, 629.5], [4412.0, 5309.0], [4604.0, 7753.0], [4396.0, 9544.0], [4764.0, 8011.0], [5372.0, 4968.0], [5260.0, 356.0], [5212.0, 398.0], [5276.0, 5096.5], [5244.0, 4863.857142857143], [5228.0, 6205.333333333333], [5292.0, 5117.0], [5308.0, 4372.666666666667], [5628.0, 913.5], [5484.0, 11779.8], [5516.0, 6370.666666666666], [5580.0, 11277.0], [5404.0, 4930.0], [5724.0, 9446.0], [5788.0, 3169.285714285714], [5948.0, 6973.0], [5996.0, 3835.0], [5980.0, 6790.0], [6060.0, 5395.0625], [5964.0, 6541.0], [6364.0, 2245.615384615384], [6380.0, 5746.666666666666], [6348.0, 5200.166666666666], [6316.0, 5438.4], [6300.0, 5708.333333333333], [6268.0, 5527.0], [6620.0, 5670.0], [6508.0, 6174.0], [6572.0, 6018.0], [6908.0, 5858.5], [6892.0, 6162.0], [6844.0, 5897.0], [6956.0, 6962.666666666667], [6940.0, 5973.0], [7164.0, 6944.0], [7148.0, 6317.571428571428], [6924.0, 6053.5], [7180.0, 6749.75], [7244.0, 6788.333333333333], [4349.0, 9654.5], [4285.0, 1466.0], [4157.0, 5440.0], [4125.0, 6734.0], [4109.0, 6791.5], [4573.0, 4499.0], [4381.0, 1282.9], [4365.0, 9567.4], [4605.0, 7207.75], [4557.0, 4829.0], [4413.0, 9599.0], [4541.0, 7539.125], [4525.0, 4711.0], [4589.0, 7973.5], [4637.0, 7693.5], [5261.0, 3454.25], [5293.0, 4171.0], [5245.0, 5580.0], [5277.0, 4875.5], [5213.0, 2622.0], [5229.0, 5868.333333333333], [5453.0, 688.5], [5517.0, 4984.666666666667], [5581.0, 11339.0], [5501.0, 5587.0], [5645.0, 4646.428571428572], [5709.0, 2878.0], [6093.0, 2919.142857142857], [6077.0, 3484.0], [5997.0, 6453.0], [5981.0, 6969.5], [5933.0, 6162.5], [6349.0, 6153.0], [6173.0, 2497.0], [6317.0, 4993.2], [6333.0, 6214.0], [6397.0, 6009.0], [6269.0, 6351.5], [6637.0, 5698.5], [6493.0, 5115.285714285715], [6477.0, 5341.0], [6909.0, 4023.0], [6765.0, 6267.5], [6733.0, 4072.0], [6973.0, 5929.0], [6941.0, 7121.0], [7101.0, 3029.0], [7149.0, 6562.666666666667], [2063.0, 14906.5], [2239.0, 6676.5], [2423.0, 6018.5], [2383.0, 7568.5], [2495.0, 3812.40625], [2679.0, 14466.0], [2647.0, 14288.0], [2607.0, 2595.0], [2735.0, 88.25], [2943.0, 5710.533333333333], [2887.0, 13979.0], [3031.0, 6393.5], [3063.0, 6470.0], [3039.0, 5812.5], [2991.0, 2430.3333333333335], [3079.0, 391.3], [3199.0, 6818.666666666667], [3255.0, 616.75], [3263.0, 1193.0], [3295.0, 410.0], [3455.0, 6218.0], [3399.0, 13636.0], [3431.0, 14083.0], [3479.0, 13901.666666666666], [3655.0, 5586.4], [3663.0, 7019.742857142857], [3631.0, 13916.0], [3639.0, 13507.0], [3815.0, 13670.0], [3839.0, 13807.0], [3791.0, 2044.0], [3799.0, 450.0], [3743.0, 3676.0], [3759.0, 6637.666666666667], [3751.0, 4512.333333333333], [3727.0, 5309.5], [3719.0, 4822.75], [3735.0, 4235.0], [3959.0, 13386.0], [3967.0, 13633.0], [3951.0, 5299.5], [3903.0, 5383.0], [3847.0, 13800.0], [3887.0, 8009.5], [3895.0, 8022.0], [4095.0, 6686.0], [4063.0, 6062.0], [4047.0, 5748.5], [4039.0, 8258.0], [3999.0, 13528.0], [3983.0, 6869.0], [4023.0, 8151.0], [4007.0, 6835.5], [4222.0, 4230.0], [4206.0, 4373.0], [4142.0, 250.0], [4270.0, 6736.0], [4190.0, 4316.5], [4238.0, 5539.0], [4302.0, 4824.0], [4414.0, 1304.0], [4606.0, 1625.1666666666665], [4510.0, 7843.5], [4494.0, 8347.0], [4526.0, 4727.0], [4430.0, 1045.0], [4718.0, 5974.75], [4734.0, 4176.0], [5102.0, 5687.0], [4958.0, 1043.0], [4910.0, 6373.0], [4974.0, 1012.0], [5294.0, 3390.5], [5326.0, 455.0], [5310.0, 5838.6], [5246.0, 9511.0], [5230.0, 6184.333333333333], [5198.0, 7671.0], [5214.0, 4785.0], [5150.0, 3787.0], [5470.0, 718.0], [5518.0, 3291.0], [5406.0, 5204.333333333333], [5886.0, 5332.0], [5774.0, 3793.0], [6094.0, 6162.666666666668], [5902.0, 6395.0], [6078.0, 2587.2727272727275], [6030.0, 2355.9999999999995], [6126.0, 6247.0], [5918.0, 6897.0], [5998.0, 6266.222222222223], [5966.0, 5785.5], [6398.0, 5751.5], [6174.0, 2475.0], [6158.0, 4832.8], [6334.0, 3130.5], [6654.0, 5996.0], [6478.0, 4747.636363636363], [6462.0, 5982.0], [6814.0, 5886.0], [6766.0, 5520.333333333333], [6958.0, 2619.0], [6942.0, 6586.071428571428], [6974.0, 5944.0], [7150.0, 6591.0], [6990.0, 5085.0], [7198.0, 7012.0], [4223.0, 547.0], [4351.0, 1611.4], [4191.0, 3235.0], [4287.0, 9320.0], [4271.0, 5823.978723404255], [4159.0, 5554.0], [4127.0, 6739.0], [4607.0, 546.0], [4527.0, 2975.0], [4543.0, 13178.0], [4383.0, 7903.0], [4735.0, 7749.0], [5103.0, 4642.5], [4975.0, 1908.6666666666665], [4959.0, 2844.5], [4911.0, 3718.5], [4879.0, 7918.0], [5279.0, 6.0], [5327.0, 1284.2], [5295.0, 3784.0476190476193], [5375.0, 5097.5], [5231.0, 1540.666666666667], [5247.0, 4191.6], [5199.0, 4730.333333333333], [5471.0, 721.3333333333334], [5487.0, 11789.5], [5583.0, 11285.0], [5439.0, 5459.0], [5519.0, 7021.0], [5615.0, 5735.0], [5887.0, 6513.666666666667], [5647.0, 5112.0], [6127.0, 5267.0], [6111.0, 4789.0], [5999.0, 5078.0], [5951.0, 6886.0], [6383.0, 5393.909090909091], [6399.0, 3662.333333333333], [6335.0, 5985.0], [6159.0, 5390.142857142857], [6271.0, 1056.0], [6495.0, 3540.25], [6607.0, 1625.0], [6479.0, 4029.6666666666665], [6527.0, 5441.5], [6463.0, 4420.000000000001], [6783.0, 7909.0], [6735.0, 6104.0], [6911.0, 4927.0], [6943.0, 5499.095238095238], [6975.0, 6470.0], [7167.0, 6689.0], [7007.0, 4988.333333333333], [7215.0, 6590.0], [7247.0, 6698.5], [1.0, 8818.0]], "isOverall": false, "label": "HTTP Request Dashboard", "isController": false}, {"data": [[3961.6601000000146, 6709.243599999974]], "isOverall": false, "label": "HTTP Request Dashboard-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 7253.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 4479.25, "minX": 1.69772454E12, "maxY": 804529.1, "series": [{"data": [[1.69772454E12, 804529.1]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.69772454E12, 4479.25]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.69772454E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 6709.243599999974, "minX": 1.69772454E12, "maxY": 6709.243599999974, "series": [{"data": [[1.69772454E12, 6709.243599999974]], "isOverall": false, "label": "HTTP Request Dashboard", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.69772454E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 2598.051000000004, "minX": 1.69772454E12, "maxY": 2598.051000000004, "series": [{"data": [[1.69772454E12, 2598.051000000004]], "isOverall": false, "label": "HTTP Request Dashboard", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.69772454E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 4398.8102000000035, "minX": 1.69772454E12, "maxY": 4398.8102000000035, "series": [{"data": [[1.69772454E12, 4398.8102000000035]], "isOverall": false, "label": "HTTP Request Dashboard", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.69772454E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 8.0, "minX": 1.69772454E12, "maxY": 23873.0, "series": [{"data": [[1.69772454E12, 23873.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.69772454E12, 19069.4]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.69772454E12, 21797.139999999992]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.69772454E12, 19849.8]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.69772454E12, 8.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.69772454E12, 14084.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.69772454E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 121.5, "minX": 1.0, "maxY": 19526.0, "series": [{"data": [[622.0, 7937.0], [724.0, 11486.5], [766.0, 13018.0], [880.0, 14465.0], [57.0, 3570.0], [1022.0, 7025.5], [1180.0, 9828.0], [1168.0, 13669.0], [76.0, 16444.5], [87.0, 19526.0], [89.0, 17344.0], [90.0, 15381.0], [112.0, 1138.5], [123.0, 5808.0], [122.0, 14183.0], [128.0, 6349.5], [131.0, 19046.0], [149.0, 18017.0], [157.0, 4737.0], [174.0, 14758.0], [244.0, 10338.0], [1.0, 17477.0], [272.0, 218.5], [398.0, 15349.0], [422.0, 16117.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[133.0, 141.0], [157.0, 867.5], [622.0, 5631.0], [724.0, 6835.0], [766.0, 6192.0], [215.0, 326.0], [880.0, 6026.5], [57.0, 303.0], [244.0, 5011.0], [1022.0, 4982.0], [1180.0, 5846.0], [1168.0, 7598.0], [330.0, 6336.5], [89.0, 4910.5], [398.0, 7056.5], [422.0, 5021.0], [112.0, 121.5], [123.0, 716.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1180.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 19513.0, "series": [{"data": [[622.0, 7926.0], [724.0, 11486.5], [766.0, 12954.5], [880.0, 14461.0], [57.0, 3570.0], [1022.0, 7025.5], [1180.0, 9828.0], [1168.0, 13649.0], [76.0, 16424.0], [87.0, 19513.0], [89.0, 17334.0], [90.0, 15347.0], [112.0, 1138.5], [123.0, 5808.0], [122.0, 14183.0], [128.0, 6341.0], [131.0, 19046.0], [149.0, 18017.0], [157.0, 4717.0], [174.0, 14738.0], [244.0, 10338.0], [1.0, 17476.0], [272.0, 217.0], [398.0, 15334.0], [422.0, 16102.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[133.0, 0.0], [157.0, 0.0], [622.0, 0.0], [724.0, 0.0], [766.0, 0.0], [215.0, 0.0], [880.0, 0.0], [57.0, 0.0], [244.0, 0.0], [1022.0, 0.0], [1180.0, 0.0], [1168.0, 0.0], [330.0, 0.0], [89.0, 0.0], [398.0, 0.0], [422.0, 0.0], [112.0, 0.0], [123.0, 0.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1180.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 166.66666666666666, "minX": 1.69772454E12, "maxY": 166.66666666666666, "series": [{"data": [[1.69772454E12, 166.66666666666666]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.69772454E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 36.416666666666664, "minX": 1.69772454E12, "maxY": 92.26666666666667, "series": [{"data": [[1.69772454E12, 36.416666666666664]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.69772454E12, 92.26666666666667]], "isOverall": false, "label": "Non HTTP response code: org.apache.http.conn.HttpHostConnectException", "isController": false}, {"data": [[1.69772454E12, 37.983333333333334]], "isOverall": false, "label": "Non HTTP response code: java.net.BindException", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.69772454E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 36.416666666666664, "minX": 1.69772454E12, "maxY": 130.25, "series": [{"data": [[1.69772454E12, 130.25]], "isOverall": false, "label": "HTTP Request Dashboard-failure", "isController": false}, {"data": [[1.69772454E12, 36.416666666666664]], "isOverall": false, "label": "HTTP Request Dashboard-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.69772454E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 36.416666666666664, "minX": 1.69772454E12, "maxY": 130.25, "series": [{"data": [[1.69772454E12, 36.416666666666664]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.69772454E12, 130.25]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.69772454E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

